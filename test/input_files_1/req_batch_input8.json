{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here."}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials "}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nADFS Integrations \n\n--Description--\nI am not able to ADFS Integration on Redmine "}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nredmine_cost_admin plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which allow:\r\n\r\n* registering contracts of the users\r\n* converting estimated hours and spent hours into money amount\r\n* registering budgets and expenses per project\r\n\r\nIf this plugin help your organization, I'm happy w"}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do."}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries."}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nSQL custom query\n\n--Description--\ndear friend,\r\nI would like to get help with a custom query which I can get data from Redmine Database with below field and condition\r\nIssue ID/ Tracker/ Subject / Author/ Assignee / Created / Start time / Closed / Status /Custom field 1/ Custom field 2 / Category / Priority\r\nand the condition to get data from date to date ( between ddmmyyyy - ddmmyyyy)\r\nthank you so much !\r\n"}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow do I make the standard fields to be required\n\n--Description--\nI see how we do it for custom and can use workflow for fields to make it required by user/tracker but I was looking for an across the board solution\n\n-- Ticket2\n--Subject--\n\"First Name\" and \"Last Name\" as mandatory fields?\n\n--Description--\nIs there a reason to have the \"First Name\" and \"Last Name\" as mandatory fields for registration ?\r\nIMHO is quite privacy unfriendly\r\nsuch personal information is not necessary to contribute to a project\r\n\r\nWould be nice to make these fields not mandatory by default."}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to move custom fields before the built-in fields\n\n--Description--\nI would like to know whether it's possible to move a custom field before built-in ones (e.g., description)?\r\n\r\nThis is important in cases where we want the dev team see/fill-in a field before the description or even subject.\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to move custom fields before the built-in fields\n\n--Description--\nI would like to know whether it's possible to move a custom field before built-in ones (e.g., description)?\r\n\r\nThis is important in cases where we want the dev team see/fill-in a field before the description or even subject.\n\n-- Ticket2\n--Subject--\nTracker based field ordering.\n\n--Description--\nCurrently you can define only order of custom fields only. Standard fields are non sortable and always top of list.\r\nIt would be nice to be able to sort these fields separately for each trackers.\r\n"}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\".\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nChange the text of the user link when converting @user notation to html\n\n--Description--\n#13919 added the Mention feature to Redmine.\r\nThere are three types of notations that can be converted to user links: @@user@, @user#1@, and @user:user@. With this change, only @@user@ will have the Mention feature.\r\n\r\nCurrently, when you convert @jsmith to HTML, you get the link \"John Smith\".\r\nI propose to change this to the following:\r\n* Plan 1. @John Smith\r\n* Plan 2. @jsmith(John Smith)\r\n* Plan 3. @jsmith\r\n\r\nReason for change:\r\n* The functions are different from those of other @user#1@ and @user:user@ notations and should be separated.\r\n* I think it's important to have @ in front of the name so that people who don't know much about Redmine realize that they can use the Mention feature.\r\n\r\nConcerns:\r\nSince @jsmith has always been assumed to be converted to \"John Smith\", changing it may break the display of wiki pages and issues.\r\n\r\nPlease let me know what you think."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?\n\n-- Ticket2\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case."}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?\n\n-- Ticket2\n--Subject--\nDisable API authentication with username and password when two-factor authentication is enabled for the user\n\n--Description--\nIn Redmine 4.2, two-factor authentication has been introduced.\r\n\r\nWhen two-factor authentication is enabled, it becomes difficult for an attacker to log in to Redmine even if he knows the username and password.\r\n\r\nHowever, API authentication is not covered by two-factor authentication. Currently, there are three methods of API authentication:\r\n\r\n1. send the user's API key via X-Redmine-API-Key header\r\n2. basic authentication with the user's API key ( username is the API key and password is a random string)\r\n3. basic authentication with user name and password\r\n\r\nIf you have two-factor authentication enabled, I think the third method will be problematic. This is because even though the web UI can prevent an attacker from logging in with an illegally obtained username and password, they can still use that username and password to access the data via the API.\r\n\r\nTo address this risk, I suggest disabling basic authentication with username and password for users who have two-factor authentication enabled.\r\n"}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?\n\n-- Ticket2\n--Subject--\nAdd \"auth_source_id\" to GET request for Endpoint /users.:format\n\n--Description--\nIn our Redmine installation we have both local users and users from our LDAP service. It would be very helpful for our user management if we could filter for \"auth_source_id\" in a GET request for the endpoint /users.:format. \r\n\r\nExample:\r\nGET /users.json?limit=100&auth_source_id=1\r\n\r\n"}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs."}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nSupport for Git repositories with default branch \"main\"\n\n--Description--\nSince GitHub renamed the default branch name from \"master\" to \"main\" in 2020, more and more Git repositories in the world have the default branch of \u201cmain\u201d instead of \u201cmaster\u201d. However, Redmine does not recognize \"main\" branch as the default branch.\r\nhttps://github.com/github/renaming\r\n\r\nAfter applying the attached patch, \"main\" will be recognized as the default branch in addition to \"master\"."}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issue and issue journal\n\n--Description--\nWhen you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.\r\n\r\nI think it would be convenient to be able to copy a simple URL from the view.\r\n\r\n* URL of the issue to be copied\uff1a @https://<your redmine>/issues/1@\r\n* URL of the issue journal to be copied\uff1a @http://<your redmine>/issues/1#note-1@"}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd total estimated hours, spent hours, total spent hours for issues to issue list API\n\n--Description--\nThe issue index API currently does not return total estimated hours, spent hours and total spent hours, although the issue show API does show those fields."}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAbility to obsolete an uploaded file\n\n--Description--\nSimilar to how bugzilla does it. The file is still there, but crossed out, to emphasize that it's been superseded by the newer attachment."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow to disable feature attachment\n\n--Description--\nAttachment max. size\r\nshould be as\r\nAttachment max. size (zero for disabling feature)\r\n"}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd ability to configure limit of attachments at once\n\n--Description--\nCurrently there is a hard limit of only 10 attachments per change of an issue. It would be nice if this was configurable or removed completely if possible.\r\n\r\nI'm wondering if there was a specific reason why this limit was added in the first place.\r\n\r\nRelated Issue: #18555, #8579\r\nThis is the code in question: source:/trunk/public/javascripts/attachments.js#L6"}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)"}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nReject CSV file without data row when importing\n\n--Description--\nIt is suggested to display a message indicating that there is no data when trying to import a file that has no data.\r\n\r\n!{width:400px;border:1px solid grey;}message-no-data.png!"}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd configurable setting for copying attachments when copying an issue\n\n--Description--\nWhen copying an issue, you can select the following behaviors:\r\n\r\n1. whether to make a relation between source and destination issues\r\n2. whether to copy attachments\r\n\r\nAnd the former has a setting to set the default behavior (#18500). However, the latter does not.\r\n\r\nI think it should also be possible to configure the default behavior whether to copy attachments or not.\r\n\r\n!{width: 623px; border: 1px solid grey;}.setting-copy-attachments-on-copy.png!"}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nPersian Solar Calendar is needed\n\n--Description--\nHi,\r\nThere is a lack of Persian Solar Calendar (Hejri Shamsi or \u0647\u062c\u0631\u06cc \u0634\u0645\u0633\u06cc). \r\nThis calendar as the most accurate calendar in the world (http://en.wikipedia.org/wiki/Iranian_calendars) is used by more than 100 milion people and is really lacked here in this greate bug tracking software i.e. Redmine.\r\nThanks"}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nsolar calendar\n\n--Description--\nHi dears\r\nI have been following the solar calendar for Redmine for a long time, but I didn't find any results,\r\nPeople who have done this before are from older versions of Redmine.\r\nIs it possible to create a plugin in this regard?"}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nUpdate Rails to 5.2.3\n\n--Description--\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/\r\n"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nAs released on May 18, 2020 with the following \"announcement\":https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/:\r\n> Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.\r\n> \r\n> Both releases contain the following fixes:\r\n> \r\n> [CVE-2020-8162] Circumvention of file size limits in ActiveStorage\r\n> [CVE-2020-8164] Possible Strong Parameters Bypass in ActionPack\r\n> [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore\r\n> [CVE-2020-8166] Ability to forge per-form CSRF tokens given a global CSRF token\r\n> [CVE-2020-8167] CSRF Vulnerability in rails-ujs\r\n\r\nNote: the fix for CVE-2020-8167 might also result in a requirement to manually update the bundled @rails-ujs@ code.\r\n\r\nI'll set this issue to _private_ given the possible implications."}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nSupport for Git repositories with default branch \"main\"\n\n--Description--\nSince GitHub renamed the default branch name from \"master\" to \"main\" in 2020, more and more Git repositories in the world have the default branch of \u201cmain\u201d instead of \u201cmaster\u201d. However, Redmine does not recognize \"main\" branch as the default branch.\r\nhttps://github.com/github/renaming\r\n\r\nAfter applying the attached patch, \"main\" will be recognized as the default branch in addition to \"master\"."}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nRuby 3.0 support\n\n--Description--\nRuby 3.0.0 has been released on 25 Dec 2020.\r\nhttps://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/\r\n"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nCommunicate end of 4.x development\n\n--Description--\nGiven:\r\n* the present Redmine release cycle;\r\n* the \"Maintenance Policy for Ruby on Rails\":https://guides.rubyonrails.org/maintenance_policy.html and the Rails release cycle;\r\n* the _assumption_ that Redmine will not bring major Rails upgrades (5.x <notextile>-></notextile> 6.x) in a minor 4.x release;\r\n* that the Rails 6.1 port has already been committed to the trunk;\r\n\r\nI conclude that it has been decided to end the 4.x development after the recent 4.2 release.\r\n\r\nYet, I see that this is not clear for (close) community members who are referring to a (potential) 4.3 release (see eg. #30820#note-15, #32424#note-36, #32424#note-37).\r\n\r\nThis could be solved by addressing this subject in a news post.\r\n"}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nSupport for MySQL > 5.7 or MariaDB\n\n--Description--\nGiven that I cannot see anything on the roadmap I'd like to ask what the state of MySQL support is. As stated on the Install page the latest officially supported release is MySQL 5.6, which has been EOL since February of 2021. MySQL 5.7 seems to work just fine but is not yet officially supported (it's on the roadmap for the next major release after 5.0!) and has an EOL date of October 2023 (aka slightly over 2 years from today). At the current speed of development I fear that MySQL will be EOL long before it is officially supported by Redmine. MariaDB is not supported at all.\r\n\r\nAny insight?"}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>"}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released"}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?"}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support.\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th.\n\n-- Ticket2\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n"}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate sanitization rules to allow footnotes markup to match the original structure\n\n--Description--\nThis is related to #35892.\r\n\r\nThe sanitisation rules should allow footnotes markup to render as they are generated by commonmark gem for easier customisations.\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate sanitization rules to allow footnotes markup to match the original structure\n\n--Description--\nThis is related to #35892.\r\n\r\nThe sanitisation rules should allow footnotes markup to render as they are generated by commonmark gem for easier customisations.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMutli language public queries\n\n--Description--\nI can't find any reference for this feature so I am making a request for one.\r\n\r\nPublic queries should display in user's language, perhaps one table called translations in database in key-value style can be used for translations.\r\n\r\nSo that saved queries can have reference to translation and based on user's language proper translation or default value is displayed...  \n\n-- Ticket2\n--Subject--\nTranslation for field values\n\n--Description--\nIt would be very nice when the values of fields can be translated in different languages. For example:\r\n1st user has choose language english -> So he see the ticket status \"new\" to choose\r\n2nd user has choose language german -> So he see the ticket status \"neu\" to choose"}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI need a \"comment creation date/time\" as a filtering item on my ticket!\n\n--Description--\nIn the ticket filtering, if you can filter tickets that have a comment in the \"Comment Creation Date\" field, you can extract tickets that have been created after that date.\r\n\r\nIf we can extract the tickets after that date, it will allow the Project Manager to efficiently check and respond to tickets that have been responded to.\r\n\r\n(Project Manager can check tickets and respond to comments when they are free.)\r\n(The Project Manager would like to check and respond to any comments made since the last time when he/she has a spare moment.)\r\n\r\nDescription.\r\n\r\nThe current filter function can extract tickets with an update date as a key.\r\nHowever, it does not know if that ticket is an update with comments or not.\r\n\r\nIn the ticket filtering, the \"Comment Creation Date\" field allows you to specify a date for tickets with comments.\r\nIf the ticket filtering function can extract tickets that were created after the date of the comment, it would be more efficient for the administrator to check for tickets that have been responded to.\r\nThis would allow the administrator to efficiently check for tickets that have been responded to.\r\n\r\nThank you in advance for your consideration.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI need a \"comment creation date/time\" as a filtering item on my ticket!\n\n--Description--\nIn the ticket filtering, if you can filter tickets that have a comment in the \"Comment Creation Date\" field, you can extract tickets that have been created after that date.\r\n\r\nIf we can extract the tickets after that date, it will allow the Project Manager to efficiently check and respond to tickets that have been responded to.\r\n\r\n(Project Manager can check tickets and respond to comments when they are free.)\r\n(The Project Manager would like to check and respond to any comments made since the last time when he/she has a spare moment.)\r\n\r\nDescription.\r\n\r\nThe current filter function can extract tickets with an update date as a key.\r\nHowever, it does not know if that ticket is an update with comments or not.\r\n\r\nIn the ticket filtering, the \"Comment Creation Date\" field allows you to specify a date for tickets with comments.\r\nIf the ticket filtering function can extract tickets that were created after the date of the comment, it would be more efficient for the administrator to check for tickets that have been responded to.\r\nThis would allow the administrator to efficiently check for tickets that have been responded to.\r\n\r\nThank you in advance for your consideration.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nEmail notification when watcher is added and removed\n\n--Description--\nAllow observers to be warned when they are inserted or removed from a task."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAutomatically Get Mail from Helpdesk Plugin\n\n--Description--\nnan"}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nAdd notification reason to the email instead of the default static email footer\n\n--Description--\nThe default email footer setting is:\r\n> You have received this notification because you have either subscribed to it, or are involved in it.\r\n> To change your notification preferences, please click here: http://hostname/my/account\r\nThis setting can be changed from Settings -> Notifications -> Email footer.\r\n\r\nThis approach have several issues:\r\n* the text can be removed by an admin\r\n* the text is not translatable\r\n* the text is too generic and the user cannot understand why he received that notification\r\n\r\nMy proposal is to replace this text with the real reason of why the user received the notification. In this phase, I propose the following reasons with the according translations:\r\n\r\n| *Reason* | *Message* | *Details* |\r\n| @INVOLVED@ | You have received this notification because you are involved in. | user is either author, assignee or previous assignee |\r\n| @MENTIONED@ | You have received this notification because you have been mentioned in. | user in mentioned in that event |\r\n| @SUBSCRIBED@ | You have received this notification because you have subscribed to it. | user is subscribed to that event |\r\n| @WATCHER@ | You have received this notification because you are watching it. | user is a watcher |\r\n| @ADMIN@ | You have received this security notification because you are an administrator. | user is an admin and he received a security notification |\r\n\r\nIn the future, we can add even a more granular reason for the involved reason: author, assignee or previous assignee.\r\n\r\nAlso, I propose to always display the text \"To change your notification preferences, please click here: %{link to my account}.\"\r\n\r\nBelow is an example from a security notification with both messages (first message is the new one; second message is the old one).\r\n!{border: 1px solid grey; width: 30%}sn.png!"}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5"}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAdd CSV export to Gantt\n\n--Description--\nThen it can be converted to Excel file for further reporting to clients"}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nDisplay and export project information\n\n--Description--\ncan we have report display all project information as  table  including custom fields  and can be exported to excel\r\n\r\n"}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nGroup by parent project\n\n--Description--\nHow do I export a list which includes the parent project name, or group by the parent project?"}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAPI to archive/unarchive projects\n\n--Description--\nnan"}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nDrag and drop upload files to issue via issue list screen\n\n--Description--\nAbility to upload files, when file is being dragged on issue when issues are listed in table on \r\n\r\n/projects/project-name/issues\r\n\r\nscreen.\r\n\r\nAbility to upload already exists on the issue create/edit screen.\r\n\r\nRedmine competitors like Monday.com have that feature which is very useful, in various project\r\nmanagement use-cases.\r\n\r\n!2021-10-21_08-59.png!"}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!\n\n-- Ticket2\n--Subject--\nMulti project csv import\n\n--Description--\nHi, now the issue import function is limited to a single project.\r\nWhy don't extend it to multiple project using his own column?"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC.\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC.\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC.\n\n-- Ticket2\n--Subject--\nDisable API authentication with username and password when two-factor authentication is enabled for the user\n\n--Description--\nIn Redmine 4.2, two-factor authentication has been introduced.\r\n\r\nWhen two-factor authentication is enabled, it becomes difficult for an attacker to log in to Redmine even if he knows the username and password.\r\n\r\nHowever, API authentication is not covered by two-factor authentication. Currently, there are three methods of API authentication:\r\n\r\n1. send the user's API key via X-Redmine-API-Key header\r\n2. basic authentication with the user's API key ( username is the API key and password is a random string)\r\n3. basic authentication with user name and password\r\n\r\nIf you have two-factor authentication enabled, I think the third method will be problematic. This is because even though the web UI can prevent an attacker from logging in with an illegally obtained username and password, they can still use that username and password to access the data via the API.\r\n\r\nTo address this risk, I suggest disabling basic authentication with username and password for users who have two-factor authentication enabled.\r\n"}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC.\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC.\n\n-- Ticket2\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nEnable task list items for CommonMark text formatting\n\n--Description--\nThe task list extensions will be a very nice addition for Common Mark text formatting.\r\n\r\nhttps://github.com/gjtorikian/commonmarker#extensions"}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated"}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nSupport for MySQL > 5.7 or MariaDB\n\n--Description--\nGiven that I cannot see anything on the roadmap I'd like to ask what the state of MySQL support is. As stated on the Install page the latest officially supported release is MySQL 5.6, which has been EOL since February of 2021. MySQL 5.7 seems to work just fine but is not yet officially supported (it's on the roadmap for the next major release after 5.0!) and has an EOL date of October 2023 (aka slightly over 2 years from today). At the current speed of development I fear that MySQL will be EOL long before it is officially supported by Redmine. MariaDB is not supported at all.\r\n\r\nAny insight?"}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nExtend config.ru to support sub-uri ootb and cleanup all wiki pages\n\n--Description--\nHi folk,\r\n\r\nAlmost all of the solutions on the wiki pages are outdated and either never worked or don't work anymore with version 4.x as discussed several times. From my point of view, the only sensible way is to extend config.ru. This approach works as expected. Unfortunately, I have wasted days over past few years at this point trying to get Redmine working under a sub-URI. This even led to me losing almost all of my beautiful hair. And just as ugly as it makes me look now, is trying through all the possibilities enumerated over several wiki pages.\r\n\r\nMy suggestion: The config.ru should therefore look like this out-of-the-box:\r\n\r\n<pre>\r\n# This file is used by Rack-based servers to start the application.\r\n\r\nrequire ::File.expand_path('../config/environment', __FILE__)\r\nmap ENV['REDMINE_RELATIVE_URL_ROOT'] || '/' do\r\n    run RedmineApp::Application\r\nend\r\n</pre>\r\n\r\nThis can then be used to configure the Docker image by one variable, for example if you want to update a legacy system and can't reassign the uri because of backwards compatibility.\r\n\r\nThe config.ru would be usable unchanged with the default configuration and optionally for people who want or need to run redmine under a sub-URI.\r\n\r\nIs there anything against changing the delivered config.ru in the codebase as mentioned above?\r\n\r\nTHX\r\nTiemo"}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.\n\n-- Ticket2\n--Subject--\nLoad and use bash/system ENV variables in config YML files \n\n--Description--\nIn some scenarios, where Redmine is automatically deployed, \r\nit would be of good use to read EXPORT or ENV variables and use them in config .yml files like database.yml\r\n\r\nFor example like elsastic\r\nhttps://www.elastic.co/guide/en/beats/winlogbeat/current/using-environ-vars.html\r\n\r\n<pre>\r\nexport DB-NAME = \"something\" \r\n\r\n</pre>\r\nand in yml file \r\n<pre>\r\nproduction:\r\n  database: ${DB-NAME}\r\n\r\n</pre>"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\nTracker based field ordering.\n\n--Description--\nCurrently you can define only order of custom fields only. Standard fields are non sortable and always top of list.\r\nIt would be nice to be able to sort these fields separately for each trackers.\r\n"}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\ndefault value for user_custom_field\n\n--Description--\nHi Everyone\r\n\r\nIn attachment I sent the screen when I created my issue ,I created a custom user field called \"REFERENTE EDFS\" I want for each project , set default values of this list(i.e.  project 1  referente edfs (tommy and alex) , project 2 referente edfs ( Mike and john) ecc...\r\n\r\nThanks in advance \r\n\r\nTommy\r\n\r\n"}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nAllow sending account information when importing users\n\n--Description--\nCurrently, the user import feature (#33102) does not have a feature to send account information to newly created users. Since there is a \"Send account information to the user\" checkbox when adding users one by one from the web UI, I think there should be the same kind of feature for importing from CSV.\r\n\r\nThe \"Import users\" screen already has a \"Send email notifications during the import\" checkbox (#22771, currently not working when importing users). I think it would be better if the account information is sent when this checkbox is turned on."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.\n\n-- Ticket2\n--Subject--\nMulti project csv import\n\n--Description--\nHi, now the issue import function is limited to a single project.\r\nWhy don't extend it to multiple project using his own column?"}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nDisplay and export project information\n\n--Description--\ncan we have report display all project information as  table  including custom fields  and can be exported to excel\r\n\r\n"}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. "}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nGroup by parent project\n\n--Description--\nHow do I export a list which includes the parent project name, or group by the parent project?"}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nProject Activity Log\n\n--Description--\nWould like a log of project-level activities, such as when someone closes or reopens a project. \r\n\r\nWithout a log, there is no way to see who is doing project level changes, and no way to investigate problems."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nCSV export of issues report\n\n--Description--\nCSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.\r\n\r\n!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!"}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCSV export of project memberships\n\n--Description--\nproject members CSV is useful for recording member settings and checking whether users have excessive privileges.\r\n!{width: 500px; border: 1px solid #ccc}screenshot.png!\n\n-- Ticket2\n--Subject--\nOption to add project when adding users via csv file\n\n--Description--\nI think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually."}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndependent custom fields\n\n--Description--\nHi!\r\n\r\nIs it possible to make dependent custom fields or table(choose)?\r\nI need to link 2 fields: skill and level \r\n\r\nIs it even possible?\n\n-- Ticket2\n--Subject--\nHow to make specified item of two custom fileds can be linked.\n\n--Description--\nHi all,\r\n\r\nI got another request that need all you help,please refer to details as below,\r\nFor example,\r\n1.Create two custom fields.One with item A,B,C and another one with item E,F,G,H,I,J.\r\n2.If we choose item A in one custom field,we expect that only item E and F can show up \r\nin another custom field,how to implement it?"}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nKeyboard shortcuts\n\n--Description--\nIt would be so convinient and productive if redMine supports keyboard shortcuts like Trac or some nifty web apps.\r\nFor example,  press Ctrl+R to preview, Ctrl+S to submit, Ctrl+/ to enter search text, ...\r\n\r\nTo support above, we would only need to add \"accesskey\" attribute to elements (like input, a).\r\n\r\nThanks,"}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nForce passwords to contain specified character classes\n\n--Description--\nI would like to enforce strong password for users in redmine. As if now redmine will accept any four letter password. Is there a way that applicaton checks how strong a password is when a new user register in it.\r\n\r\nCan we implement any password generator with redmine?"}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials "}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nDisable API authentication with username and password when two-factor authentication is enabled for the user\n\n--Description--\nIn Redmine 4.2, two-factor authentication has been introduced.\r\n\r\nWhen two-factor authentication is enabled, it becomes difficult for an attacker to log in to Redmine even if he knows the username and password.\r\n\r\nHowever, API authentication is not covered by two-factor authentication. Currently, there are three methods of API authentication:\r\n\r\n1. send the user's API key via X-Redmine-API-Key header\r\n2. basic authentication with the user's API key ( username is the API key and password is a random string)\r\n3. basic authentication with user name and password\r\n\r\nIf you have two-factor authentication enabled, I think the third method will be problematic. This is because even though the web UI can prevent an attacker from logging in with an illegally obtained username and password, they can still use that username and password to access the data via the API.\r\n\r\nTo address this risk, I suggest disabling basic authentication with username and password for users who have two-factor authentication enabled.\r\n"}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nAdd native support for OIDC\n\n--Description--\nConsidering that:\r\n* Support for OpenID has been dropped (see #35755)\r\n* The \"only OIDC plugin\":https://www.redmine.org/plugins/redmine_openid_connect only supports version 3.4.x of redmine\r\n\r\nThere is currently no way to implement SSO in current and future versions of redmine, other than creating a custom plugin, which certainly requires in-depth knowledge of ruby on rails, putting it out of reach of many.\r\n\r\nI'm sure it would be useful to many of us redmine administrators to have redmine natively support OIDC."}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n\n\n-- Ticket2\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure."}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd timeout for thumbnail generation process\n\n--Description--\nWhen @Redmine::Thumbnail.generate@ generates thumbnails, some input files can take a very long time to generate thumbnails, causing Redmine to hang.\r\n\r\nToday, in my environment, Redmine tried to generate a thumbnail for a particular PDF file and it took almost an hour (3,521,455ms) and finally raised an error. Because there were multiple accesses to the issue with the PDF attached, all processes of Redmine were occupied with the generation of a thumbnail. As the result, all other requests were not accepted and users could not see any page of Redmine.\r\n\r\n<pre>\r\nCreating thumbnail failed (`convert /*****/*****.pdf[0] -thumbnail 100x100> png:-` failed with error:\r\nconvert-im6.q16: no images defined `png:-' @ error/convert.c/ConvertImageCommand/3229\r\n):\r\nCompleted 404 Not Found in 3521455ms (ActiveRecord: 13.3ms | Allocations: 27136)\r\n</pre>\r\n\r\nThe attached patch sets the timeout of @convert@ command to 10 seconds to prevent similar problems from occurring.\r\n\n\n-- Ticket2\n--Subject--\nShow PDF attachments and repo entries instead of downloading them\n\n--Description--\nFollowing up on #22058, I would like to propose, that also PDF files are shown directly instead of forcing downloads.\r\n\r\nThis applies to two use cases:\r\n\r\nh3. 1. Following a download link\r\n\r\nWhen following a download link, image are sent with @content-disposition: inline@, while all other files are sent with @attachment@. Since the some browsers is able to render PDF files directly (Firefox, Chrome, Safari, IE with Adobe Reader installed) and people are probably used to it, I think that extending this exception to PDF files is a reasonable change. If native PDF rendering within the browser is not supported, then a download will be initiated by the browser anyway.\r\n\r\nh3. 2. Displaying a PDF file in repository browser\r\n\r\nWhen accessing \"View\" within the file view in the repository browsers, Redmine currently forces a download of the PDF. Instead an iframe could be rendered which displays the PDF within the Redmine UI. Browser support for this use case is similar to No. 1.\r\n\r\n\r\n-------\r\n\r\nThe patch series is based on current trunk (r15332) plus the changes of #22482. If desired, I could isolate the changes further, to make them work without #22482.\r\n\r\nh3. @0004-Don-t-force-download-of-PDFs-but-show-in-browser-pre.patch@\r\n\r\nThe change updates @AttachmentsController@ and @RepositoryController@ to send PDF files with @content-disposition: inline@. (See first use case.)\r\n\r\nh3. @0005-Show-pdf-preview-for-repository-files-and-attachment.patch@\r\n\r\nThe change adds @attachments/pdf@ and @common/_pdf@ views to render PDF files in an iframe/object construct. (See second use case.)\r\n\r\nSince we cannot easily know the PDF\u2019s dimensions, the frame size follows the following rules:\r\n\r\n* it is as wide as possible (100%)\r\n* in general it is as high as it is wide\r\n* it is never higher than 80 % of the viewport (80vh), since we want to make sure, that there is always a bit of Redmine UI visible to avoid getting \u201ctrapped\u201d within the frame\r\n\r\nUsing a nested object/iframe structure was taken from http://pdfobject.com/static.html"}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd timeout for thumbnail generation process\n\n--Description--\nWhen @Redmine::Thumbnail.generate@ generates thumbnails, some input files can take a very long time to generate thumbnails, causing Redmine to hang.\r\n\r\nToday, in my environment, Redmine tried to generate a thumbnail for a particular PDF file and it took almost an hour (3,521,455ms) and finally raised an error. Because there were multiple accesses to the issue with the PDF attached, all processes of Redmine were occupied with the generation of a thumbnail. As the result, all other requests were not accepted and users could not see any page of Redmine.\r\n\r\n<pre>\r\nCreating thumbnail failed (`convert /*****/*****.pdf[0] -thumbnail 100x100> png:-` failed with error:\r\nconvert-im6.q16: no images defined `png:-' @ error/convert.c/ConvertImageCommand/3229\r\n):\r\nCompleted 404 Not Found in 3521455ms (ActiveRecord: 13.3ms | Allocations: 27136)\r\n</pre>\r\n\r\nThe attached patch sets the timeout of @convert@ command to 10 seconds to prevent similar problems from occurring.\r\n\n\n-- Ticket2\n--Subject--\nPDF rendering improvements when exporting an issue or a list of issues\n\n--Description--\nTwo PDF generation improvements:\r\n\r\n1. Currently, when rendering an issue PDF, macros are only expanded in the description, but not when rendering custom fields with fulltext formatting enabled. The patch changes the behaviour so that formatted full-width custom fields are rendered in the same way the description is rendered, fully interpreting macros. The behaviour for rendering normal-width custom fields is unchanged, probably it is better to leave it as is due to space constraints.\r\n2. Thumbnail macro output was not rendered properly (in the issue description and elsewhere) because the thumbnail image file could not be retrieved - the second patch extends @get_image_filename@ to check for thumbnail URLs and retrieve the proper file path in that case.\r\n\r\nBoth patches were initially developed for \"Planio\":https://plan.io/redmine-hosting ."}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd timeout for thumbnail generation process\n\n--Description--\nWhen @Redmine::Thumbnail.generate@ generates thumbnails, some input files can take a very long time to generate thumbnails, causing Redmine to hang.\r\n\r\nToday, in my environment, Redmine tried to generate a thumbnail for a particular PDF file and it took almost an hour (3,521,455ms) and finally raised an error. Because there were multiple accesses to the issue with the PDF attached, all processes of Redmine were occupied with the generation of a thumbnail. As the result, all other requests were not accepted and users could not see any page of Redmine.\r\n\r\n<pre>\r\nCreating thumbnail failed (`convert /*****/*****.pdf[0] -thumbnail 100x100> png:-` failed with error:\r\nconvert-im6.q16: no images defined `png:-' @ error/convert.c/ConvertImageCommand/3229\r\n):\r\nCompleted 404 Not Found in 3521455ms (ActiveRecord: 13.3ms | Allocations: 27136)\r\n</pre>\r\n\r\nThe attached patch sets the timeout of @convert@ command to 10 seconds to prevent similar problems from occurring.\r\n\n\n-- Ticket2\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example."}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd CSS class for relation type to related issues list\n\n--Description--\nThere is a function @css_classes_for@ in @IssueRelation@ but only used when displaying relation column in query results.\r\nIt's useful to add classes in relations list in issue details.\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditonal (or user defided) date formats\n\n--Description--\nThe configuration page allows for a limited list of pre-defined date formats.\r\nI would like to use a date format like \"%Y-%m-%d (CW%V.%u)\" to also display calendar weeks.\r\n\r\nIs there already a way how to define that? Maybe by adding the addtional format to the right source file.\r\nI could modify some language.yml file, but that is probably not the best solution.\r\n\n\n-- Ticket2\n--Subject--\nAllow to add custom fields of type date to calendar view\n\n--Description--\nOn the calendar view, there are visible start and due dates. We have more custom fields of date tye, like a deadline (it's the deadline to deliver an issue to the customer, it's not Due date, which is for our team). I need to render those values in the project's calendar view.\r\n\r\nThanx-a-lotta!"}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n\n\n-- Ticket2\n--Subject--\nNo more comments when ticket closed\n\n--Description--\nIs there a possibility to prevent users from commenting on closed tickets?"}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n\n\n-- Ticket2\n--Subject--\nTicket status closed\n\n--Description--\nHello\r\n\r\nafter the ticket status is \"closed\" several changes are still possible. For example one can add a comment or log the time.\r\nIs it possible to prevent this for special users?\r\n\r\nThanks"}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n\n\n-- Ticket2\n--Subject--\nPrevent close project\n\n--Description--\nPlease add feature to prevent closing project with opened tasks\r\n"}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries."}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n"}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example."}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues."}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nMove subtasks section on issues show view into a separate partial\n\n--Description--\nSubject says it all.\r\n\r\nI'll attach a patch that does this."}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAdd Total estimated/spent time issue query filters\n\n--Description--\nTotal estimated/spent time columns are, along with the estimated/spent time columns, present on the issue list. Simultaneously are their equivalent filters missing as issue query filters available for filtering (on) the issue list.\r\nI think it could be beneficial for users to have these two issue query filters added to the core by default."}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s).\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIt should be possible to set a due date on a subtask without affecting the parent task\n\n--Description--\nWhen setting a due date on a subtask, the parent tasks due date is set to same date and cant be changed later.\r\n\r\nI could understand the other way round, but just because a tasks subtask should be done tomorrow, it should not means that the parent task has to be done tomorrow. The other way round maybe.\r\n\r\nNote: this might also be Bug, but i am not sure.\r\n\r\nRedmine 5, ruby 2.7, mariadb 10 (mysql)\r\n\r\nThanks :)\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIt should be possible to set a due date on a subtask without affecting the parent task\n\n--Description--\nWhen setting a due date on a subtask, the parent tasks due date is set to same date and cant be changed later.\r\n\r\nI could understand the other way round, but just because a tasks subtask should be done tomorrow, it should not means that the parent task has to be done tomorrow. The other way round maybe.\r\n\r\nNote: this might also be Bug, but i am not sure.\r\n\r\nRedmine 5, ruby 2.7, mariadb 10 (mysql)\r\n\r\nThanks :)\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIt should be possible to set a due date on a subtask without affecting the parent task\n\n--Description--\nWhen setting a due date on a subtask, the parent tasks due date is set to same date and cant be changed later.\r\n\r\nI could understand the other way round, but just because a tasks subtask should be done tomorrow, it should not means that the parent task has to be done tomorrow. The other way round maybe.\r\n\r\nNote: this might also be Bug, but i am not sure.\r\n\r\nRedmine 5, ruby 2.7, mariadb 10 (mysql)\r\n\r\nThanks :)\n\n-- Ticket2\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>"}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIt should be possible to set a due date on a subtask without affecting the parent task\n\n--Description--\nWhen setting a due date on a subtask, the parent tasks due date is set to same date and cant be changed later.\r\n\r\nI could understand the other way round, but just because a tasks subtask should be done tomorrow, it should not means that the parent task has to be done tomorrow. The other way round maybe.\r\n\r\nNote: this might also be Bug, but i am not sure.\r\n\r\nRedmine 5, ruby 2.7, mariadb 10 (mysql)\r\n\r\nThanks :)\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIt should be possible to set a due date on a subtask without affecting the parent task\n\n--Description--\nWhen setting a due date on a subtask, the parent tasks due date is set to same date and cant be changed later.\r\n\r\nI could understand the other way round, but just because a tasks subtask should be done tomorrow, it should not means that the parent task has to be done tomorrow. The other way round maybe.\r\n\r\nNote: this might also be Bug, but i am not sure.\r\n\r\nRedmine 5, ruby 2.7, mariadb 10 (mysql)\r\n\r\nThanks :)\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nDefine Workflow per Project\n\n--Description--\nWe are using Redmine for our project management with Agile Plugin.\r\n\r\nI am unable to define workflows for multiple projects. I have created status and the workflow is also defined. \r\n\r\nLet's say for Project1 the workflow is \"InDiscussion->InDevelopment->InQA->ReadyForDeployment\"\r\n\r\nI would like to create a workflow for Project2 with workflow \"Start->Approve->Done\"\r\n\r\nLet me know how to achieve this.\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable\r\n  Ruby version                   2.6.5-p114 (2019-10-01) [x86_64-linux]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\nSCM:\r\n  Subversion                     1.7.14\r\n  Git                            1.8.3.1\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_agile                  1.5.4"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5"}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n"}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nExtension rest api\n\n--Description--\nGood afternoon. \r\nIs it possible to add a full response to a request to create / update a task through api? Also, please add a mechanism to track changes in the list of custom fields, including the removal of a custom field. \r\nIf all this has already been implemented, then please send the information. "}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom fields API\n\n--Description--\nThe description field is missing from the API response of @custom_fields#index@.\r\n\r\nThe attached patch adds this field.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd field separator option to CSV export dialog\n\n--Description--\nI would like to add a field separator option to the CVS export option form.\r\n\r\nBackground:\r\n\r\nIf I have set the language e.g. to English in my Redmine profile, the separator is taken from _config/locales/en.yml_ (@general_csv_separator@) and it is *comma*. If I have installed e.g. German Microsoft Office and try to open such a CSV, it expects that the separator is *semicolon*. Unfortunately, Microsoft Office doesn't offer to choose the separator prior opening a CSV file and always uses the default value.\r\n\r\n!field_separator_export_option.png!\r\n\r\nIt is also related to #37581, where many translations have set @general_csv_separator@ to different value than is expected in Microsoft Office.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuto guess file encoding when importing CSV file\n\n--Description--\nWhen importing a CSV file, file encoding is pre-selected according to general_csv_encoding in config/locales/*.yml. For example, \"CP932\" is selected by default when your language setting is Japanese.\r\n\r\nI often use CSV files with UTF-8 encoding, but it's a bother to re-select UTF-8 in the encoding drop-down every time.\r\n\r\nIt would be nice if Redmine auto guesses the file encoding when importing a CSV file. Redmine already auto guess file encoding when displaying attached files or repository contents using @Setting.repositories_encodings@.\r\n"}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details."}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here."}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nAdd links to spent time report table elements\n\n--Description--\nWhen working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine."}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n"}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nDisplay and export project information\n\n--Description--\ncan we have report display all project information as  table  including custom fields  and can be exported to excel\r\n\r\n"}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'"}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nAdd Total estimated/spent time issue query filters\n\n--Description--\nTotal estimated/spent time columns are, along with the estimated/spent time columns, present on the issue list. Simultaneously are their equivalent filters missing as issue query filters available for filtering (on) the issue list.\r\nI think it could be beneficial for users to have these two issue query filters added to the core by default."}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nExpose repository version via REST API\n\n--Description--\nFor Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.\r\n\r\nOr is there a more convenient workaround than the one mentioned above?"}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
