{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd links to Users, Projects and Versions (at least) in timelog report\n\n--Description--\nThis issue is extracted from 24568#note-8.\r\n\r\n*Before:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report_before.png!\r\n\r\n*After:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report.png!\r\n\r\n In this way, the locked users will have the grey out style and can be differentiated by the active users.\r\n\n\n-- Ticket2\n--Subject--\nRestrict log time for old days\n\n--Description--\nFor example any user have to log his spent time today or tomorrow.\r\nIf he try to log time for period more than yesterday - it should be not possible.\r\nThere are kind of users that sometimes log their time for period weeks ago and this is bad.\r\nIs there any suggestion how to prevent such things."}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nPermission to log time for another user\n\n--Description--\nThis patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)\r\n\r\nI never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.\r\n"}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nAdd links to spent time report table elements\n\n--Description--\nWhen working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine."}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  \n\n-- Ticket2\n--Subject--\nChange unit of time for time tracking\n\n--Description--\nFor the moment, the time spent is measured in hours.\r\nI'd like to customize it, to be able to set \"seconds\" or \"days\" for example.\r\n\r\nCould it be possible to have a parameter in project or global Redmine configuration to set a unit of time tracking?"}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated\n\n-- Ticket2\n--Subject--\nScript for import from JIRA\n\n--Description--\nI've attached \"migrate_from_jira.rake\", which was modeled on both the trac migration script, and jira2trac.rb which can be found at trac's home page.\r\n\r\nThough it isn't as polished as it could be, it gives better fidelity than jira2trac.rb + migrate_from_trac.rake, and hopefully it servers as a good starting point for any other tweaks needed to do a decent import.\r\n\r\nIt currently takes as input (as per jira2trac.rb), an xml dump of issue info from jira. Based on that, it imports projects, sub-projects, users, issue categories, issues, and issue comments."}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd ability to enable\\disable multiple columns on project list page\n\n--Description--\nCurrently all project list  displays on multiple columns. What about to add abbility to disable this feature? "}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nUsing the classical 'list' view on projects\n\n--Description--\nI believe quite a few versions back there was a 'list' like view, 1 project per 'row' almost on the project page, is it possible to regain this view?"}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd a description in a custom queries\n\n--Description--\nI have more than 40 different querys and it would be practical to be able to add to each one, a description of the results that it brings."}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nexport gantt chart to  csv file\n\n--Description--\ncan you add a feature to export gantt chart to csv file beside pdf and png format where pdf doesn't  support Arabic font\n\n-- Ticket2\n--Subject--\nAdd CSV export to Gantt\n\n--Description--\nThen it can be converted to Excel file for further reporting to clients"}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nexport gantt chart to  csv file\n\n--Description--\ncan you add a feature to export gantt chart to csv file beside pdf and png format where pdf doesn't  support Arabic font\n\n-- Ticket2\n--Subject--\nexpand & collapse gantt chart list\n\n--Description--\ncan you make the gantt chart list expandable and can be collapsed? so we can focus om a specific  issues?\r\n "}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nIn Ticket-Queries the \"new\" field \"total spent time\" is forgotten as totals-checkmark - see screenshot\n\n--Description--\nnan"}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.\n\n-- Ticket2\n--Subject--\nOption to keep last spent-time date on \"create and continue\"\n\n--Description--\nWhen you have to add time spent in previous days, \r\nit could be useful to \"continue\" adding entries on the date you previously inserted.\r\n\r\nWithout that our team often insert wrong dates because date it's being automatically resetted to \"now\""}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nVisually mark closed subprojects on parent project page\n\n--Description--\nThere is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.)."}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nMy Page Issues Block limit configurable\n\n--Description--\ni think it would be a nice and easy thing, to have the issue queries on the \u00bbmy page\u00ab changeable. currently they are hardcoded to 10, which make them a bit useless to our type of work environment.\r\n\r\n"}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow for calling users by their username\n\n--Description--\nThis is very popular function in modern tools (like GitHub, Slack, Jira, BitBucket...)\r\nIt should be possible to \"call\" the user by username (e.g. using @username syntax) in comments.\r\nAn suggestion box should be displayed while typing.\r\nCalled user should receive email notification and have his name highlighted in comment.\n\n-- Ticket2\n--Subject--\nMention user on issues and wiki pages using @user with autocomplete\n\n--Description--\nhttps://github.com/dwarburt/redmine-mention-plugin is ok, but I think would be awesome to have something like Github where it has an inline autocomplete for users etc. I think this should be built into the core plugins maybe?\r\n\r\nfor reference check this out https://github.com/tactivos/jquery-sew"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow for calling users by their username\n\n--Description--\nThis is very popular function in modern tools (like GitHub, Slack, Jira, BitBucket...)\r\nIt should be possible to \"call\" the user by username (e.g. using @username syntax) in comments.\r\nAn suggestion box should be displayed while typing.\r\nCalled user should receive email notification and have his name highlighted in comment.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nUsing the classical 'list' view on projects\n\n--Description--\nI believe quite a few versions back there was a 'list' like view, 1 project per 'row' almost on the project page, is it possible to regain this view?"}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome.\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'\n\n-- Ticket2\n--Subject--\nRestrict log time for old days\n\n--Description--\nFor example any user have to log his spent time today or tomorrow.\r\nIf he try to log time for period more than yesterday - it should be not possible.\r\nThere are kind of users that sometimes log their time for period weeks ago and this is bad.\r\nIs there any suggestion how to prevent such things."}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'\n\n-- Ticket2\n--Subject--\nChecking time tracking even if no hour spent\n\n--Description--\nFor the moment, we can only access the time tracking of a tracker if we have at least 1 hour spent.\r\nThe problem is that I don't count time spent in hour but in days, and I created custom fields.\r\nThe users sometimes put the real amount of hours spent, and sometimes \"0\", because they indicate that they spent \"X\" days.\r\n\r\nIs it possible to access the time tracking of a tracker even if we have no hour spent on it?"}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nImplement grouping issues by date (start, due, creation, update, closing dates)\n\n--Description--\n* group by date creation asc\r\n* group by date creation desc\r\n* group by date start asc\r\n* group by date start desc\r\n* group by date end asc\r\n* group by date end desc\r\n* group by date closing asc\r\n* group by date closing desc"}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n"}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nEnabling creating issue within the project regarding the subproject\n\n--Description--\nHey,\r\n\r\nIm managing many projects, which do not have trackers as they are something general. \r\nUnder each project I have a lot of subprojects, in which I do have trackers for issues creation. \r\nI would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject\r\nIs it possible to create such option? I could not find any info regarding it. \r\n\r\nThanks "}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n"}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween."}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nEnabling creating issue within the project regarding the subproject\n\n--Description--\nHey,\r\n\r\nIm managing many projects, which do not have trackers as they are something general. \r\nUnder each project I have a lot of subprojects, in which I do have trackers for issues creation. \r\nI would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject\r\nIs it possible to create such option? I could not find any info regarding it. \r\n\r\nThanks "}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam.\n\n-- Ticket2\n--Subject--\nShow previous comment version when editing an issue comment\n\n--Description--\nI am able to edit an issue comment. I want to give this right to the other users too. But currently there is nowhere a hint that the comment has been edited. The disadvantage is that a user can manipulate a conversation and nobody gehts knowledge of that.\r\n\r\nIt would be great if I could see how often a comment was edited and the user can have a look to the previous versions. If too hard, the small, but helpful alternative would be, to show the amount of edits and the author/time of the last edit."}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam.\n\n-- Ticket2\n--Subject--\nDisplay Issue Edit form Position according to comments chronological order\n\n--Description--\nSo I've set up my Redmine to display issue comments in reverse chronological order.\r\n\r\nI have an issue with hundreds of comments. When I hit Edit, the form is displayed at the very bottom of the page.\r\n\r\nTo me, it would make more sense that the Edit page shows above the latest comment, so there is no need to Scroll all the way up to see what are the latest comments as I am adding new ones.\r\n\r\nSo:\r\n\r\n- \"Show comments in chronological order\": Edit form is at the very bottom of the page\r\n- \"Show comments in reverse chronological order\": Edit form is displayed above the top comment\r\n\r\nDoes this makes sense?"}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam.\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n\n\n-- Ticket2\n--Subject--\nWiki Toolbar on Full Width Custom Fields\n\n--Description--\nUpon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  \r\n\r\nWhen editing an issue, fields with these options should also have the wiki toolbar displayed.\r\n\r\nWe were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:\r\n\r\n<pre>\r\n<% custom_field_values_full_width.each do |value| %>\r\n  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>\r\n  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>\r\n  </p>\r\n<% end %>\r\n</pre>\r\n\r\nNote that I'm not checking the Text Formatting option so all full width fields have the toolbar."}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required.\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required.\n\n-- Ticket2\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials "}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>"}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAdd bulk edit after save hook\n\n--Description--\nCorrect me if I'm mistaken, but now there only exists a @issue_bulk_edit_before_save@ controller hook. This makes it impossible to provide consistent behavior for plugins implementing edit_after_save controller hooks.\r\n\r\nSay, a user edits an issue via issue view and triggers a @issue_edit_after_save_hook@ which handles the issue in a proper way. The same is expected to happen when an issue is edited via context menu (right click) in any multiple issues view, but there is no way to provide that as @bulk_edit@ method is called for context menus and there is no @issue_bulk_edit_after_save@ hook which makes @issue_edit_after_save@ hook useless.\r\n\r\nI think it would be useful to have something like this in issues#bulk_edit controller method:\r\n\r\n<pre>\r\ndef bulk_edit\r\n  ...\r\n  @issues.each do |orig_issue|\r\n    ...\r\n\r\n    begin        \r\n      Issue.transaction do          \r\n        call_hook(:controller_issues_bulk_edit_before_save, { :params => params, :issue => issue })          \r\n        issue.save!          \r\n        call_hook(:controller_issues_bulk_edit_after_save,  { :params => params, :issue => issue })          \r\n      end        \r\n    saved_issues << issue\r\n    rescue ActiveRecord::RecordNotSaved => e        \r\n      unsaved_issues << orig_issue\r\n    end\r\n\r\n    ...\r\n  end\r\n  ...\r\nend\r\n</pre>\r\n\r\nHope someone can make a proper patch out of this or provide a better way of managing after_save hooks for bulk edit. Thanks."}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. \n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. \n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. \n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. \n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control.\n\n-- Ticket2\n--Subject--\nRestrict log time for old days\n\n--Description--\nFor example any user have to log his spent time today or tomorrow.\r\nIf he try to log time for period more than yesterday - it should be not possible.\r\nThere are kind of users that sometimes log their time for period weeks ago and this is bad.\r\nIs there any suggestion how to prevent such things."}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control.\n\n-- Ticket2\n--Subject--\nChange unit of time for time tracking\n\n--Description--\nFor the moment, the time spent is measured in hours.\r\nI'd like to customize it, to be able to set \"seconds\" or \"days\" for example.\r\n\r\nCould it be possible to have a parameter in project or global Redmine configuration to set a unit of time tracking?"}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control.\n\n-- Ticket2\n--Subject--\nAdd links to Users, Projects and Versions (at least) in timelog report\n\n--Description--\nThis issue is extracted from 24568#note-8.\r\n\r\n*Before:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report_before.png!\r\n\r\n*After:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report.png!\r\n\r\n In this way, the locked users will have the grey out style and can be differentiated by the active users.\r\n"}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control.\n\n-- Ticket2\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'"}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case\n\n-- Ticket2\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. "}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 5.2.3\n\n--Description--\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/\r\n\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAssign a task to multiple users\n\n--Description--\nIt would be great if it was possible to assign a task to multiple users; And have another state, \"being solved\",\r\nwhere a task is locked and \"assigned\" to a specific one.\r\n\r\nWhy: \r\n\r\nIn some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign\r\na task to several workers, and the first who gets available would then grab the task, setting the \"being solved\"\r\nto himself.\r\n"}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nSearch Assignee\n\n--Description--\nHello,\r\n\r\nIt will be very useful to have search for assigners when editing issue. I have a bunch of people I need to pick from, and a search as in watchers can be great. "}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot.\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>"}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated"}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow restrict auto create accounts for sender domains by list\n\n--Description--\nIt would be nice, if there would be a option(s) which restrict auto create accounts for new users only to specific sender domains.\n\n-- Ticket2\n--Subject--\nAbility to self-register only from ceratain domains\n\n--Description--\nCould you add ability to restrict email domains for new users by few domain zones (e.x. sysctem can approve xxx@domain.ru, xxx@domain2.ru but deny any other zones)? It's very useful feature in small company's without centralized account management.\r\n\r\nthank you!"}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nArchive/close a project via API\n\n--Description--\nHi!\r\n\r\nIt would be great to archive or close a project via the API"}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nPermits defining a default \"due date\"\n\n--Description--\nEach project has a \"due date\" (when working with clients). It would be awesome to permits to add a default \"due date\" for a project.\r\nFor each new issue, the \"due date\" will be filled by default."}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n"}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nChange unit of time for time tracking\n\n--Description--\nFor the moment, the time spent is measured in hours.\r\nI'd like to customize it, to be able to set \"seconds\" or \"days\" for example.\r\n\r\nCould it be possible to have a parameter in project or global Redmine configuration to set a unit of time tracking?"}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nShow button to create new version in issue form even if all versions are locked or closed\n\n--Description--\nIf all versions are closed or locked and there is no any version opened, there is no way to create new version when creating new issue or editing existing issue.\r\n\r\nWhen there are no opened versions the field \"Target version\" is not shown and the (+) button next to it is also not shown.\r\n\r\nI think that this is omission, because if there is at least one opened version, the (+) button for creating new version is shown."}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002"}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries."}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nShow previous comment version when editing an issue comment\n\n--Description--\nI am able to edit an issue comment. I want to give this right to the other users too. But currently there is nowhere a hint that the comment has been edited. The disadvantage is that a user can manipulate a conversation and nobody gehts knowledge of that.\r\n\r\nIt would be great if I could see how often a comment was edited and the user can have a look to the previous versions. If too hard, the small, but helpful alternative would be, to show the amount of edits and the author/time of the last edit."}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nShow button to create new version in issue form even if all versions are locked or closed\n\n--Description--\nIf all versions are closed or locked and there is no any version opened, there is no way to create new version when creating new issue or editing existing issue.\r\n\r\nWhen there are no opened versions the field \"Target version\" is not shown and the (+) button next to it is also not shown.\r\n\r\nI think that this is omission, because if there is at least one opened version, the (+) button for creating new version is shown."}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown\n\n-- Ticket2\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n"}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nMerge Issues\n\n--Description--\nFeature Request: Merge related issues\r\n\r\nThe idea would be to create a \"Merge Issue\" link next to the \"Duplicate\" and \"Delete\" links when viewing or updating Issues. Clicking it presents a box allowing you to enter an Issue number to merge with. Merging two issues combines all the comments and status updates chronologically (and of course presents an option to re-edit the title of the newly combined issue).\r\n\r\nThis would be super helpful! Sometimes issues are entered as separate tickets, when in fact they are the same or merely different aspects/perspectives on the same task. We don't want to just delete or close one of them, because they often contain useful comments relating to that particular aspect of the same task. Sorting through all the duplicate issues is a huge pain, but merging the issues would solve this problem."}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nImplement grouping issues by date (start, due, creation, update, closing dates)\n\n--Description--\n* group by date creation asc\r\n* group by date creation desc\r\n* group by date start asc\r\n* group by date start desc\r\n* group by date end asc\r\n* group by date end desc\r\n* group by date closing asc\r\n* group by date closing desc"}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nOption to keep last spent-time date on \"create and continue\"\n\n--Description--\nWhen you have to add time spent in previous days, \r\nit could be useful to \"continue\" adding entries on the date you previously inserted.\r\n\r\nWithout that our team often insert wrong dates because date it's being automatically resetted to \"now\""}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan"}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well."}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests.\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to add custom fields of type date to calendar view\n\n--Description--\nOn the calendar view, there are visible start and due dates. We have more custom fields of date tye, like a deadline (it's the deadline to deliver an issue to the customer, it's not Due date, which is for our team). I need to render those values in the project's calendar view.\r\n\r\nThanx-a-lotta!\n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control."}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nPermission to log time for another user\n\n--Description--\nThis patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)\r\n\r\nI never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.\r\n"}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRestrict log time for old days\n\n--Description--\nFor example any user have to log his spent time today or tomorrow.\r\nIf he try to log time for period more than yesterday - it should be not possible.\r\nThere are kind of users that sometimes log their time for period weeks ago and this is bad.\r\nIs there any suggestion how to prevent such things."}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nedit the time of the user\n\n--Description--\nhi \r\ni need to know how do i add time as a project manager for the user on the project. certain time i face this issue to add time manually like 3 months back time to be added manually. \r\ni need this feature for the projects managers and above "}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nOption to keep last spent-time date on \"create and continue\"\n\n--Description--\nWhen you have to add time spent in previous days, \r\nit could be useful to \"continue\" adding entries on the date you previously inserted.\r\n\r\nWithout that our team often insert wrong dates because date it's being automatically resetted to \"now\""}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd links to Users, Projects and Versions (at least) in timelog report\n\n--Description--\nThis issue is extracted from 24568#note-8.\r\n\r\n*Before:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report_before.png!\r\n\r\n*After:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report.png!\r\n\r\n In this way, the locked users will have the grey out style and can be differentiated by the active users.\r\n"}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well."}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to restrict time logging on certain tracker types\n\n--Description--\nI would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' \r\nIn the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'"}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to add timelogs in past\n\n--Description--\nThere is permission to edit time logs, \r\n\r\nBut, what's missing is +forbid to add time log for date in past+.\r\n\r\nThere are many use-cases where employees log time on daily basis, but should not \r\nbe able to log time retro-actively.\r\n\r\nEven if they don't have edit timelog permission, they can still log\r\ntime for days in past, which should be good to forbid.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Log Time\" feature controlled per Tracker\n\n--Description--\nCurrently, I can enable or disable \"Log Time\" per Role.\r\nI would like this to be a per-tracker setting to allow for more control."}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.\n\n-- Ticket2\n--Subject--\nAdd Rest API for activity\n\n--Description--\nI couldn't get the activities from the api. The \"Activity\" is the information shown in the tab in the website.\r\n\r\nWhen I tried to query like \r\n<pre>\r\ncurl http://server/pm/projects/12/wiki.json -H \"Content-Type: application/json\" -H \"X-Redmine-API-Key:<my key>\"\r\n</pre>\r\nI don't get the any values back. The server's log shows:\r\n<pre>\r\ntarted GET \"/pm/projects/12/activity.json\" for 192.168.1.6 at 2017-05-08 21:33:27 -0700\r\nProcessing by ActivitiesController#index as JSON\r\n  Parameters: {\"id\"=>\"12\"}\r\n  Current user: anonymous\r\nFilter chain halted as :check_if_login_required rendered or redirected\r\nCompleted 401 Unauthorized in 7ms (ActiveRecord: 1.8ms)\r\n</pre>\r\n\r\nIt seems like ActivitiesController does the authorization differently. By \"differently\", I mean it's different from other controllers such as those for issues. For example, when I query the issues like this:\r\n<pre>\r\ncurl http://server/pm/projects/12/issues.json -H \"Content-Type: application/json\" -H \"X-Redmine-API-Key: <my key>\"\r\n</pre>\r\n\r\nIt can return the values and the server's log shows\r\n<pre>\r\nStarted GET \"/pm/projects/12/issues.json\" for 192.168.1.6 at 2017-05-08 21:35:16 -0700\r\nProcessing by IssuesController#index as JSON\r\n  Parameters: {\"project_id\"=>\"12\"}\r\n  Current user: <my name> (id=7)\r\n  Rendered issues/index.api.rsb (12.3ms)\r\nCompleted 200 OK in 142ms (Views: 11.7ms | ActiveRecord: 25.6ms)\r\n</pre>\r\n\r\nThe user is definitely authorized for activities, as I can view them from the website. And it's seems like it is doing the authorization differently for the api."}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.\n\n-- Ticket2\n--Subject--\nOverly restricted number of ReST results\n\n--Description--\nCurrently, ReST queries are limited to 100 elements.\r\n\r\nThis makes it impossible to, e.g., retrieve all users in one query.\r\n\r\nGiven today's computing power, please check whether the limit can be lifted.\r\n\r\nA proposal is given in the attached patch."}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.\n\n-- Ticket2\n--Subject--\nUse correct http status codes\n\n--Description--\n1/ redmine ignores accept headers and jquery dataType attribute\r\n\r\nThe Accept request-header field can be used to specify certain media types which are acceptable for the response.\r\n\r\nIf no Accept header field is present, then it is assumed that the client accepts all media types. If an Accept header field is present, and if the server cannot send a response which is acceptable according to the combined Accept field value, then the server SHOULD send a 406 (not acceptable) response.\r\n\r\nhttp://api.jquery.com/jQuery.ajax/\r\n\r\nThe type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback)\r\n\r\nexamples:\r\n<pre>\r\ncurl -v -H http://demo.redmine.org/issues.json\r\n-> 200 + json OK!\r\n\r\nbut\r\ncurl -v -H \"Accept: application/json\" http://demo.redmine.org/issues\r\n-> 500 no builder for format\r\n\r\nexpected (with patch)\r\n-> 200 + json output\r\n</pre>\r\n\r\nin some cases html is returned even if json was requested\r\n\r\n2/ 406 error raises exception\r\n<pre>\r\ncurl -v http://demo.redmine.org/issues.xxx\r\n-> 406 + exception ActionController::UnknownFormat\r\n\r\nexpected (with patch)\r\n-> 406 no exception\r\n</pre>\r\n\r\n3/ csrf protection - useful to avoid exceptions because of site-scanner bots\r\n<pre>\r\ncurl -v -H \"Accept: text/javascript\" http://demo.redmine.org/issues/new\r\n-> 422 + exception ActionController::InvalidCrossOriginRequest: Security warning: an embedded <script> tag on another site requested protected JavaScript.\r\n\r\nexpected\r\n-> 400 - no exception\r\n</pre>"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.\n\n-- Ticket2\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n"}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs.\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'"}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nSearch Assignee\n\n--Description--\nHello,\r\n\r\nIt will be very useful to have search for assigners when editing issue. I have a bunch of people I need to pick from, and a search as in watchers can be great. "}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\".\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween."}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nCreate several relations at the same time via Issue Relations API\n\n--Description--\nHi,\r\nFor the moment it's possible to get all the relations of an issue and to post only one new relation. Could it be possible to POST an array of relations to make only one call?\r\nThanks."}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example.\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have."}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this."}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nEmail notification when watcher is added and removed\n\n--Description--\nAllow observers to be warned when they are inserted or removed from a task."}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nThis project is closed and read-only so please hidden all issue on mypage\n\n--Description--\nWhen a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case"}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot."}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance.\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)\n\n-- Ticket2\n--Subject--\nAbility to obsolete an uploaded file\n\n--Description--\nSimilar to how bugzilla does it. The file is still there, but crossed out, to emphasize that it's been superseded by the newer attachment."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)\n\n-- Ticket2\n--Subject--\nMerge Issues\n\n--Description--\nFeature Request: Merge related issues\r\n\r\nThe idea would be to create a \"Merge Issue\" link next to the \"Duplicate\" and \"Delete\" links when viewing or updating Issues. Clicking it presents a box allowing you to enter an Issue number to merge with. Merging two issues combines all the comments and status updates chronologically (and of course presents an option to re-edit the title of the newly combined issue).\r\n\r\nThis would be super helpful! Sometimes issues are entered as separate tickets, when in fact they are the same or merely different aspects/perspectives on the same task. We don't want to just delete or close one of them, because they often contain useful comments relating to that particular aspect of the same task. Sorting through all the duplicate issues is a huge pain, but merging the issues would solve this problem."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nSet note as private is bulk edit mode\n\n--Description--\nHello,\r\n\r\nSometimes, we want to add the same private note to multiple issues. Unfortunately, when you bulk edit issues, the checkbox to set the note as private is not present.\r\n\r\nIt would be good if we could set the private flag when using the bulk edit mode to add a note to multiple issues.\r\n\r\nThank you"}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAdd #ID into Import Feild for update issue properties\n\n--Description--\nWhen I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.\r\nSometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.\r\n\r\nSo I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.\r\nThe expect result view may like attached import.png."}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween."}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nEdit fields in the grid\n\n--Description--\nHi, I wanted to propose that somehow edit the fields of the issues in the grid be implemented.\r\nIt would be a quick way to edit the fields and grant extra features.\r\nThank you."}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nbulk edit issue by import CSV\n\n--Description--\nWe can import CSV to batch creating new issues.\r\nBut if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues activity gnats calendar tabs - too much real estate in high hand panel\n\n--Description--\nHi\r\n\r\nJust a thought - the right hand panel in the views mentioned above are given far too much real estate for the data they contains.\r\n\r\nFor example when I'm in the Issues view 1/3 of the screen is given to the right hand panel yet it only contains 3 small links and the rest of the panel is unused and coloured grey.\r\n\r\nBetter sizing can make better use of this portion of the window.\r\n\r\nI've attached a screen grab to give as an example.\r\n\r\nI use a MAC and it's the same in Safari and FF.\r\n\r\nI've tried it with a vanilla Turnkey Hub VM and that's how it is out of the box.\n\n-- Ticket2\n--Subject--\nFix hardcoded project-index width for webkit and mozilla browsers\n\n--Description--\nnan"}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.\n\n-- Ticket2\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!"}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow wiki toolbar for spent time custom fields with text formatting enabled\n\n--Description--\nBefore:\r\n!{width:70%; border: 1px solid grey}.before.png!\r\n\r\nUsing this patch:\r\n!{width:70%; border: 1px solid grey}.after.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow wiki toolbar for spent time custom fields with text formatting enabled\n\n--Description--\nBefore:\r\n!{width:70%; border: 1px solid grey}.before.png!\r\n\r\nUsing this patch:\r\n!{width:70%; border: 1px solid grey}.after.png!\r\n\n\n-- Ticket2\n--Subject--\nWiki Toolbar on Full Width Custom Fields\n\n--Description--\nUpon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  \r\n\r\nWhen editing an issue, fields with these options should also have the wiki toolbar displayed.\r\n\r\nWe were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:\r\n\r\n<pre>\r\n<% custom_field_values_full_width.each do |value| %>\r\n  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>\r\n  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>\r\n  </p>\r\n<% end %>\r\n</pre>\r\n\r\nNote that I'm not checking the Text Formatting option so all full width fields have the toolbar."}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow wiki toolbar for spent time custom fields with text formatting enabled\n\n--Description--\nBefore:\r\n!{width:70%; border: 1px solid grey}.before.png!\r\n\r\nUsing this patch:\r\n!{width:70%; border: 1px solid grey}.after.png!\r\n\n\n-- Ticket2\n--Subject--\nPreview and wiki toolbar for full width custom fields\n\n--Description--\nCurrently, full-width custom fields don't have preview feature and wiki toolbar.\r\n\r\nSince those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.\r\n\r\n!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!\r\n"}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc\n\n-- Ticket2\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example."}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd wiki bar to Time_Log\n\n--Description--\nIs it possible to add a wiki bar into custom_fields created onto the timelog form\n\n-- Ticket2\n--Subject--\nWiki Toolbar on Full Width Custom Fields\n\n--Description--\nUpon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  \r\n\r\nWhen editing an issue, fields with these options should also have the wiki toolbar displayed.\r\n\r\nWe were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:\r\n\r\n<pre>\r\n<% custom_field_values_full_width.each do |value| %>\r\n  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>\r\n  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>\r\n  </p>\r\n<% end %>\r\n</pre>\r\n\r\nNote that I'm not checking the Text Formatting option so all full width fields have the toolbar."}]}}
