{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example."}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nMove subtasks section on issues show view into a separate partial\n\n--Description--\nSubject says it all.\r\n\r\nI'll attach a patch that does this."}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd column project_id to Spent time report\n\n--Description--\nHello. can you add \"project_id\" to Spent time report.\r\nIf i upload several reports by time. And when build general reports in csv, then, if someone changed the name of the project over time, it will be very difficult to correlate them late. question, is it possible to somehow display unique id value?\n\n-- Ticket2\n--Subject--\nDisplay and export project information\n\n--Description--\ncan we have report display all project information as  table  including custom fields  and can be exported to excel\r\n\r\n"}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd column project_id to Spent time report\n\n--Description--\nHello. can you add \"project_id\" to Spent time report.\r\nIf i upload several reports by time. And when build general reports in csv, then, if someone changed the name of the project over time, it will be very difficult to correlate them late. question, is it possible to somehow display unique id value?\n\n-- Ticket2\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd column project_id to Spent time report\n\n--Description--\nHello. can you add \"project_id\" to Spent time report.\r\nIf i upload several reports by time. And when build general reports in csv, then, if someone changed the name of the project over time, it will be very difficult to correlate them late. question, is it possible to somehow display unique id value?\n\n-- Ticket2\n--Subject--\nExport spent time id in CSV file\n\n--Description--\nIt would be very useful, if the spent time id will be also exported to csv file."}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer project User Display Format\n\n--Description--\nIn *Settings > Display > User Display Format*, some general setup options exists. \r\n\r\nThere are some projects where I would prefer to have this User Display set up differently from the others and to give restricted access to clients.\r\nIs it possible to have this option for each project?\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer project User Display Format\n\n--Description--\nIn *Settings > Display > User Display Format*, some general setup options exists. \r\n\r\nThere are some projects where I would prefer to have this User Display set up differently from the others and to give restricted access to clients.\r\nIs it possible to have this option for each project?\n\n-- Ticket2\n--Subject--\nSettings for global and user default custom ProjectQuery\n\n--Description--\nA feature like this would be in line with #7360. It wouldn't need the project and user level defaults though. It would IMHO be a more complete (than r19505) solution to the need expressed in #32818.\r\n\r\nWith this feature, the @project_list_display_type@ setting added in r19505 can be removed."}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer project User Display Format\n\n--Description--\nIn *Settings > Display > User Display Format*, some general setup options exists. \r\n\r\nThere are some projects where I would prefer to have this User Display set up differently from the others and to give restricted access to clients.\r\nIs it possible to have this option for each project?\n\n-- Ticket2\n--Subject--\nSet standard columns in the ticket listing options based on projects\n\n--Description--\nCurrently this can only be set globally in the system configuration.\r\n\r\nBut since we have different types of projects, each with their own, user-defined fields, we cannot link these displays to the respective project.\r\n\r\nSo it would be great if the global setting option could be adapted in the individual project configurations"}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nUse correct http status codes\n\n--Description--\n1/ redmine ignores accept headers and jquery dataType attribute\r\n\r\nThe Accept request-header field can be used to specify certain media types which are acceptable for the response.\r\n\r\nIf no Accept header field is present, then it is assumed that the client accepts all media types. If an Accept header field is present, and if the server cannot send a response which is acceptable according to the combined Accept field value, then the server SHOULD send a 406 (not acceptable) response.\r\n\r\nhttp://api.jquery.com/jQuery.ajax/\r\n\r\nThe type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback)\r\n\r\nexamples:\r\n<pre>\r\ncurl -v -H http://demo.redmine.org/issues.json\r\n-> 200 + json OK!\r\n\r\nbut\r\ncurl -v -H \"Accept: application/json\" http://demo.redmine.org/issues\r\n-> 500 no builder for format\r\n\r\nexpected (with patch)\r\n-> 200 + json output\r\n</pre>\r\n\r\nin some cases html is returned even if json was requested\r\n\r\n2/ 406 error raises exception\r\n<pre>\r\ncurl -v http://demo.redmine.org/issues.xxx\r\n-> 406 + exception ActionController::UnknownFormat\r\n\r\nexpected (with patch)\r\n-> 406 no exception\r\n</pre>\r\n\r\n3/ csrf protection - useful to avoid exceptions because of site-scanner bots\r\n<pre>\r\ncurl -v -H \"Accept: text/javascript\" http://demo.redmine.org/issues/new\r\n-> 422 + exception ActionController::InvalidCrossOriginRequest: Security warning: an embedded <script> tag on another site requested protected JavaScript.\r\n\r\nexpected\r\n-> 400 - no exception\r\n</pre>"}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAuto guess file encoding when importing CSV file\n\n--Description--\nWhen importing a CSV file, file encoding is pre-selected according to general_csv_encoding in config/locales/*.yml. For example, \"CP932\" is selected by default when your language setting is Japanese.\r\n\r\nI often use CSV files with UTF-8 encoding, but it's a bother to re-select UTF-8 in the encoding drop-down every time.\r\n\r\nIt would be nice if Redmine auto guesses the file encoding when importing a CSV file. Redmine already auto guess file encoding when displaying attached files or repository contents using @Setting.repositories_encodings@.\r\n"}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nDynamic decimal separator, according to country setting\n\n--Description--\nCurrently, glide ratios must be entered with a point as a decimal separator. However, this is not common worldwide, in Germany the comma is used for this and the point as a thousand separator.\r\n\r\nIt would be great if Redmine could take this into account according to the country / language setting ..."}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n"}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nExport spent time report as PDF\n\n--Description--\nI guess this plugin doesnt work for redmine 5.x.\r\nI tried but couldn't start redmine with this plugin.\r\n"}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here.\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script."}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nEmail notification when watcher is added and removed\n\n--Description--\nAllow observers to be warned when they are inserted or removed from a task."}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd notification reason to the email instead of the default static email footer\n\n--Description--\nThe default email footer setting is:\r\n> You have received this notification because you have either subscribed to it, or are involved in it.\r\n> To change your notification preferences, please click here: http://hostname/my/account\r\nThis setting can be changed from Settings -> Notifications -> Email footer.\r\n\r\nThis approach have several issues:\r\n* the text can be removed by an admin\r\n* the text is not translatable\r\n* the text is too generic and the user cannot understand why he received that notification\r\n\r\nMy proposal is to replace this text with the real reason of why the user received the notification. In this phase, I propose the following reasons with the according translations:\r\n\r\n| *Reason* | *Message* | *Details* |\r\n| @INVOLVED@ | You have received this notification because you are involved in. | user is either author, assignee or previous assignee |\r\n| @MENTIONED@ | You have received this notification because you have been mentioned in. | user in mentioned in that event |\r\n| @SUBSCRIBED@ | You have received this notification because you have subscribed to it. | user is subscribed to that event |\r\n| @WATCHER@ | You have received this notification because you are watching it. | user is a watcher |\r\n| @ADMIN@ | You have received this security notification because you are an administrator. | user is an admin and he received a security notification |\r\n\r\nIn the future, we can add even a more granular reason for the involved reason: author, assignee or previous assignee.\r\n\r\nAlso, I propose to always display the text \"To change your notification preferences, please click here: %{link to my account}.\"\r\n\r\nBelow is an example from a security notification with both messages (first message is the new one; second message is the old one).\r\n!{border: 1px solid grey; width: 30%}sn.png!"}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5"}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nNew email notification option - Only for things I watch\n\n--Description--\nCurrently there is no way to stop receiving notifications on an issue I'm no longer have interest in. Because I'm always involved, the owner or assigned to.\r\nWith this option I would receive notifications only for issues I'm activelly watching.\r\n"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuto watch issues on issue creation\n\n--Description--\nSimilar to #4347 we propose adding an option to watch issues the user created. This would allow users to more finely control which issues they want to be notified about rather than having to select the \"only owner\" or \"only my events\" and receiving notifications for all the issues the user created. This will also allow in the future to replace the mail notification options with only having auto watching options."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nReceive e-mail replies to news and news comments\n\n--Description--\nCurrently e-mails sent in reply to notifications from news or news comments are ignored. The proposed patch adds the ability to import answers to news and news comments.\r\n\r\nThis patch requires https://www.redmine.org/issues/38273"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nStart date and due date in issue email notification\n\n--Description--\nnan"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd notification reason to the email instead of the default static email footer\n\n--Description--\nThe default email footer setting is:\r\n> You have received this notification because you have either subscribed to it, or are involved in it.\r\n> To change your notification preferences, please click here: http://hostname/my/account\r\nThis setting can be changed from Settings -> Notifications -> Email footer.\r\n\r\nThis approach have several issues:\r\n* the text can be removed by an admin\r\n* the text is not translatable\r\n* the text is too generic and the user cannot understand why he received that notification\r\n\r\nMy proposal is to replace this text with the real reason of why the user received the notification. In this phase, I propose the following reasons with the according translations:\r\n\r\n| *Reason* | *Message* | *Details* |\r\n| @INVOLVED@ | You have received this notification because you are involved in. | user is either author, assignee or previous assignee |\r\n| @MENTIONED@ | You have received this notification because you have been mentioned in. | user in mentioned in that event |\r\n| @SUBSCRIBED@ | You have received this notification because you have subscribed to it. | user is subscribed to that event |\r\n| @WATCHER@ | You have received this notification because you are watching it. | user is a watcher |\r\n| @ADMIN@ | You have received this security notification because you are an administrator. | user is an admin and he received a security notification |\r\n\r\nIn the future, we can add even a more granular reason for the involved reason: author, assignee or previous assignee.\r\n\r\nAlso, I propose to always display the text \"To change your notification preferences, please click here: %{link to my account}.\"\r\n\r\nBelow is an example from a security notification with both messages (first message is the new one; second message is the old one).\r\n!{border: 1px solid grey; width: 30%}sn.png!"}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nChange Issue Priority Due to Mail Subject\n\n--Description--\nHi to everyone,\r\n\r\nI have the following case: we often receive alert e-mails from our firewalls, NAS, etc...\r\n\r\nI would like to know if there is any formula to configure that when we receive one of these emails, through certain keywords present in the subject of the emails, a new issue can be registered with the priority status \"Immediate\".\r\n\r\nThank you in advance."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nTry importing journal replies as issue reply where applicable\n\n--Description--\nE-mails that are recognised as journal replies are currently discarded if the journal recognised from the message ID is invalid/not present anymore. This happens when a journal is deleted but may also happen when 2 redmine instances are used to send e-mails to each other."}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nReceive e-mail replies to news and news comments\n\n--Description--\nCurrently e-mails sent in reply to notifications from news or news comments are ignored. The proposed patch adds the ability to import answers to news and news comments.\r\n\r\nThis patch requires https://www.redmine.org/issues/38273"}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nIncrease limit of entries in json/xml and, preferably, make it configurable\n\n--Description--\nCurrently there is a limit on how many entries could be returned by JSON/XML API in one batch - 100 entries. This limit is hardcoded in Redmine core. Such a low limit makes requests to Redmine to be affected by RTT + it could put more load on DB. \r\n\r\nThe question is why this limit it not set to at least 500 (the default value for number of entries exported via CSV export API). Could this limit be made configurable just like for CSV?"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\nIncrease limit of entries in json/xml and, preferably, make it configurable\n\n--Description--\nCurrently there is a limit on how many entries could be returned by JSON/XML API in one batch - 100 entries. This limit is hardcoded in Redmine core. Such a low limit makes requests to Redmine to be affected by RTT + it could put more load on DB. \r\n\r\nThe question is why this limit it not set to at least 500 (the default value for number of entries exported via CSV export API). Could this limit be made configurable just like for CSV?"}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance.\n\n-- Ticket2\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nShow PDF attachments and repo entries instead of downloading them\n\n--Description--\nFollowing up on #22058, I would like to propose, that also PDF files are shown directly instead of forcing downloads.\r\n\r\nThis applies to two use cases:\r\n\r\nh3. 1. Following a download link\r\n\r\nWhen following a download link, image are sent with @content-disposition: inline@, while all other files are sent with @attachment@. Since the some browsers is able to render PDF files directly (Firefox, Chrome, Safari, IE with Adobe Reader installed) and people are probably used to it, I think that extending this exception to PDF files is a reasonable change. If native PDF rendering within the browser is not supported, then a download will be initiated by the browser anyway.\r\n\r\nh3. 2. Displaying a PDF file in repository browser\r\n\r\nWhen accessing \"View\" within the file view in the repository browsers, Redmine currently forces a download of the PDF. Instead an iframe could be rendered which displays the PDF within the Redmine UI. Browser support for this use case is similar to No. 1.\r\n\r\n\r\n-------\r\n\r\nThe patch series is based on current trunk (r15332) plus the changes of #22482. If desired, I could isolate the changes further, to make them work without #22482.\r\n\r\nh3. @0004-Don-t-force-download-of-PDFs-but-show-in-browser-pre.patch@\r\n\r\nThe change updates @AttachmentsController@ and @RepositoryController@ to send PDF files with @content-disposition: inline@. (See first use case.)\r\n\r\nh3. @0005-Show-pdf-preview-for-repository-files-and-attachment.patch@\r\n\r\nThe change adds @attachments/pdf@ and @common/_pdf@ views to render PDF files in an iframe/object construct. (See second use case.)\r\n\r\nSince we cannot easily know the PDF\u2019s dimensions, the frame size follows the following rules:\r\n\r\n* it is as wide as possible (100%)\r\n* in general it is as high as it is wide\r\n* it is never higher than 80 % of the viewport (80vh), since we want to make sure, that there is always a bit of Redmine UI visible to avoid getting \u201ctrapped\u201d within the frame\r\n\r\nUsing a nested object/iframe structure was taken from http://pdfobject.com/static.html"}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nPDF rendering improvements when exporting an issue or a list of issues\n\n--Description--\nTwo PDF generation improvements:\r\n\r\n1. Currently, when rendering an issue PDF, macros are only expanded in the description, but not when rendering custom fields with fulltext formatting enabled. The patch changes the behaviour so that formatted full-width custom fields are rendered in the same way the description is rendered, fully interpreting macros. The behaviour for rendering normal-width custom fields is unchanged, probably it is better to leave it as is due to space constraints.\r\n2. Thumbnail macro output was not rendered properly (in the issue description and elsewhere) because the thumbnail image file could not be retrieved - the second patch extends @get_image_filename@ to check for thumbnail URLs and retrieve the proper file path in that case.\r\n\r\nBoth patches were initially developed for \"Planio\":https://plan.io/redmine-hosting ."}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nLazy load inline images\n\n--Description--\nSet *lazy: loading* for images and thumbnail images that Redmine will display as follows:\r\n@<img src=\"image.jpg\" alt=\"...\" loading=\"lazy\">@\r\n\r\nlazy loading document: https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\r\nIt can be displayed more quickly, for example, when a issue has many comments and many images are displayed."}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nExport spent time report as PDF\n\n--Description--\nI guess this plugin doesnt work for redmine 5.x.\r\nI tried but couldn't start redmine with this plugin.\r\n"}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output.\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nEnable task list items for CommonMark text formatting\n\n--Description--\nThe task list extensions will be a very nice addition for Common Mark text formatting.\r\n\r\nhttps://github.com/gjtorikian/commonmarker#extensions"}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nAllow style attribute for HTML elements in CommonMark formatter\n\n--Description--\nThe CommonMark formatter introduced by #32424 currently does not allow style attribute for HTML elements.\r\n\r\nIf the attribute is allowed, you can decorate text as follows.\r\n\r\n<pre>\r\n<span style=\"color: red;\">IMPORTANT NOTICE</span>\r\n</pre>"}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?\n\n-- Ticket2\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown)."}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nCreating global (default) categories.\n\n--Description--\nIt would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.\r\n\r\nRedmine is the Best!!!"}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs."}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes.\n\n-- Ticket2\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nSearch Assignee\n\n--Description--\nHello,\r\n\r\nIt will be very useful to have search for assigners when editing issue. I have a bunch of people I need to pick from, and a search as in watchers can be great. "}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nRequest for reconsideration of removal of 'View all issues' link\n\n--Description--\nYesterday I started doing some development work on Redmine again. The first thing that I stumbled upon was that the 'View all issues' link in the issues sidebar was removed in r18304. Although I see the merit of its removal with #30294, it really annoys me not having that link available (to such an extend that I quickly created a \"small plugin\":/plugins/redmine_add_all_issues_link_in_issues_sidebar to restore it on the issues show view).\r\nThe reason for this annoyance is that it was the only way to clear the current, not-saved query straight from the issues show view without first going back to the issues index view and then subsequently clicking on the clear button. With the link on issues show it is possible to go back to the default issues list without the need of an additional click on the clear button to clear the in-memory query. All the other (currently available) links that go back to the issues index view (project menu and query links on the index show view) retain the current query.\r\n\r\nSo, to make a long story short, I'd like to request a reconsideration of the decision for the removal of this link. This is also rooted in the fact that I think more (power) users will be/have been bitten by this change.\r\n\r\nFTR:\r\n* I have no problems with the move of the other links ('Summary' and 'Import') to the drop-down menu. This request is just about the 'View all issues' link.\r\n* I haven't looked into the changes of the 'Spent time' sidebar yet, but the points of the 'Issues sidebar' might also apply to those views.\r\n* If the removal decision is indeed reverted then it would be viable to subsequently also revert the addition of the clear query buttons added in #31640, as they would become obsolete if the 'View all issues' link is added back in.\r\n* I am also ok if my request will be declined. I'll then just keep using my plugin to restore the old situation...\r\n"}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in the \"contains\" operator of text filters\n\n--Description--\nI extracted the attached patch from #35073#note-4. The patch posted by \"Jens Kr\u00e4mer\":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in \"contains\" operator of text filters. \r\n\r\n> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?\r\n\r\nIt seems that the patch has already been deployed to the production environment of Planio. See \"Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support\":https://support.plan.io/news/200\r\n"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Total estimated/spent time issue query filters\n\n--Description--\nTotal estimated/spent time columns are, along with the estimated/spent time columns, present on the issue list. Simultaneously are their equivalent filters missing as issue query filters available for filtering (on) the issue list.\r\nI think it could be beneficial for users to have these two issue query filters added to the core by default."}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n"}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  "}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002"}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nAdd a description in a custom queries\n\n--Description--\nI have more than 40 different querys and it would be practical to be able to add to each one, a description of the results that it brings."}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nMultiple search terms in the \"contains\" operator of text filters\n\n--Description--\nI extracted the attached patch from #35073#note-4. The patch posted by \"Jens Kr\u00e4mer\":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in \"contains\" operator of text filters. \r\n\r\n> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?\r\n\r\nIt seems that the patch has already been deployed to the production environment of Planio. See \"Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support\":https://support.plan.io/news/200\r\n"}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nAdd search capabilities in a list custom-field to improve the user expirience\n\n--Description--\nAdd search capabilities in a list custom-field when it is displayed as a drop-down list and also when it is displayed as checkboxes. This can improve the UX when a custom-field as hundreds or thousands of items. At this moment I need to scrool the entire list of items.\r\nThanks. "}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Counter to news\n\n--Description--\nIt would be great to have a counter for the news views...\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Counter to news\n\n--Description--\nIt would be great to have a counter for the news views...\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Counter to news\n\n--Description--\nIt would be great to have a counter for the news views...\n\n-- Ticket2\n--Subject--\nEnable to display watches count on issues list\n\n--Description--\nnan"}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nEscape values in LIKE statements to prevent injection of placeholders (_ or %)\n\n--Description--\nWhile not technically a security risk, LIKE queries with lots of placeholders can result in high database load, very slow query execution and therefore are a possible vector for denial of service attacks. Further, escaping the wildcard characters in actual query values now allows to actually search for values containing these characters.\r\n\r\nThe attached patches, which have been extracted from \"Planio\":https://plan.io/redmine-hosting are:\r\n\r\n* The first patch removes '%' signs from query strings used in the search test case. These did not matter until now since they just resulted in queries like @field LIKE '%%value%%'@, but now would be looking for a value with literal percent signs. Tests pass before and after that change.\r\n* Patches 2-4 add @sanitize_sql_like@ calls to the various places where we currrently generate sql LIKE statements. Corresponding tests are included.\r\n* The last patch is just a cosmetic change that replaces a @.send@ with a direct call since the called method is now public.\r\n"}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in the \"contains\" operator of text filters\n\n--Description--\nI extracted the attached patch from #35073#note-4. The patch posted by \"Jens Kr\u00e4mer\":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in \"contains\" operator of text filters. \r\n\r\n> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?\r\n\r\nIt seems that the patch has already been deployed to the production environment of Planio. See \"Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support\":https://support.plan.io/news/200\r\n"}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n\n\n-- Ticket2\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator."}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nEscape values in LIKE statements to prevent injection of placeholders (_ or %)\n\n--Description--\nWhile not technically a security risk, LIKE queries with lots of placeholders can result in high database load, very slow query execution and therefore are a possible vector for denial of service attacks. Further, escaping the wildcard characters in actual query values now allows to actually search for values containing these characters.\r\n\r\nThe attached patches, which have been extracted from \"Planio\":https://plan.io/redmine-hosting are:\r\n\r\n* The first patch removes '%' signs from query strings used in the search test case. These did not matter until now since they just resulted in queries like @field LIKE '%%value%%'@, but now would be looking for a value with literal percent signs. Tests pass before and after that change.\r\n* Patches 2-4 add @sanitize_sql_like@ calls to the various places where we currrently generate sql LIKE statements. Corresponding tests are included.\r\n* The last patch is just a cosmetic change that replaces a @.send@ with a direct call since the called method is now public.\r\n"}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMultiple search terms in the \"contains\" operator of text filters\n\n--Description--\nI extracted the attached patch from #35073#note-4. The patch posted by \"Jens Kr\u00e4mer\":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in \"contains\" operator of text filters. \r\n\r\n> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?\r\n\r\nIt seems that the patch has already been deployed to the production environment of Planio. See \"Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support\":https://support.plan.io/news/200\r\n"}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator."}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n"}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nMultiple search terms in the \"contains\" operator of text filters\n\n--Description--\nI extracted the attached patch from #35073#note-4. The patch posted by \"Jens Kr\u00e4mer\":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in \"contains\" operator of text filters. \r\n\r\n> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?\r\n\r\nIt seems that the patch has already been deployed to the production environment of Planio. See \"Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support\":https://support.plan.io/news/200\r\n"}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nRegular expression support for string/text type filters\n\n--Description--\nI suggest adding a new operator that does regular expression matching for string/text type filters.\r\n\r\nCurrently, string or text filters such as Subject, Description, and Notes use SQL's LIKE to find objects that match the given search string. Needless to say, support for regular expressions allows for more flexible searches. Since recent versions of MySQL, PostgreSQL, and SQLite allow regular expressions in the WHERE clause, I think it is possible to implement the new regexp operator."}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n"}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms.\n\n-- Ticket2\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n"}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?"}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud"}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nRSS Feed of all Projects\n\n--Description--\nFor my Browser-Bookmarks I need a RSS/Atom Feed, which delivers a list of all Projects. With a Link to each Ticket page.\r\nIt should be like here: https://www.redmine.org/projects\r\nBut the Atom-Feed on this page delivers the \"newest projects\" instead of \"all projects\" as in the HTML view.\r\nIs there any way to get this?\r\nThank you for your support."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n"}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n\n\n-- Ticket2\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nissue delete button confusion\n\n--Description--\nIn 3.4.3, if your last issue history item is only one or two lines, you end up with the history item delete button (trashcan) directly above the whole-issue delete button (trash can plus \"delete\") so that it is really unclear whether the \"delete\" text button goes with the history item or the whole issue, leading to accidental issue deletion.\r\n\r\nWe should add a separator between the history list and the item action buttons.\r\n\r\nTo reproduce: \r\n\r\n* Add a one line Note to an issue and save it.\r\n* look at the delete buttons a the bottom right corner of the page.  \r\n\r\n!redmine_issue.png! \r\n\r\nIf we put some <hr>'s in the issue show template (patch attached) it becomes obvious that the \"delete\" text does not go with the history item, but with the whole issue.\r\n\r\n!after_patch.png!"}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nRequest for reconsideration of removal of 'View all issues' link\n\n--Description--\nYesterday I started doing some development work on Redmine again. The first thing that I stumbled upon was that the 'View all issues' link in the issues sidebar was removed in r18304. Although I see the merit of its removal with #30294, it really annoys me not having that link available (to such an extend that I quickly created a \"small plugin\":/plugins/redmine_add_all_issues_link_in_issues_sidebar to restore it on the issues show view).\r\nThe reason for this annoyance is that it was the only way to clear the current, not-saved query straight from the issues show view without first going back to the issues index view and then subsequently clicking on the clear button. With the link on issues show it is possible to go back to the default issues list without the need of an additional click on the clear button to clear the in-memory query. All the other (currently available) links that go back to the issues index view (project menu and query links on the index show view) retain the current query.\r\n\r\nSo, to make a long story short, I'd like to request a reconsideration of the decision for the removal of this link. This is also rooted in the fact that I think more (power) users will be/have been bitten by this change.\r\n\r\nFTR:\r\n* I have no problems with the move of the other links ('Summary' and 'Import') to the drop-down menu. This request is just about the 'View all issues' link.\r\n* I haven't looked into the changes of the 'Spent time' sidebar yet, but the points of the 'Issues sidebar' might also apply to those views.\r\n* If the removal decision is indeed reverted then it would be viable to subsequently also revert the addition of the clear query buttons added in #31640, as they would become obsolete if the 'View all issues' link is added back in.\r\n* I am also ok if my request will be declined. I'll then just keep using my plugin to restore the old situation...\r\n"}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nConsider generalization of My page block mechanism for use on the Issues Reports view\n\n--Description--\nGiven the current implementation of the Issues Reports view it might be sensible to generalize the My page block mechanism and re-implement the Issues Reports view to use that generalization. This would provide:\r\n* addition of user personalization of the Issues Reports view\r\n* addition of plugin extensibility of the Issues Reports view"}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nPDF rendering improvements when exporting an issue or a list of issues\n\n--Description--\nTwo PDF generation improvements:\r\n\r\n1. Currently, when rendering an issue PDF, macros are only expanded in the description, but not when rendering custom fields with fulltext formatting enabled. The patch changes the behaviour so that formatted full-width custom fields are rendered in the same way the description is rendered, fully interpreting macros. The behaviour for rendering normal-width custom fields is unchanged, probably it is better to leave it as is due to space constraints.\r\n2. Thumbnail macro output was not rendered properly (in the issue description and elsewhere) because the thumbnail image file could not be retrieved - the second patch extends @get_image_filename@ to check for thumbnail URLs and retrieve the proper file path in that case.\r\n\r\nBoth patches were initially developed for \"Planio\":https://plan.io/redmine-hosting ."}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd a link to (with count of) targeted but not-estimated issues to versions show view\n\n--Description--\nThis feature request/proposal is loosely extracted from #1671#note-7:\r\n\r\n_Artem Vasiliev wrote:_\r\n> [...]\r\n> \r\n> Version page: show not estimated (undone) issues count.\r\n> Count is a link that leads to relevant issues list.\r\n> [...]\r\n\r\nCutout from screenshot posted in #1671#note-8 by Artem Vasiliev:\r\n\r\n!{width: 50%;}.2021-08-22_13-12-09.png!\r\n\r\nI think this feature, albeit with some less prominent coloring, can really ease version scheduling/planning."}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Admin/Users list to use the query system\n\n--Description--\nThis patch series that was extracted from \"Planio\":https://plan.io/redmine-hosting introduces a UserQuery\r\nand upgrades the Admin/Users list with corresponding filter, sort and (CSV) export capabilities.\r\nAlso introduced are a context menu and an option to delete multiple users at once. The third patch just\r\nadds flash messages to the (single) user deletion operation, for symmetry with the messages rendered by the bulk delete.\r\n\r\nThis relates to issues #4295, #18193, #21055 (probably there are more I didn't find)."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
