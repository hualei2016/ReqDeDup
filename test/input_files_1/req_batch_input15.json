{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd support for GitHub\n\n--Description--\nGitHub is the dominant player in version control, and it would be very appealing to new adopters to use Redmine."}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nEnable journaling on projects\n\n--Description--\nIt's so usefull to have history of project field and custom fields changes.\r\nAlso it's desirable about project settings changes."}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAutomatically recording activity into issue hours\n\n--Description--\nRedmine has a flexible framework but terrible UX.\r\n\r\nI am wishing for an automatic feature here.\r\n\r\nSince the activity of a user is recorded, why don't they be recorded as working hours related to particular issues, whether automatically or manually.  \r\n\r\nIt would be easier especially when someone is editing and expanding the contents of an issue, the working hours should be contributed to that issue."}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan"}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072"}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\"."}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project"}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket"}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n"}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though."}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nReceive e-mail replies to news and news comments\n\n--Description--\nCurrently e-mails sent in reply to notifications from news or news comments are ignored. The proposed patch adds the ability to import answers to news and news comments.\r\n\r\nThis patch requires https://www.redmine.org/issues/38273"}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nProvide some ways to find the issues where an user Is mentioned \n\n--Description--\nAt this time there isn't a way to find all issues where an user is mentioned nor via filter nor via email.\r\nShould be possibile to:\r\n* to search issue where i'm mentioned \r\n* customize the subject of the email related to comment where i'm mentioned.\r\n\r\nThe old plugin used before the landing of this feature in redmine-core, was implement the way 2\r\n"}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n"}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmoji reactions on notes in Issues\n\n--Description--\nSimilar to how [GitHub features emoji reactions on issue comments](https://github.blog/2016-03-10-add-reactions-to-pull-requests-issues-and-comments/), could Redmine please develop emoji reactions on notes in issues in Redmine?\r\nThis would allow people to explicitly acknowledge that they've read a note, without having to leave another short note to reply.\n\n-- Ticket2\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nChanging Subject Line in email notification when an issue is created or updated\n\n--Description--\nCurrently the format is as follows:\r\n\r\n<pre>\r\n[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nFor email security reasons, we would like to add '#' at the beginning of the subject line:\r\n\r\n<pre>\r\n#[ProjectName - Task #4983] (Closed) Email Notification Test1\r\n</pre>\r\n\r\nIs it possible?  If so, then how?\r\n\r\nThanks,\r\nShakeel Masood\r\nMegaChips Technology America,\r\nSan Jose, CA 95134, USA.\r\n\r\n"}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nNew email notification option \"For any event on my bookmarked projects\"\n\n--Description--\nFor now, if you want to be informed about all events of a huge projects portfolio, I have to update the list behind \"For any events of the selected projects only...\" quite often. \r\nIt would be really great if we can receive all notifications of the bookmarked projects adding a new option in the notification option list : \"For any events of my bookmarked projects only...\"\r\n"}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n"}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users."}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\"."}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude project identifier in List-Id header field of notification emails\n\n--Description--\nI propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.\r\n\r\nThe current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.\r\n\r\nBy including the project identifier in the @List-Id@, users can utilize Gmail\u2019s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.\r\n\r\n\r\n*Current Implementation:*\r\nFor an emission email address of @redmine@example.net@, the current List-Id is:\r\n\r\n<pre>\r\nList-Id: <redmine.example.net>\r\n</pre>\r\n\r\n*Proposed Implementation:*\r\nFor an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:\r\n\r\n<pre>\r\nList-Id: <ecookbook.redmine.example.net>\r\n</pre>\r\n\r\n*Backward Compatibility:*\r\n\r\nChanging the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.\r\n\n\n-- Ticket2\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request."}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nGenerate snake-case file name by redmine_plugin_migration\n\n--Description--\nredmine_plugin_migration must generate snake-case file name when specifying migration name as camel-case due to the consistency of the behavior, but it generates camel-case file name.\r\n\r\nSo we have created the patch for fixing redmine_plugin_migration behavior.\r\n\r\nFYI: There was a similar issue that https://www.redmine.org/issues/28668"}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nUpgrade redmine 3.3.0 (windows) to latest\n\n--Description--\nHi,\r\nI have a old redmine 3.3.0 windows version, and i want to upgrade it to the latest version, what is the best way? I have a Ubuntu server created to do this upgrade. \r\n\r\nthanks and regards."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport/Import one Project on Redmine\n\n--Description--\nMy user accidentally deleted a project, and now he wants me to restore it. I have restored a VM running the most recent backup version, but the problem now is I don't know how to migrate the project to the VM redmine is using.\r\nPlease help me any way to migrate project form old server to current server. I'm using redmine 5.1.3\n\n-- Ticket2\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan"}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook call in my page\n\n--Description--\nWhile writing the plugin, I realized that there is no hook available in \"app/views/my/page.html.erb\".\n\n-- Ticket2\n--Subject--\nAdd hook to action_menu\n\n--Description--\nPlease add hook to app/views/issues/_action_menu.html.erb"}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook call in my page\n\n--Description--\nWhile writing the plugin, I realized that there is no hook available in \"app/views/my/page.html.erb\".\n\n-- Ticket2\n--Subject--\nAdd hook to import issue fields mapping view\n\n--Description--\nI want to display the dedicated items of the plugin in Import Issue mapping.\r\n\r\nIn bottom of\r\n/app/views/imports/_issues_fields_mapping.html.erb\r\n<pre>\r\n<%= call_hook(:view_issues_fields_mapping_bottom, :import => @import) %>\r\n</pre>\r\n\r\nThe attached file is a patch created from V4.2.2."}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd links to Users, Projects and Versions (at least) in timelog report\n\n--Description--\nThis issue is extracted from 24568#note-8.\r\n\r\n*Before:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report_before.png!\r\n\r\n*After:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report.png!\r\n\r\n In this way, the locked users will have the grey out style and can be differentiated by the active users.\r\n"}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n"}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd total estimated hours, spent hours, total spent hours for issues to issue list API\n\n--Description--\nThe issue index API currently does not return total estimated hours, spent hours and total spent hours, although the issue show API does show those fields."}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Total estimated/spent time issue query filters\n\n--Description--\nTotal estimated/spent time columns are, along with the estimated/spent time columns, present on the issue list. Simultaneously are their equivalent filters missing as issue query filters available for filtering (on) the issue list.\r\nI think it could be beneficial for users to have these two issue query filters added to the core by default."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nDisplay caption of \"Group by column\" on the grouped issues list\n\n--Description--\nAfter specifying group option on issues list, It may be difficult to know what group option specified for list (e.g. group by \"start date\").\r\n\r\n!{width:600px}not-display-group-option.png!\r\n\r\nTherefore, I propose an improvement to display the caption of the group option in the list, as shown in the screenshot below.\r\n\r\n!{width:600px}display-group-option.png!"}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!"}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"User's group\" and \"User's role\" filters to Spent time list\n\n--Description--\nI suggest adding \"User's group\" and \"User's role\" filters to the Spent time list. Currently, there is a filter for \"User\", but it would be beneficial to filter by the user's group or role as well.\r\n\r\n\"User's group\" and \"User's role\" filters are already available in the issues list, and having the same functionality in the Spent time list would be useful. For example, these filters would make it easier to list the time entries of a specific department within an organization.\r\n\r\n!{width: 952px; border: 1px solid grey;}.clipboard-202407241039-f2ps2.png!\r\n\n\n-- Ticket2\n--Subject--\nExport spent time id in CSV file\n\n--Description--\nIt would be very useful, if the spent time id will be also exported to csv file."}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow administrator to permanently disable modules\n\n--Description--\nIn our environment we do not have any need for the gantt charts or calendar modules.\r\n\r\nWhile the administrator can specify which modules should be enabled by default on new projects, the project owner can elect to enable other modules also.\r\n\r\nIt would be nice to give the administrator the ability to enable/disable modules from ever being used in any project so if the administrator was to disable the calendar module or the time tracking module in the overall application settings the modules would not even show up as options for new projects or in the project settings. Projects that may already have the modules enabled would also no longer display the disabled modules."}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAdditional icon for contextmenu\n\n--Description--\nThe contextmenu is a very helpful feature that can increase the productivity while working with redmine. Many people don't know of this great feature because it is only triggered by a right mouse click, which is not a common user interaction on the web. In order to make this feature more prominent this patch adds an icon to table rows that have a contextmenu, which allows to trigger the appearance of the contextmenu with a regular mouse click. \r\n\r\nAs there was no icon with three dots available in the famfamfam available, we created our own by using an existing icon with a dot.\r\n\r\nThis gif shows this new icon in action on the issues table:\r\n\r\n!contextmenu.gif!"}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  "}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. "}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nredmine_cost_admin plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which allow:\r\n\r\n* registering contracts of the users\r\n* converting estimated hours and spent hours into money amount\r\n* registering budgets and expenses per project\r\n\r\nIf this plugin help your organization, I'm happy w"}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAllow access to /robots.txt even if logins are required\n\n--Description--\nRight now, if logins are globally required, the @/robots.txt@ path is not accessible for search engines since the @Welcome#robots@ path also observes this setting. Requests to @/robots.txt@ will thus receive an empty HTTP 401 in this case today.\r\n\r\nThe attached patch series improves this behavior in multiple ways. The patches were extracted from \"Planio\":https://plan.io/redmine-hosting/.\r\n\r\n* @0001-Render-all-visible-projects-in-robots.txt-including-.patch@ - While initially not strictly related to the issue, this patch extends the list of projects included in the @/robots.txt@ to not only list active projects but also closed projects (which are still visible to anonymous). This ensures that the list is correct for cases where the Redmine does not enforce logins. Still, as the @/robots.txt@ file is intended to be consumed by search engines rather than logged-in users, we only list projects which are visible to Anonymous now. The @/robots.txt@ output thus does not distinguish between the project visibility of the current user but will only output projects visible to Anonymous.\r\n* @0002-Always-allow-access-to-robots.txt-for-Anonymous.patch@ - This patch allows Anonymous to always access @/robots.txt@, regardless of the @Setting.login_required@ setting. Previously, this would have been denied if logins are required.\r\n* @0003-Disallow-all-in-robots.txt-if-login-is-required.patch@ - With a required login, Anonymous should not be able to view ANY project information. Even in case some routes are manually excluded from this restriction, we still don't want those to be index by search engines. As such, with required logins, we just instruct all robots to not index anything. This patch also makes sure that we are not leaking any information about public projects in case logins are required. Before this patch (but after the previous patches), we would include a list of all public projects there, even if Anonymous could not see them without a login."}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable."}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject Menu Module Access Configuration\n\n--Description--\nDear Redmine Team,\r\n\r\nI would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as \"Time Tracking,\" \"Gantt,\" and \"Calendar\" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.\r\n\r\nImplementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.\r\n\r\nThank you for considering this request. I am available to discuss further details if needed.\r\n\r\nSincerely,\n\n-- Ticket2\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nSet values for reminder\n\n--Description--\nIs it possible to include in reminder settings such feature as selection of necessary status for issue? In my case I need to exclude the resolved issues from reminder as it done for the closed issues."}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nPrevent close project\n\n--Description--\nPlease add feature to prevent closing project with opened tasks\r\n"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\n\"Show completed versions\" by default\n\n--Description--\nIt would be useful not only to be able to show completed versions by default, but to separate _closed_ versions from _completed_ versions.\r\nIn my case, we put out versions at irregular intervals so we can have a version that's completed, but won't come out for a few weeks. In the meantime, I have to click \"Show completed versions\" everytime I want to see it, and I get _all_ versions, including the closed ones."}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTracker 'closed' -> Status 'closed' automatically\n\n--Description--\nHi \r\n\r\nI use several Trackers that indicate that the issue is 'done/finished'.\r\n\r\nIs there an option that the Status automatically switch to a 'closed' issue Status?\r\n\r\nThe reason is simple:\r\n* I don't want to modify always to fields in the issue\r\n* the Overview remains issues that are already solved\r\n\r\nIt would be great if somebody has an idea.\n\n-- Ticket2\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n"}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nexport gantt chart to  csv file\n\n--Description--\ncan you add a feature to export gantt chart to csv file beside pdf and png format where pdf doesn't  support Arabic font"}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nAuto guess file encoding when importing CSV file\n\n--Description--\nWhen importing a CSV file, file encoding is pre-selected according to general_csv_encoding in config/locales/*.yml. For example, \"CP932\" is selected by default when your language setting is Japanese.\r\n\r\nI often use CSV files with UTF-8 encoding, but it's a bother to re-select UTF-8 in the encoding drop-down every time.\r\n\r\nIt would be nice if Redmine auto guesses the file encoding when importing a CSV file. Redmine already auto guess file encoding when displaying attached files or repository contents using @Setting.repositories_encodings@.\r\n"}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>"}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd field separator option to CSV export dialog\n\n--Description--\nI would like to add a field separator option to the CVS export option form.\r\n\r\nBackground:\r\n\r\nIf I have set the language e.g. to English in my Redmine profile, the separator is taken from _config/locales/en.yml_ (@general_csv_separator@) and it is *comma*. If I have installed e.g. German Microsoft Office and try to open such a CSV, it expects that the separator is *semicolon*. Unfortunately, Microsoft Office doesn't offer to choose the separator prior opening a CSV file and always uses the default value.\r\n\r\n!field_separator_export_option.png!\r\n\r\nIt is also related to #37581, where many translations have set @general_csv_separator@ to different value than is expected in Microsoft Office.\r\n\r\n"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange the default CSV export encoding to UTF-8\n\n--Description--\nThis patch changes the default encoding for CSV exports from @:general_csv_encoding@ to UTF-8.\r\n\r\nUTF-8 is now the standard encoding format and is crucial for exporting data with multiple languages or Unicode emojis to prevent character corruption. Therefore, using UTF-8 is the best choice in most cases.\r\n\r\nCurrently, Redmine defaults to @:general_csv_encoding@ (ISO-8859-1 for English, CP932 for Japanese) for CSV exports, requiring users to manually select UTF-8 each time, which is inconvenient. Switching the default to UTF-8 will simplify this process.\r\n\r\nThe default was originally set to @:general_csv_encoding@ for compatibility with older versions of Excel, which didn\u2019t support UTF-8. However, modern Excel versions can read UTF-8 encoded CSV files with a BOM. Since Redmine\u2019s UTF-8 exports include a BOM (see #7037), changing the default to UTF-8 will not affect Excel compatibility.\r\n\r\n!{width: 400px; border: 1px solid grey;}.clipboard-202408291800-amyv5.png!\r\n\n\n-- Ticket2\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur"}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRGPD Compliance\n\n--Description--\nI'm trying to figure out how to be RGPD compliant in Redmine.\r\n\r\nWhen you delete a user, it will set everything own by this user as \"Anonymous\". Anonymyzing data is a way of being RGPD compliant but I can't delete all users obviously.\r\n\r\nInstead of that, I would like to have a feature that will anonymize everything which is older than XXX months.\r\n\r\nDo you see a way of doing it ? I dind't found any plugin, nor existing feature in Redmine. Is it something planned ? That you are discussing about ?\r\n\r\nOtherwise, any idea how I can perform this (in SQL maybe - do you have a table/field list that I can use to perform this ?)\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRGPD Compliance\n\n--Description--\nI'm trying to figure out how to be RGPD compliant in Redmine.\r\n\r\nWhen you delete a user, it will set everything own by this user as \"Anonymous\". Anonymyzing data is a way of being RGPD compliant but I can't delete all users obviously.\r\n\r\nInstead of that, I would like to have a feature that will anonymize everything which is older than XXX months.\r\n\r\nDo you see a way of doing it ? I dind't found any plugin, nor existing feature in Redmine. Is it something planned ? That you are discussing about ?\r\n\r\nOtherwise, any idea how I can perform this (in SQL maybe - do you have a table/field list that I can use to perform this ?)\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRGPD Compliance\n\n--Description--\nI'm trying to figure out how to be RGPD compliant in Redmine.\r\n\r\nWhen you delete a user, it will set everything own by this user as \"Anonymous\". Anonymyzing data is a way of being RGPD compliant but I can't delete all users obviously.\r\n\r\nInstead of that, I would like to have a feature that will anonymize everything which is older than XXX months.\r\n\r\nDo you see a way of doing it ? I dind't found any plugin, nor existing feature in Redmine. Is it something planned ? That you are discussing about ?\r\n\r\nOtherwise, any idea how I can perform this (in SQL maybe - do you have a table/field list that I can use to perform this ?)\n\n-- Ticket2\n--Subject--\nAutomatic deletion of unactivated accounts\n\n--Description--\nHi\r\n\r\nin the context of #38511 I noticed that even after one week my unactivated account @henk_test was not deleted but still waited for me to click the confirmation link.\r\n\r\nI see a similar issue with my own redmine instance where registrations require administrator approval: I have to delete a lot of accounts registered by bots.\r\n\r\nIt would be great to have redmine expire unconfirmed/unactivated accounts after a configurable amount of time."}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRGPD Compliance\n\n--Description--\nI'm trying to figure out how to be RGPD compliant in Redmine.\r\n\r\nWhen you delete a user, it will set everything own by this user as \"Anonymous\". Anonymyzing data is a way of being RGPD compliant but I can't delete all users obviously.\r\n\r\nInstead of that, I would like to have a feature that will anonymize everything which is older than XXX months.\r\n\r\nDo you see a way of doing it ? I dind't found any plugin, nor existing feature in Redmine. Is it something planned ? That you are discussing about ?\r\n\r\nOtherwise, any idea how I can perform this (in SQL maybe - do you have a table/field list that I can use to perform this ?)\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRGPD Compliance\n\n--Description--\nI'm trying to figure out how to be RGPD compliant in Redmine.\r\n\r\nWhen you delete a user, it will set everything own by this user as \"Anonymous\". Anonymyzing data is a way of being RGPD compliant but I can't delete all users obviously.\r\n\r\nInstead of that, I would like to have a feature that will anonymize everything which is older than XXX months.\r\n\r\nDo you see a way of doing it ? I dind't found any plugin, nor existing feature in Redmine. Is it something planned ? That you are discussing about ?\r\n\r\nOtherwise, any idea how I can perform this (in SQL maybe - do you have a table/field list that I can use to perform this ?)\n\n-- Ticket2\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald"}]}}
