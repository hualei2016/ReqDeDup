query num,prediction category,index1,issue1 id,issue1 subject,issue1 description,index2,issue2 id,issue2 subject,issue2 description,consine similarity,predict probability,predict analysis,new requirement
52,fp,56,9812,set or change author of a issue (via rest api),"We would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)

Projects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. 
The users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is ""this line"":
/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140

The only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.
",11,1739,Add ability to change issue author,"Sometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step.",0.5504421309503881,0.85,"Both tickets essentially request the functionality to modify the author of an issue through the Redmine platform, albeit with slightly different use cases. Ticket1 focuses on the need for this capability via REST API integration to facilitate seamless bug reporting and feature requests from external web applications within the same LDAP user base. Ticket2, while more user-centric, also aims to allow users to reassign issue ownership for better responsibility tracking and email notification management. The underlying requirement to change the issue author is common to both tickets.","* Subject: Enhance Issue Author Assignment and Update Functionality via REST API and UI
    * Description: To improve collaboration and workflow management, implement the ability to set or change the author of an issue both through the REST API and the user interface. This will facilitate integration with external systems (Ticket1) for streamlined bug reporting and feature requests while maintaining correct author attribution across synced platforms. Additionally, it enables individual users (Ticket2) to transfer issue ownership easily, updating responsibility and ceasing unwanted email notifications for the previous owner, with the new owner having the option to subscribe for updates. This feature should include appropriate permission controls to allow authorized users or applications to perform these changes securely."
69,tp,66,12579,Ability to assign issues to multiple users,"+*Dear All:*+

+Kindly I need to make *""Assignee""* Combo box allow *""Multi-Selection""* because of:+
 

* Sometimes , Groups don't help me while assigning a specific issue to more than one member.
This happened in case where the assignees are not gathered in a group. (This happened frequently)
(*Note that:* There is an Infinite combination of users!!)
So , I need the *""Assignee""* field to be a *List Box* which allow +*""Multi-Selection""*+.",0,408,Assign a task to multiple users,"It would be great if it was possible to assign a task to multiple users; And have another state, ""being solved"",
where a task is locked and ""assigned"" to a specific one.

Why: 

In some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign
a task to several workers, and the first who gets available would then grab the task, setting the ""being solved""
to himself.
",0.5320191875808767,0.9,"Both tickets essentially request the functionality to assign tasks or issues to multiple users. The core requirement overlaps significantly, despite the slight difference in additional details provided in each description. Ticket1 emphasizes the need for a multi-selection Assignee field due to the limitations of using groups, while Ticket2 introduces an additional ""being solved"" state to manage concurrent handling by the first available assignee. The primary similarity justifies consolidation.","* Subject: Enhanced Task Assignment to Multiple Users
    * Description: Implement the capability to assign tasks or issues to multiple users simultaneously. This will involve enhancing the ""Assignee"" field to support multi-selection, akin to a list box, enabling users to choose from an unlimited combination of individual assignees without the constraint of predefined groups. Additionally, introduce a new task state, ""Being Solved,"" which can be set by any of the assigned users once they begin working on the task, effectively locking the task and indicating their engagement. This enhancement accommodates scenarios where multiple team members are capable of addressing a task and promotes efficient task distribution among available resources."
-1,fn-no-query,102,22997,Administrative calendar,"Not only Sat. and Sun don't work. For example.
2016-06-09 is the Dragon Boat Festival of China.
That mean's Chinese don't work from 2016-06-09 to 2016-06-11,
but they have to work at 2016-06-12 (Sunday).
So, I hope admin can set which non-workday need to convert workday , 
and which workday don't need work.
And make it effective In gantt view, or calculate workdays.",35,7079,Adding Holidays to Calendar,"We want to show national holidays and Sundays with a different color in the calendar so that the user knows it is a holiday.
I tried to use ""holidays.gem"" to do that but yet i couldn't succeed.
We don't mean to use schedules plugin or any, we directly want to change the redmine calendar.",0.43497796375886916,-1,,
139,tp,105,23210,"""Updated by"" filter is needed","When filtering issues, it is very helpful to have a filter named: ""Updated by"" to list issues changed or updated by some team member(s).",91,17720,"Filter issues by ""Updated by"" and ""Last updated by""","There appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.

*updated by* (this would be general involvement, other users could have updated an issue afterwards)
*last updated by* (this would be specifically to find issues by _who touched it last_)

Similarly I think that these need to be added as _available columns_.

BTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.",0.7233115243008276,0.85,"The two tickets are indeed very similar as they both request the implementation of a filtering feature based on who updated the issues. Ticket1 specifically asks for an ""Updated by"" filter, while Ticket2 expands on this idea by suggesting two separate filters: ""Updated by"" for general involvement and ""Last updated by"" to identify the most recent modifier. The additional request in Ticket2 for these fields to be available as columns reinforces the similarity and the need for consolidation.","* Subject: Enhanced Issue Filtering: ""Updated by"" & ""Last Updated By""
    * Description: To improve issue tracking and management, implement enhanced filtering capabilities with two new filters: 
        1. **Updated By**: This filter will list all issues that have been modified by specific team member(s), providing insight into general involvement.
        2. **Last Updated By**: Distinct from the ""Updated By"" filter, this will specifically identify issues based on who made the most recent update, allowing users to track the latest actions taken by individuals.

Additionally, incorporate these filters as selectable columns within the issue view to facilitate at-a-glance understanding of issue engagement and history. Ensure seamless integration with existing Redmine functionalities without relying on third-party plugins, addressing the limitations reported with external solutions like the redmine_last_updated_by_column plugin."
142,tp,106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",25,4939,List of tasks filtered as OR and not AND,"Hello

Up to now in the list of task you can filter upon some values but the list of filters are 
List of tasks that has
filter1=value1 AND filter2=value2 AND filter3=value3

I think it could be interesting to have the possibility of
List of tasks that has
filter1=value1 OR filter2=value2 OR  filter3=value3

Do you think it is possible? thank you",0.6802097583644268,0.9,"Both tickets are requesting enhancements to the filtering system, specifically the inclusion of logical operators to improve issue or task filtering capabilities. Ticket1 mentions the need for logical operators like ""AND"", ""OR"", while Ticket2 provides a concrete example of wanting to use ""OR"" instead of the default ""AND"" logic for filtering tasks. The core intention behind both tickets overlaps significantly, hence they can be considered very similar and合并 into a single requirement.","* Subject: Enhanced Filter Logic with Logical Operators for Issues and Tasks
    * Description: Improve the filtering functionality by introducing logical operators (""AND"", ""OR"") to allow users more flexibility in refining their searches. Users should be able to apply these operators between filters, enabling them to retrieve lists of issues or tasks that satisfy any combination of conditions, such as ""filter1=value1 OR filter2=value2 OR filter3=value3"", in addition to the existing ""AND"" based filtering. This enhancement will cater to a wider range of user queries and make the task management process more efficient."
152,fp,108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",6,1140,Filtering using more than one instance of each field,"I would like to filter issues using more than one instance of each field.
Example:
issues with subject containing ""email"" but not containing ""server""...",0.640935688701323,0.9,"Both tickets describe the need for an enhanced issue filtering system within a project management or issue tracking tool. They highlight the limitation of not being able to apply multiple conditions or ""OR"" clauses across different fields (such as subject, assignee, tracker, etc.) in a single search operation. The proposed solutions in both tickets aim to address this limitation by enabling users to create complex queries with multiple sets of filters that can either be combined using ""AND"" or ""OR"" logic. Given the substantial overlap in the subject matter and the intended functionality, it's highly likely that addressing one ticket would resolve the concerns raised in the other.","* Subject: Enhanced Multi-Criteria Issue Filtering with OR Support
    * Description: Enhance the issue tracking system to allow users to perform advanced searches by applying multiple filters across various fields with support for both ""AND"" and ""OR"" logical operators. Users should be capable of defining multiple sets of query criteria within a single search request. For example, this would permit searching for issues that meet any of the following concurrent conditions: Tracker A assigned to Paul, and Tracker B assigned to John, while also enabling specific exclusions or inclusions based on other fields (e.g., subject containing ""email"" but excluding those containing ""server""). The UI will include a ""+"" button to add additional filter sets, allowing users to construct complex queries effortlessly. The filtered results will be displayed in a consolidated view, presenting a comprehensive list of issues matching the composite filter criteria, facilitating direct comparison and action as required."
153,tp,108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",25,4939,List of tasks filtered as OR and not AND,"Hello

Up to now in the list of task you can filter upon some values but the list of filters are 
List of tasks that has
filter1=value1 AND filter2=value2 AND filter3=value3

I think it could be interesting to have the possibility of
List of tasks that has
filter1=value1 OR filter2=value2 OR  filter3=value3

Do you think it is possible? thank you",0.6921389585194713,0.9,"Both tickets describe the need for an enhanced filtering system in an issue tracking tool, with a particular emphasis on the ability to use ""OR"" conditions in addition to the existing ""AND"" logic. This would allow users to search for issues more flexibly, either by combining separate queries or by altering the way filters interact. The primary difference is that Ticket1 provides a more detailed example and suggests a specific UI implementation, while Ticket2 is more concise and focuses strictly on the logical change from ""AND"" to ""OR"" filtering. Given the substantial overlap in the desired functionality, it's recommended to consolidate these tickets to avoid duplication of effort.","* Subject: Enhanced Issue Filtering: Implement ""OR"" Conditions & Multiple Query Support
    * Description: Users frequently require more advanced search capabilities when managing their tasks and issues. To address this, enhance the filtering system to support both ""AND"" and ""OR"" logical operators, enabling users to create complex queries. Introduce a feature that allows defining multiple sets of filters within a single search request, where each set can be configured with its own combination of criteria (e.g., tracker, assignee, status, etc.). This will permit users to, for instance, simultaneously view tasks assigned to Paul in Tracker A alongside those assigned to John in Tracker B. Implement a user-friendly interface, such as a ""+"" button, to facilitate adding additional filter sets. Ensure the displayed results合并 the output of all applied filters, presenting a comprehensive and comparative view tailored to users' needs."
160,fp,108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",0.659833282078777,0.95,"Both tickets address the enhancement of the issue filtering system, with a primary focus on incorporating ""OR"" logical operators and enabling more complex, multiple-query searches. The descriptions align closely in suggesting improvements to the existing filtering functionality to accommodate a wider range of search combinations. Given the significant overlap in their objectives, it's clear that the underlying user needs are identical, and implementing a solution for one ticket would inherently resolve the concerns raised in the other.","* Subject: Enhanced Issue Filtering with Multiple Queries & Logical Operators
    * Description: To improve issue tracking efficiency, the platform's issue filter functionality will be upgraded to support advanced query capabilities. This includes the introduction of logical operators (""AND"", ""OR"") to combine filters flexibly. Users will be able to create multiple sets of filters within a single search, such as selecting multiple trackers, statuses, assignees, or subjects simultaneously, and defining distinct or combined criteria for each set. For instance, a user could filter for issues where Tracker is ""A"" AND Assigned to ""Paul"" in one set, while in another set filter for Tracker ""B"" OR Assigned to ""John"". The application will then execute these queries, consolidating the results into a unified view, displaying shared columns for easy comparison and management of due dates or other attributes across different issue subsets. This update paves the way for more sophisticated, customized issue searches to meet diverse user requirements."
162,fn-queried,109,23229,Email notification based on custom field value,"Hi all,

Is there any way to define a custom field as a list of email + value ? and if the custom field value has changed in some issues an email is sent the corresponding email ?

eg : 
Custom field named GROUP with the following values:
email    | group name|
a@eg.com | g1        |
b@eg.com | g2        |
c@eg.com | g3        |


In the issue, we can select the group. When we select the group : g1, an email is sent to a@eg.com.

Is there any way to do this ?

Thanks for help.

Regards, 

Aniss",61,10614,Email Notifications for Custom field with User type,"We want to add new custom field for Issue with User type that lists all the users in the project.
for eg., Tester is the field added to the project it has the list of users.
Once the development is complete we want to pass on the issue to 'Tester'. On selecting the user in ""Tester"" field, 
Will 'Tester' receive email notifications when a user in 'Tester' field is choosen?
Developer will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue.",0.6560293358100935,0.3,"The two tickets both involve email notifications triggered by changes to custom fields, but the context and specific requirements differ. Ticket1 is about sending emails based on changes to a custom field with email addresses listed against group names, while Ticket2 is focused on implementing email notifications to a selected user from a custom user-type field indicating a tester. Since the implementation details and purposes are distinct, they shouldn't be marked as duplicates.","Not applicable since the probability of duplication is less than 70%. However, if we were to consider a common theme for improvement, it could be:

**Subject**: Enhanced Email Notification System for Custom Fields

**Description**: Develop a more versatile email notification system that supports both email-value based groups and user-type selections within custom fields. 
- For group-based notifications, allow administrators to define custom fields containing lists of email addresses associated with descriptive labels (e.g., group names). Whenever the selected group in an issue changes, an automated email should be dispatched to the corresponding email address.
- Introduce a new custom field type, ""Assigned User"" (distinct from the default Assignee), which enables assignment of issues to users for specific roles such as 'Tester.' Upon changing the user in this field, the selected user should automatically receive email notifications informing them of the assignment.
This update would cater to dynamic assignment notifications across various roles within projects without altering the standard assignee tracking mechanism."
165,tp,110,23327,Visually mark closed subprojects on parent project page,"There is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.).",104,23152,Distinguish closed subprojects on the project overview,"I closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.
Agradeceria option for not listed closed subprojects.",0.7244860999968351,0.9,"Both tickets essentially request an improvement in visually distinguishing closed subprojects within the context of a parent project view. While the first ticket suggests marking them differently (e.g., color or icon), the second ticket asks specifically for a way to distinguish closed subprojects on the project overview and hints at a filtering option or clear indication of their status. The core intent overlaps significantly, aiming to enhance visibility of subproject statuses.","* Subject: Enhance Visual Indication & Filtering of Closed Subprojects on Parent Project Overview
    * Description: On the parent project page, implement a clear visual distinction for closed subprojects, such as a different color coding or a distinct icon, to immediately identify their status. Additionally, provide a filtering option to allow users to exclude closed subprojects from the view for a focused overview or include them with clear status indicators for comprehensive project management."
169,tp,111,23348,Values of version type custom fields should be grouped by project/subproject,"Project B is a subproject of project A.

The available versions of project A are 1.0 and 1.1.
The available versions of project B are 1.0, 1.1 and 1.2.

All versions are shared with project tree.

Creating a new issue in project B, ""Target version"" field shows:
!TargetVersion.png!

""Found in version field"" shows:
!FoundInVersion.png!

It would be much better if ""Found in version"" values would be presented the same as ""Target version"".",87,15902,Custom Field - Version - Combo list to be grouped by projects..,"Currently the Versions are not grouped according to the projects version inherited.
Can you please show  this combo as grouped.

Thank You.
",0.7373342334873878,0.9,"Both tickets describe a very similar issue regarding the grouping of version type custom fields by project or subproject in the context of creating issues. The descriptions indicate that the current display of versions is not organized according to their respective projects or subprojects, and both request an improvement to present the versions in a grouped manner for better clarity. Given the substantial overlap in the subject matter and the desired outcome, it's highly likely that these tickets address the same underlying problem.","* Subject: Group Version Custom Fields by Project and Subproject in Issue Creation
    * Description: Users are currently experiencing an issue where version type custom fields (e.g., ""Target Version"" and ""Found in Version"") within the issue creation process are not organized according to their respective projects and subprojects. This leads to an unstructured display of available versions, making selection less intuitive. To enhance usability, it is requested that the dropdown menus for such version fields be reconfigured to group versions by their parent project and subproject hierarchy. This improvement will ensure that when creating a new issue in any project or subproject, the versions are presented in a clear, grouped format that reflects the project tree structure, thereby facilitating more efficient and accurate version selection."
173,tp,112,23403,Make default search scope configurable,"Right now the quick search box only searches the current project. In #22125 the person asking would like to have the default changed to ""current project + sub-projects"". I'd be interested in setting it to ""all projects"", while somebody else might like to set this to default to a specific project only.

SO I think it would be best if the admin could set the default scope of the quick search function from the admin backend.",57,9909,Search in project and its subprojects by default,"The default search scope when in a project is now only the selected project. 
In my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?",0.7506466988457902,0.9,"The two tickets are indeed very similar as they both request for the ability to modify the default search scope within a project management system. While Ticket1 asks for a more generic configurability of the default search scope (including all projects as one of the preferences), Ticket2 specifically requests the default scope to include the project and its subprojects. Given that implementing Ticket2's request would inherently satisfy a part of Ticket1's broader request, it makes sense to consolidate these into a single enhancement request.","** Subject: Customize Default Search Scope Including Subprojects
    ** Description: Enhance the search functionality to allow administrators to configure the default search scope from the admin backend. This should include an option to set the default search to encompass not only the current project but also its sub-projects, as well as exploring the feasibility of extending this configurability to include ""all projects"" and potentially other custom scopes to cater to diverse user needs. This improvement will accommodate various organizational structures and streamline the search process for users."
174,tp,113,23434,Add hook to action_menu,Please add hook to app/views/issues/_action_menu.html.erb,18,3568,"New view-hook in contextual ""(action) menu"" in issues show view","As proposed in this forum-thread (message#7093) it would be nice if we could (at least) add items to these contextual ""menus"" using plugin hooks.

I'd suggest to interpret the proposal done in the forum as: ""please add a hook like @:view_issues_show_contextual@"".

Regards,

Mischa.",0.7003131441507738,0.9,"Both tickets request the addition of a hook to the action menu in the issues view, with the purpose of extending functionality through plugins. Although the descriptions differ slightly in wording and one references a forum thread for context, the core requirement is essentially the same. Therefore, it's highly likely that these tickets should be considered duplicates.","** Subject: Add plugin hook to issues action menu for customization
    ** Description: To enhance extendability, a new plugin hook should be introduced to the issues view's action menu, allowing developers to add custom items or actions. This implementation will align with the community suggestion from forum-thread message#7093, facilitating the expansion of the action menu's capabilities through third-party plugins."
181,tp,115,23460,Changing the owner of an issue,"I would like a functionality to change the owner 
(creator) of an issue.

It would be neat if this functionality had its own
permisson flag instead of being part of the ""Edit Issue"".
Otherwise just include it in the ""Edit Issue"".


In many situations you create an issue on behalf of 
another and it would be neat if you could set the ownership 
to be the person whom you are creating it on behalf of.

Currently, I do it by changing the data directly 
in the database... :-/


BTW I have made a similar functionality in a customized 
version of Bugzilla and that functionality is very often 
used and really nice to have.",11,1739,Add ability to change issue author,"Sometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step.",0.7903127952309605,0.95,"Both tickets essentially request the same feature, which is the ability to change the owner or creator of an issue. They provide slightly different use cases but ultimately aim to improve issue management by allowing users to reassign responsibility. The suggestions for implementation, such as adding a separate permission flag or including it within ""Edit Issue,"" are also very similar. Given the high level of overlap, it's recommended to treat these as duplicates to streamline development efforts.","** Subject: Implement Functionality to Change Issue Owner
    ** Description: Enhance the issue tracking system to include a feature that allows users to change the owner or creator of an issue. This will facilitate scenarios where issues are initially created on behalf of others or when responsibility needs to be reassigned over time. The functionality should be accompanied by a dedicated permission flag to control access, or alternatively, be integrated into the existing ""Edit Issue"" function, depending on what provides the most efficient and secure workflow. By implementing this feature, users can transfer accountability more seamlessly, ensuring the appropriate party receives updates and is responsible for issue tracking, thereby reducing unnecessary email notifications and enhancing clarity in issue management."
183,fp,115,23460,Changing the owner of an issue,"I would like a functionality to change the owner 
(creator) of an issue.

It would be neat if this functionality had its own
permisson flag instead of being part of the ""Edit Issue"".
Otherwise just include it in the ""Edit Issue"".


In many situations you create an issue on behalf of 
another and it would be neat if you could set the ownership 
to be the person whom you are creating it on behalf of.

Currently, I do it by changing the data directly 
in the database... :-/


BTW I have made a similar functionality in a customized 
version of Bugzilla and that functionality is very often 
used and really nice to have.",56,9812,set or change author of a issue (via rest api),"We would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)

Projects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. 
The users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is ""this line"":
/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140

The only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.
",0.6057827060729973,0.85,"Both tickets revolve around the ability to change the owner/author of an issue within a project management system, with a particular emphasis on doing so via an API or a more streamlined process. The first ticket focuses on a UI-based functionality to change issue ownership and suggests a permission flag for it. The second ticket specifically requests setting or changing the author of an issue through a REST API to facilitate better integration with external systems. Although the methods described differ—one focusing on UI enhancements and the other on API capabilities—the underlying goal of enabling users to attribute issues to the correct individual is shared. Given this significant overlap in intent, it's recommended to consider these tickets as addressing the same core need with different implementation aspects.","* Subject: Enhance Issue Ownership Management Functionality
    * Description: Develop a unified feature that enables users to easily change the owner/author of an issue both via the user interface and the REST API. This functionality should include:
        - A dedicated permission flag for changing issue ownership within the UI, separate from the ""Edit Issue"" permission to allow finer control over user capabilities.
        - Extension of the REST API to support setting or updating the author of an issue during creation or subsequently, requiring a valid API key with the appropriate new permission.
        - Ensure compatibility with integrated systems using common authentication sources (e.g., LDAP) to maintain consistent user identity across platforms.
        - Implementation should address the current restriction in the issues_controller to allow authorized third-party applications or users to modify the issue author without compromising security or accountability."
187,tp,116,23491,Author name in mail from,"This feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way ""github"":http://github.com issues notifications I've decided to push this patch.

<pre><code class=""diff"">
--- app/models/mailer.rb        (revision 15732)
+++ app/models/mailer.rb        (working copy)
@@ -438,7 +438,7 @@
             'X-Redmine-Site' => Setting.app_title,
             'X-Auto-Response-Suppress' => 'All',
             'Auto-Submitted' => 'auto-generated',
-            'From' => Setting.mail_from,
+            'From' => ""#{User.current.name} <#{Setting.mail_from}>"",
             'List-Id' => ""<#{Setting.mail_from.to_s.gsub('@', '.')}>""
 
     # Replaces users with their email addresses
</code></pre>",30,5913,Authors name in from  address of email notifications,"
In mail notification created by Redmine 'FROM' address in headers
is set to Setting.mail_form. It would be useful to add name of
author to this address. You would know who is working on issue
without opening mail. I've changed line in app/models/mailer.rb
in initialize_defaults method:

from Setting.mail_from

to 

@author ||= User.current
from ""#{@author.name} <#{Setting.mail_form}>""

It seams to work, but I'm not sure if it wont break anything.",0.8846314276376076,0.95,"The two tickets are indeed very similar, both addressing the enhancement of including the author's name in the ""From"" field of email notifications sent by Redmine. The descriptions propose nearly identical solutions to modify the same part of the code in `app/models/mailer.rb`. Given the high degree of overlap and the shared objective, it's appropriate to consider these tickets duplicates to streamline the development process and avoid redundant work.","** Subject: Include author's name in email notification ""From"" address
    ** Description: Enhance Redmine's email notification system to include the name of the user who triggered the notification along with the default email address in the ""From"" field. This improvement will provide recipients with immediate context about the sender without needing to open the email. To implement this, modify the `Mailer` model's `initialize_defaults` method in `app/models/mailer.rb` to set the ""From"" header as follows: `""#{User.current.name} <#{Setting.mail_from}>""`. Ensure this adjustment does not disrupt existing email functionality and adheres to email standards."
194,tp,117,23493,Add group results by due date,Currently it is not possible to group results by _due date_. For planning purposes this would be nice.,77,13803,"Implement grouping issues by date (start, due, creation, update, closing dates)","* group by date creation asc
* group by date creation desc
* group by date start asc
* group by date start desc
* group by date end asc
* group by date end desc
* group by date closing asc
* group by date closing desc",0.6402092146567137,0.9,"Both tickets are requesting enhancements to the grouping functionality based on various date attributes. Ticket1 specifically asks for grouping by due date, while Ticket2 lists a comprehensive set of date fields (creation, start, end/closing) for grouping in both ascending and descending orders. Since Ticket2 encompasses the request of Ticket1 and extends it further, merging these tickets would be appropriate to address the overall need for enhanced date-based grouping in a unified way.","* Subject: Enhance Grouping Functionality by Extending Date Criteria
    * Description: Improve the system's grouping capabilities to include a broader range of date attributes essential for advanced planning and organization. This enhancement will allow users to group issues by the following date criteria, with options for both ascending and descending order:
        - Creation Date
        - Start Date
        - Due Date
        - Closing Date
    Additionally, ensure that the interface is intuitive and allows for seamless switching between different groupings, enhancing the overall user experience and efficiency in managing tasks and projects."
199,tp,119,23529,Calculate parent Issue's done ratio from subtasks in case of 'Use the issue status',"Admin -> Settings -> Issue Tracking:
> Calculate the issue done ratio with => 'Use the issue status'
> Parent tasks attributes : % Done => Calculated from subtasks

If I set NEW is 0%, CLOSED is 100%.
When all subtasks are closed, the parent issue still is 0% (status is NEW).
But I hope it be 100%.

Can you add a switch? Force calculate the parent done ratio from subtasks?",34,6609,% Done for Parent Tasks [2],"If I have parent tasks and sub tasks and I use manual (per issue) % done values, then the parent gets the average of the values of the subtasks.
However if I use the option to set % done from status updates then instead of inheriting its % done from the subtasks it takes it from the status attached on the parent task.

Example:

!parent.jpg!

In this case 3 of 4 subtasks are finished and the 4th is in progress, yet the parent task remains at 10% because its status is just 'Developing' (which means not much for a container task).

I actually have two separate requests here:

# I think that parent tasks should inherit their done% from the sub tasks in both modes (note that when using per-issue Done% values I do not get the option to pick a value for the parent, it is always computed, so why not for the by-status version too?)
# Rather than average the %Done of the child tasks I would prefer to weight them by the estimated time of each subtask, so if I have 2 x 8 hr tasks finished and one 4 hour task not started the parent would be at 80% and not 66%.
",0.7173195168342115,0.95,"Both tickets describe a common issue with the calculation of the done ratio for parent tasks based on the statuses or percentages of their subtasks. They request an improvement to the current system to better reflect the progress of subtasks in the parent task's done ratio, either by introducing a new calculation method or adding a switch to force the calculation from subtasks regardless of the parent's status configuration. The second ticket also suggests incorporating the estimated time of subtasks into the calculation, which can be seen as an enhancement to the primary request made in both tickets.","* Subject: Enhance Parent Task Progress Calculation Based on Subtasks
    * Description: Modify the system to allow for more flexible and accurate calculation of parent task done ratios, incorporating the status or percentage completion of subtasks. This update will include:

    1. **Calculation Switch:** Introduce a setting that forces the parent issue's done ratio to be calculated directly from the statuses of its subtasks, overriding the current 'Use the issue status' configuration when enabled. If all subtasks are completed (status is CLOSED), the parent issue's done ratio should automatically be set to 100%, even if the parent's status remains as NEW or another non-completed status.
    
    2. **Weighted Percentage Calculation:** Extend the calculation mechanism to optionally weigh the %Done of each subtask by its estimated time. This means that when calculating the overall done ratio of the parent task, tasks with longer estimated times will contribute more significantly to the final percentage. For instance, if a parent task has subtasks with varying completion statuses and different estimated hours, the done ratio will reflect the true progress considering both completion status and the importance of each subtask in terms of effort.

These enhancements aim to provide a more intuitive reflection of project progress through parent tasks, ensuring that they accurately represent the汇总 status of their subtasks."
211,fp,120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",39,7867,"Add filters for ""Author's group"" and ""Author's role"" to issues list",Is it  possible to add group of auther for filtering of tasks?,0.6273525686402753,0.85,"Both requirements aim to improve issue visibility and filtering based on user roles and groups. While the first ticket focuses on modifying the visibility criteria with respect to roles for watched, created, or assigned issues, the second ticket specifically requests filters for ""Author's group"" and ""Author's role"" in the issues list. These are complementary aspects of user-based issue organization and can be consolidated into a single requirement to streamline development efforts and UI consistency.","- Subject: Enhanced User-based Filtering for Issues
    - Description: Improve issue tracking by implementing enhanced filters that allow users to sort and view issues based on the ""watched by,"" ""created by,"" or ""assigned to"" roles, as well as introducing specific filters for ""Author's group"" and ""Author's role."" This will provide a comprehensive view of issues tailored to different user roles and group affiliations, enhancing collaboration and management efficiency within projects. Existing patches and discussions (#8488, #14318#note-22) will be considered and整合 to create a cohesive and minimal solution without diverging patch implementations."
219,tp,121,23739,"Add ability to ""Duplicate"" / ""Save as"" custom queries","Now, when I want to add a new custom query, which should be based on an existing one with just some slight changes, there is no way how to duplicate and/or save as modified version as a new query",17,3319,Copy/Duplicate a custom query/saved filter,"I would like to be able to copy a custom query/filter.

I often set-up filters that are identical except for one filed (eg. assigned to). It would be handy to be able to duplicate an existing filter.",0.7039874760238248,0.95,"The two tickets are indeed very similar, both requesting the functionality to duplicate or save a custom query with the intention of making minor modifications to the copied version. The descriptions align closely in their purpose, indicating a strong overlap in the desired feature.","** Subject: Implement ""Duplicate"" functionality for custom queries and saved filters
    ** Description: Enhance the platform to allow users to duplicate existing custom queries and saved filters easily. This feature will facilitate the creation of new queries/filters based on existing ones, with the option to make minimal adjustments as needed. Users should be able to select a query/filter and choose ""Duplicate"" or ""Save As"" to create a new, editable copy, thereby streamlining their workflow when setting up similar queries/filters with minor variations, such as different assignees or slight changes in criteria."
231,tp,122,23747,Per-tracker Issue Categories,"Redmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.

But these categories are set for the whole project. What if these categories should apply to one specific tracker?

This plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.",51,9306,Per-tracker issue categories,"It would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).

Case example:

For our ""feature"" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for ""bugs"" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the ""feature"" tracker makes our users submit a lot of requests that end up in the wrong place.

Of course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround...",0.7281116959557516,0.95,"The two tickets have nearly identical subjects and descriptions, both requesting the implementation of per-tracker issue categories in Redmine to better organize and assign issues based on the tracker type. This would allow for more specific and tailored category options per tracker, which would help in reducing user errors and streamline the issue management process. Given the high level of similarity and the repetition of the core requirement, it's strongly recommended to consolidate these tickets.","* Subject: Implement Per-Tracker Issue Category Assignment
    * Description: Enhance Redmine's issue tracking functionality by enabling the assignment of issue categories on a per-tracker basis within projects. This enhancement will permit project administrators to define specific categories for each tracker, thereby streamlining the issue submission process and reducing errors. Users will see a filtered list of categories relevant only to the selected tracker, improving workflow efficiency. For instance, the ""Feature"" tracker could have a limited set of categories assigned to designated users for design follow-ups, whereas the ""Bugs"" tracker could offer a broader range of categories tied to individual engineers responsible for different areas. This feature eliminates the need for creating multiple sub-projects solely to manage tracker-specific categories."
248,fn-queried,124,23789,Enable External links,"I think an interesting new feature is the enabling optional  of the External links in redmine.

It's a feature that is required in some projects",46,8734,Could not add clickable Link to a local windows directory when creating redmine demand,"Hello,

Is-it possible with Redmine to add hypertext links that points to local windows directories when creating redmine demand?
Example :If we add a link to network directory (\\machine_test\tmp), it will not be clickable ?

Thank you in advance.

Best regards,

Riadh
",0.5904735970958186,0.3,"The two tickets are related to linking functionality in Redmine, but they address different aspects. Ticket1 asks for the ability to enable external links, which likely means making URLs clickable when they are references in Redmine content. On the other hand, Ticket2 is specifically about adding clickable links to local Windows directories within Redmine issues, which is a more niche and technically different request due to the local file system involvement. Therefore, they should not be marked as duplicates since they serve distinct purposes within the Redmine environment.","N/A (Since the probability is not > 70%, there's no need to combine the requirements.)"
257,fn-queried,125,23855,Target version filter should get an entry 'All open versions',"_This is my request #10412-20 as an own issue:_

The filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.",107,23215,Add the possibility to filter issues after Target Version's Status and Due Date,"Currently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the ""Used as a filter"" checked). 

It'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. 
Some examples:
- a query that returns all the issues that are assigned in open versions
- a query that returns all the issues that are assigned in versions with due date

The attached patch:
- implements these new 2 filters
- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)
- adds 2 new tests
- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this ""issue"":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). 

I think that this ticket is related to #21249  
",0.6106427105325267,0.3,"The two tickets are related to enhancing the filtering options for target versions in an issue tracking system, but they address different aspects. Ticket1 specifically requests an ""All open versions"" option to quickly select all open versions at once. Ticket2, on the other hand, asks for the ability to filter issues based on the target version's status (open/locked/closed) and due date, which would allow for more complex querying scenarios. While there is overlap in that both aim to improve version filtering, the implementations and purposes are distinct enough to warrant separate consideration.","Not applicable since the probability of duplication is less than 70%. However, if they were to be combined due to a high similarity, it might look like this:

** Subject: Enhance Target Version Filtering Capabilities

** Description: 
Update the filtering functionality for target versions to include more versatile options for managing and querying issues. This enhancement should incorporate two major features:

1. Introduce an ""All open versions"" entry in the target version filter, enabling users to easily select and view all issues assigned to any currently open version with a single selection. This addition caters to users who need a quick overview of ongoing work across multiple versions.

2. Extend the filtering capabilities to allow users to specify target version status (open, locked, closed) and due date as criteria. This will empower users to create more sophisticated queries, such as retrieving all issues in open versions or those scheduled for completion by a certain date.

The implementation should also restructure the UI to group all target version-related filters (including status, due date, and custom fields with the ""Used as a filter"" attribute enabled) under a unified ""Target Version"" category for better usability. Ensure compatibility and update existing tests, addressing any known issues or dependencies, such as the one mentioned in relation to Rails issue #21922."
262,tp,128,24067,Total Estimated Time should be available on Totals options,"The _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.

This would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.
As a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.

Redmine 3.3.0 (bitnami install) here.",97,21450,Totals for Total estimated time and Total spent time,"There are missing totals for _Total estimated time_ and _Total spent time_.

The totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details.",0.609705715043843,0.95,"Both tickets are requesting the addition of ""Total Estimated Time"" and ""Total Spent Time"" to the summary or totals options within query filters. The descriptions align closely in describing the utility of these features, particularly for aggregating data across subtasks and providing project overviews without delving into granular details. The slight difference lies in the specific use-case mentioned in Ticket1 (grouping by target version), but this does not alter the core requirement.","* Subject: Add Total Estimated & Spent Time to Query Filter Totals
    * Description: Enhance query filters to include _Total Estimated Time_ and _Total Spent Time_ in the Totals options. This improvement will facilitate summarizing efforts across tasks and subtasks, enabling users to quickly view aggregated time estimates and actual time spent at a higher level, such as when grouping tasks by target versions or analyzing project progress without needing to examine individual entries. It will support creating project overviews that consolidate effort data efficiently, enhancing management and reporting capabilities."
263,fp,129,24286,Multiple Asignee ticket,"Currently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.

We dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.",0,408,Assign a task to multiple users,"It would be great if it was possible to assign a task to multiple users; And have another state, ""being solved"",
where a task is locked and ""assigned"" to a specific one.

Why: 

In some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign
a task to several workers, and the first who gets available would then grab the task, setting the ""being solved""
to himself.
",0.5765573974980833,0.9,"Both requirements revolve around the need to assign tickets to multiple users or groups, indicating a significant overlap in their purpose. Although Ticket1 emphasizes the dynamic nature of group creation and opposition to plugin reliance, and Ticket2 introduces a new state ""being solved,"" the core request of assigning tasks to multiple users is shared. The additional functionality suggested in Ticket2 could be seen as an enhancement to the primary feature requested in both tickets.","* Subject: Enhanced Multiple Assignees for Tickets
    * Description: Implement a feature allowing tickets to be assigned to multiple users and groups simultaneously, without the necessity for predefined groups or plugins. Introduce an additional ticket state, ""Being Solved,"" which locks the task to the user who starts addressing it, providing clarity on who is currently working on the issue among the assigned users. This enhancement will cater to dynamic team structures where multiple workers can handle the same type of task, promoting efficiency by enabling the first available team member to take charge."
266,tp,129,24286,Multiple Asignee ticket,"Currently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.

We dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.",66,12579,Ability to assign issues to multiple users,"+*Dear All:*+

+Kindly I need to make *""Assignee""* Combo box allow *""Multi-Selection""* because of:+
 

* Sometimes , Groups don't help me while assigning a specific issue to more than one member.
This happened in case where the assignees are not gathered in a group. (This happened frequently)
(*Note that:* There is an Infinite combination of users!!)
So , I need the *""Assignee""* field to be a *List Box* which allow +*""Multi-Selection""*+.",0.5364980023855601,0.95,"Both requirements essentially propose the same functionality, which is the ability to assign tickets to multiple users directly, rather than relying solely on groups. They highlight the inconvenience of creating numerous groups for various combinations of users and emphasize the need for a more flexible assignment option within the core system, without requiring additional plugins. The primary difference lies in the表述, but the core intent aligns closely.","* Subject: Enhance Assignee Functionality for Multiple Users and Groups

    * Description: To improve workflow efficiency and adaptability, the system should be enhanced to allow assignment of tickets to multiple individual users as well as groups simultaneously. This enhancement will facilitate scenarios where tasks need to be addressed by a specific combination of team members who may not necessarily belong to a pre-defined group. The Assignee field shall be updated to support multi-selection, enabling users to choose multiple users or groups directly, eliminating the necessity for creating numerous groups for every potential user combination. This feature should be natively integrated into the platform's core capabilities without reliance on external plugins."
270,tp,130,24319,Last assigned to option in the Assignee selection list,"Very often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.

My suggestion is that below the _<< me >_ option a second special option with the label
<pre>
<< last: account_anme >>
</pre>

should be added.

I call this ""giving back"" the _Ping Pong Feature_ ;-)


What do you think about this feature request?

We have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.

and could implement a patch for this.",88,16045,"Add ""Previous Assignee"" entry when changing issue assignee","Intention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.

attached proposed implementation as svn patch. It needs to run ""db:migrate""

Missing in the implementation:
- previous assignee in contextual menu
- maybe reusing changes done in r12419

Works good and very popular in my firm.",0.6650780935277908,0.95,"The two tickets are indeed very similar, both suggesting the addition of a feature to easily assign issues to the last person who handled them. The descriptions align closely in intent and proposed functionality, with each ticket even mentioning the implementation of a patch to achieve this. Given the high degree of overlap and shared objective, it's clear that these tickets address the same user need and can be consolidated.","** Subject: Add ""Last Assignee"" Option in Assignee Selection List for Efficient Reassignment
    ** Description: To streamline the workflow when reassigning issues, implement a new feature in the Assignee selection dropdown. This feature will include a special option labeled ""<< Last Assignee: account_name >>"", enabling users to quickly assign the issue back to the person who previously worked on it. The system will automatically determine the last assignee based on issue history (journals), eliminating the need for manual searching. Additionally, ensure this feature is also integrated into the contextual menu for consistency and ease of use across different assignment interfaces. This update will require modifications to the application helper for principals' options and potentially building upon existing updates, such as those from revision r12419, to maintain compatibility and enhance functionality."
275,tp,131,24438,Ability to add issue to a version within the roadmap,"So roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. 

kinda like here

!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!",26,5005,"""New issue"" link near roadmap issue lists.","Context menu added to roadmap list at r3547 is nice.

It would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected.",0.7418435275674132,0.9,"Both requirements revolve around enhancing the usability of the roadmap feature by facilitating the creation of issues directly related to versions within the roadmap. While the first ticket suggests adding an issue to a version on the roadmap page, the second ticket proposes a ""New issue"" link near the roadmap issue lists with pre-selected target version. These enhancements are functionally similar in intent and can be合并 to streamline the process of creating issues tied to roadmap versions.","* Subject: Enhance Roadmap Interface for Seamless Issue Creation
    * Description: Improve the roadmap interface to allow users to effortlessly create issues associated with specific versions directly from the roadmap view. This enhancement will include both an option to add issues to versions on the roadmap page and a prominent ""New Issue"" button adjacent to roadmap issue lists. Clicking this button will open a new issue form pre-populated with the corresponding version selected, streamlining the workflow for planning and tracking project milestones."
281,fn-queried,132,24529,"change sort order for due date column on ""Issues assigned"" page","As per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.

If I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).

Not having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _""don't knows/doesn't matters""_.

Excluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).
An issue can have an implicit due date as long it has a target version assigned (that of the target version).

I can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.

So, in sorting by due date (ascending), I would expect issues sorted like this:
* 1/MAR/2016
* 2/MAR/2016
* no due date [or have it set to its target version's one and sort accordingly]
",32,6034,sorting should disregard blank fields,"When sorting something in ascending order all the issues that have a blank value for this field are first in the list.

Instead, anything that does not have a value should be pushed to the end of the list.  They are essentially undefined.

If I'm sorting a list of 300 isses by version number, I'm not asking to see the blank ones first -- I'm asking to see the lowest version number first.",0.6653458885118587,0.6,"The two tickets are related to sorting behavior but address different aspects. Ticket1 specifically focuses on changing the sort order for the due date column, suggesting that items with no due date should be placed after those with a defined due date. It also discusses the intricacies of handling issues with and without due dates in the context of priority and target versions. On the other hand, Ticket2 is more general, proposing that sorting in ascending order should treat blank fields as the highest value, pushing them to the end of the list when sorting numerically or alphabetically. While they both deal with improving sorting functionality, the details and contexts differ.","N/A (Since the probability is below 70%, it's not recommended to combine these into a single requirement. However, if they were to be combined due to their thematic similarity despite differences, it could look like this:)

**Subject:** Enhance Sorting Functionality for Improved Data Visibility

**Description:** Improve the sorting mechanism across various columns to enhance usability and data prioritization based on user needs. Specifically:
- For the ""Due Date"" column on the ""Issues Assigned"" page, modify the default sorting behavior such that issues with a defined due date are prioritized over those without when sorting in ascending order. Issues without a specific due date should either be sorted by their implicit due date (derived from the target version's due date) or placed after dated items. This change ensures that known deadlines take precedence over undefined ones.
  
- Implement a system-wide enhancement for sorting that disregards blank fields when sorting in ascending order. Items with blank values for the sorted column should be pushed to the end of the list, treating them as the highest possible value. This adjustment applies universally, ensuring that when users sort by version number, priority, or any other attribute, they see meaningful results first, with undefined entries following."
285,tp,133,24550,Open GANTT for more than 24months,"Hi,

we have projects that run for more than 24months and it is necessary to print a gantt chart over the whole project.
I'd like to increase it.

I suppose, changes necessary are in:
lib/redmine/helpers/gantt.rb

line 68: replace 24 by any number you like. Maybe we can make this a setting?
Additionally, the PNG generation needs some adaptation to fit the entire sheet on one page (font size, month/year shortened to month/2-digit-year)",83,14654,Allow a bigger range for the gantt timeline,"Currently the gantt chart can only display up to 24 months. Every bigger value is ignored and sets the chart back to 6 months.
There is no obvious reason for this constraint, so the possible range should be extended to more than 24 months (maybe 48 or a configurable value).",0.7630814735218812,0.95,"Both tickets describe a very similar issue regarding the limitation of the Gantt chart's timeframe being capped at 24 months. They also suggest enhancements to either increase the limit or make it configurable. Given the substantial overlap in subject matter and proposed solution, it's highly likely these tickets address the same underlying need and can be consolidated.","* Subject: Extend Gantt Chart Timeline Range and Add Configurability
    * Description: The current implementation of the Gantt chart is limited to displaying a maximum of 24 months, which is insufficient for projects spanning longer durations. To accommodate such projects and enhance usability, the range of the Gantt timeline should be extended to support at least 48 months as a default, with an additional option to configure this limit to any desired number through the application settings. This enhancement will require modifications to the codebase, specifically in `lib/redmine/helpers/gantt.rb` (around line 68), to replace the hardcoded 24-month limit with a variable that can be set dynamically. Additionally, adjustments must be made to the PNG export functionality to ensure the entire extended timeline fits legibly on one page, potentially involving adjustments to font sizes and date formatting (e.g., shortening year representations to a two-digit format when necessary)."
287,tp,134,24585,Hide Members,"Hey Guys,

it is possible to hide the ""Members"" container in project overview?


Thanks in advance",36,7224,Permission for seeing Members on Project Overview,"It would be nice to have permission options to set who can see the members assigned to a project (in project overview).
Ideally this isn't a on/off toggle but being able to select the roles.
Examples:
* project admins and project managers can see all members
* simple users only see the project admins
* non-members (on public projects) can't see any members.",0.600787494183694,0.8,"The two tickets are related to the visibility of project members on the project overview. Ticket1 requests the ability to hide the ""Members"" container, while Ticket2 suggests implementing permission controls to determine who can view the members list. Although the scope of Ticket2 is broader, addressing both hiding members and adding role-based permissions, the core issue of controlling member visibility overlaps. Thus, there's a high likelihood that resolving Ticket2 would also address Ticket1, making duplication beneficial with an emphasis on the more comprehensive solution proposed in Ticket2.","Since the probability of duplication is over 70%, here's a combined requirement:

    ** Subject: Fine-Grained Visibility Control for Project Members

    ** Description:
    Enhance the project overview to include fine-grained visibility controls for members. This feature should allow administrators to:
    - Hide the ""Members"" container entirely from specified roles or non-members.
    - Set granular permissions determining who can see the full member list, such as allowing project admins and managers to view all members while restricting simple users to view only project admins.
    - Implement role-based visibility settings, enabling customization of what roles can view which members (e.g., non-members on public projects can't see any members).
    
    The implementation should prioritize flexibility and usability, ensuring project privacy settings align with organizational hierarchy and security needs."
297,tp,137,24636,All issues private - Setting by project,"We have some projects which require the issues to be private, and others where it is desirable to have the issues public.

Is this something we can configure currently?(Redmine 3.3.1.stable)?

If not, what's the best way to implement this?

Thanks!!
",53,9432,Default value for the private issue flag,"It would be useful to have the possibility, to set the default value for the ""private issues""-flag for each project.",0.6173900486303714,0.9,"Both tickets revolve around the management of private vs. public issues within projects in Redmine. While Ticket1 asks if it's possible to configure projects to have private issues by default and seeks advice on implementation if not currently supported, Ticket2 directly requests the feature to set the default value for the ""private issue"" flag at the project level. The underlying intention of enhancing privacy control on a per-project basis is shared between the two tickets, making them very similar and suggesting that addressing one ticket would likely resolve the concern raised in the other.","* Subject: Configurable Default Privacy Setting for Issues per Project
    * Description: Implement a feature in Redmine that allows administrators to configure the default privacy setting for issues on a per-project basis. This will enable projects to default to having all issues as private or public, catering to the varying needs of different projects. Additionally, provide documentation or guidance on how to utilize this setting effectively for users migrating from older versions like Redmine 3.3.1.stable."
310,tp,138,24677,Include in Subproject's filter a option 'is not',A option 'is not' in Subproject's filter woud be a very helpful. The selection's shape current requires many actions that will replaced by this option. ,85,15773,Filtering out specific subprojects (using 'is not' operator),"It should be possible to select multiple subproject for which you don't want issues in the list. 

That is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.",0.65791970222801,0.95,"Both tickets request the addition of an ""is not"" filtering option for subprojects to improve efficiency in selecting or excluding specific subprojects from views or queries. The descriptions align closely in describing the need for such a feature to avoid manual exclusion processes and to handle potential dynamic changes in subprojects. Thus, it's highly likely that these tickets address the same underlying user need.","* Subject: Implement 'Is Not' Filter Option for Subprojects
    * Description: Enhance the subproject filtering functionality by introducing an 'Is Not' operator. This new option will enable users to easily exclude multiple specified subprojects from their issue lists, streamlining the selection process and dynamically adapting to changes when new subprojects are added without requiring manual adjustments. The feature should complement the existing 'is', 'all', and 'none' operators, ensuring comprehensive filtering capabilities."
312,tp,139,24764,Search in subprojects,"Hello,

In my company we're actually using (recently) a project called ""Bugtrack"" which have different subprojects for different products/specific cases,
before adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.

The actual problem is that we want to search on the main project ""Bugtrack"" to search in any subproject of this one but we can't.
A feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !

Maybe other users are interested by this feature ?

Thank you !
Arnaud",57,9909,Search in project and its subprojects by default,"The default search scope when in a project is now only the selected project. 
In my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?",0.7535176076150141,0.9,"Both tickets describe a similar need to enhance the search functionality within a project management system to include results from both the primary project and its associated subprojects. The first ticket requests a feature to optionally search in a project and its subprojects, while the second suggests implementing this as a default behavior or via a configuration option. Given the substantial overlap in their objectives, it's highly likely that addressing one ticket would resolve the issue for both parties.","** Subject: Enhanced Search Scope for Projects and Subprojects
    ** Description: Implement an enhanced search feature that allows users to effortlessly search for issues not only within the current project but also across all its subprojects. Introduce a configurable option to set the default search scope to either 'current project only', 'current project and its subprojects', or 'all projects', catering to diverse user preferences and organizational setups. This improvement will streamline the issue reporting process by ensuring comprehensive search results, thereby preventing duplicate entries and enhancing overall efficiency within the Bugtrack system."
315,fp,139,24764,Search in subprojects,"Hello,

In my company we're actually using (recently) a project called ""Bugtrack"" which have different subprojects for different products/specific cases,
before adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.

The actual problem is that we want to search on the main project ""Bugtrack"" to search in any subproject of this one but we can't.
A feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !

Maybe other users are interested by this feature ?

Thank you !
Arnaud",112,23403,Make default search scope configurable,"Right now the quick search box only searches the current project. In #22125 the person asking would like to have the default changed to ""current project + sub-projects"". I'd be interested in setting it to ""all projects"", while somebody else might like to set this to default to a specific project only.

SO I think it would be best if the admin could set the default scope of the quick search function from the admin backend.",0.516321686236291,0.8,"Both tickets revolve around enhancing the search functionality to include subprojects. While Ticket1 specifically requests a feature to search within a main project and all its subprojects when initiating a search, Ticket2 proposes making the search scope configurable, which could address Ticket1's need by allowing the default search to include the current project and its subprojects. Given that Ticket2's proposed solution is more general and encompassing, implementing it would satisfy both requirements.","* Subject: Enhance Search Functionality with Configurable Search Scope
    * Description: To improve the search experience for users managing projects and subprojects, introduce a new configuration option in the admin backend that allows setting the default search scope for the quick search box. The admin will be able to choose from the following options: 
        1. Current Project Only (default behavior)
        2. Current Project + Sub-Projects
        3. All Projects
    This enhancement will enable support teams to efficiently look up issues across projects and their related subprojects, reducing duplication of effort and improving issue resolution times. Users with different needs, as described in the referenced tickets, can customize the search to their preference, thereby addressing a broader user base's requirements."
317,tp,140,24772,Set note as private is bulk edit mode,"Hello,

Sometimes, we want to add the same private note to multiple issues. Unfortunately, when you bulk edit issues, the checkbox to set the note as private is not present.

It would be good if we could set the private flag when using the bulk edit mode to add a note to multiple issues.

Thank you",99,22368,Ability to add private comments from the issue bulk edit page,"It is currently not possible to add private comments from the issue bulk edit page, is this by design? If not it would be nice if this was possible.",0.7826445610273843,0.95,"Both tickets request the same core functionality: the ability to add private notes or comments when using the bulk edit feature for issues. The descriptions vary slightly in wording but convey the same desired improvement to the system. Given the high degree of similarity and the fact that they address the same limitation, it's strongly recommended to treat these as duplicates to streamline the development process and avoid redundant work.","** Subject: Add private notes/comments in bulk edit mode
    ** Description: Users should have the capability to add private notes or comments to multiple issues simultaneously when utilizing the bulk edit functionality. This would enhance productivity by allowing the addition of consistent private information across selected issues without the need to edit each one individually. The current absence of this feature in bulk edit mode has been identified as an inconvenience by multiple users, and its implementation would align with user expectations and streamline workflow efficiency."
321,tp,141,24792,support bulk update state of version.,"sometime I need to update the state of many version. Could redmine support bulk update the state of version. 

for example, I check some version and click one button to update the state of version.",72,13315,Bulk edit for version list view,"I just met the problem to do a thousands click when i want to have many version status set in one step. It would be great to have a similar javascript context menu for version view like we have for issues.
Escpecially the status attribute but also a bulk edit form for beeing able to apply attrib changes /custom and standard fields) to all versions then would be very useful.",0.5262243387398556,0.95,"Both tickets essentially request a feature to update the state or status of multiple versions simultaneously, indicating a strong similarity in their purpose. The descriptions diverge slightly in that Ticket2 also mentions applying changes to custom and standard fields in addition to the status, but the core requirement of bulk editing versions is shared.","** Subject: Implement Bulk Editing for Version List View
    ** Description: Enhance Redmine to support bulk editing of versions within the version list view. Users should be able to select multiple versions and perform actions such as updating the state/status, as well as editing custom and standard fields in a single step. Introduce a user-friendly interface, akin to the existing JavaScript context menu used for issues, to streamline this process and reduce the need for repetitive clicks when managing a large number of versions."
325,tp,142,24806,Possibility to hide Issue History from a role,"Hello,

In my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.
We discuss with our partners in the History of the issue by adding notes and they respond.

Actually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.


Is it possible by any way to do it ?
I think it would be great to implement this in the ""Roles and permissions"" as there is already an option for hiding Wiki History to a role like in the screenshot attached.

Thanks !",64,12089,Hide Issue History,"hello,
We are using redmine to manage our change management processes.
The functional user open end close the issue, other status are dealt by IT team. My problem is that i don’t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). 
My questions are ?
-	Can i hide issue details based on user role or permission ?
-	Can i disable clickable links to  on the issues list view based on role ?
If not, what can i do ?

Thanks 
",0.8079963749984206,0.85,"Both tickets essentially request the ability to restrict visibility of issue history based on user roles or permissions. While the descriptions provide different use cases—one involves hiding discussions with partners from customers and the other involves hiding IT actions from functional users—the core requirement of hiding issue history from specific roles is the same. Thus, these tickets can be considered very similar and合并 is recommended to streamline development efforts towards a unified solution.","* Subject: Fine-grained Role-based Access Control for Issue History
    * Description: Enhance the existing Roles and Permissions system to allow administrators to configure fine-grained access control over Issue History. This should permit selectively hiding issue history, including comments, status changes, and details of actions performed, from specific user roles. Additionally, enable the option to disable clickable links on the issues list view based on user roles to further restrict access to sensitive information. The feature should cater to diverse scenarios, such as hiding internal discussions from external clients and limiting functional users' visibility into IT operations, thereby enhancing privacy and information management within collaborative projects."
329,tp,143,24817,Files download log,"I want to view download log of uploaded files at project files. The log must be contains user, file and download time. ",76,13798,Feature Request: File download history,"Hi,

Currently, files download only show the download count info. It would be nice to see more download history such as user name, client IP, download date time etc. for auditing purpose.

Cheers,

Tao",0.637498777345514,0.95,"Both requirements essentially ask for a more detailed download log for files, specifically mentioning the need for user information, the file involved, and the timestamp of the download event. Ticket1 directly states the need for a download log with user, file, and download time details for project files. Ticket2 requests a file download history that includes additional details like user name, client IP, and download date/time for auditing purposes. The core intent overlaps significantly, suggesting that these requirements can be合并 to address the common need for an enhanced download log feature.","* Subject: Enhanced File Download Log and History
    * Description: Implement an enhanced download log feature for all uploaded files, which will provide a comprehensive history of file downloads. This feature must include detailed information for each download event: the user who downloaded the file, the specific file downloaded, the client's IP address, and the exact date and time of the download. This will not only facilitate tracking and monitoring but also serve auditing purposes by offering a complete audit trail of file access activities."
331,tp,144,24836,Option to disable file upload,How to restrict the file type upload in Redmine because the security team has raised an vulnerability ,43,8168,Allow to disable feature attachment,"Attachment max. size
should be as
Attachment max. size (zero for disabling feature)
",0.5017103761671075,0.85,"The two tickets are related to controlling the file attachment feature in Redmine, with one focusing on restricting file types due to a security concern and the other on disabling the feature by setting a maximum attachment size to zero. Since both deal with limiting or disabling file uploads, they can be considered similar enough to be combined into a single requirement that addresses overall control over file attachments.","* Subject: Enhanced Control over File Attachments
    * Description: Implement an enhanced control mechanism for file attachments in Redmine to address security concerns and administrative needs. This should include the ability to restrict the types of files that can be uploaded based on security guidelines and an option to disable the file attachment feature entirely by setting a maximum attachment size to zero. Additionally, provide a granular configuration for allowed file types and the maximum attachment size when the feature is not disabled."
344,tp,146,24883,Subscribe to a version / Watch a version,"It would be nice if we could watch a version / subscribe to its changes.

Meaning: If a new ticket is assigned to the version I watch, I will receive an email notification.

Would make it easier to follow milestones in big OpenSource projects (like Redmine).",41,8046,request to add the ability to watch a given target version,"(using 1.0.4, soon to be 1.2.0)
I would like to be able to watch a target version like I can an issue.

An important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.

This would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.

I guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.

Thanks",0.7315666140245555,0.95,"Both tickets essentially request the same feature, which is the ability to watch or subscribe to a version within a project, receiving notifications about changes such as new tickets being assigned to that version, additions, or removals from it. The descriptions vary slightly but convey the same core need for better tracking and awareness of version-related activities, particularly in the context of open-source projects and milestone management.","** Subject: Implement Version Watching & Notification System
    ** Description: Enhance the platform to allow users to watch or subscribe to specific versions within projects. This feature will provide email notifications to subscribers whenever there are changes to the watched version, including:
        - New tickets assigned to the version
        - Issues added to or removed from the version
    Users should be able to manage their subscriptions easily and choose what type of activities they wish to be notified about, promoting transparency and collaboration in managing project milestones and releases, especially beneficial for large-scale and open-source projects."
346,tp,147,24942,"Additional ""Group by results"" option for parent task","The way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.

We then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.

To view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.

To improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.",27,5325,Add Parent Task to 'Group Results By' drop down,"I just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.

To replicate go to a project and choose ""Issues"" from the top menu.  Choose the ""options"" section and then open up the drop down menu for ""group results by"".  I have attached a screenshot.


---------------------
server info
---------------------
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]
Rails 2.3.5
mysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1
redmine Revision: 3671
",0.7194709448171909,0.95,"Both tickets are requesting nearly the exact same enhancement to the issue tracking system, specifically to add the functionality of grouping results by ""Parent Task."" The descriptions provided in both tickets outline the users' need to better organize and view subtasks under their respective parent tasks, improving the overall user experience. Since the subject and description align closely, it's evident that the underlying requirement is duplicate.","* Subject: Enhance ""Group Results By"" Functionality to Include Parent Tasks
    * Description: To enhance project management efficiency and user experience, the system should be updated to allow users to group issues by ""Parent Task"" within the ""Group Results By"" dropdown menu. This improvement will facilitate quick visualization and navigation of all subtasks related to specific features or parent tasks directly from the project's issue list, eliminating the need for separate searches or individually opening each parent task to view its subtasks. This update is crucial for projects organized around releases or major items where a clear hierarchy of tasks is maintained."
359,tp,148,24943,Issue watchers to have groups in addition to users,"Currently each user must be selected one by one to be added to a watcher list.

What I propose is that this list also could contain groups.

In our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.",23,4511,Allow adding user groups as watchers for issues,"Having the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers.",0.7282296878568721,0.95,"Both tickets request the same core functionality: the ability to add user groups as watchers for issues, instead of manually selecting individual users. This would streamline the process and reduce the chance of accidentally excluding team members. The descriptions vary slightly but convey the same intent, hence a high probability of duplication.","** Subject: Add User Group Watchers to Issues
    ** Description: Enhance the issue tracking system to allow the addition of entire user groups as watchers, alongside individual users. This improvement will facilitate efficient communication and ensure comprehensive coverage of stakeholders within a project, especially beneficial for large teams where manually selecting multiple users is time-consuming and prone to omissions."
386,tp,151,25054,Enforcing Strong Password in Redmine,Enforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials ,21,4221,Force passwords to contain specified character classes,"I would like to enforce strong password for users in redmine. As if now redmine will accept any four letter password. Is there a way that applicaton checks how strong a password is when a new user register in it.

Can we implement any password generator with redmine?",0.7090465650943303,0.9,"Both requirements aim to enhance password security in Redmine by enforcing stronger password policies. While Ticket1 specifically mentions enforcing strong passwords for admin users creating new accounts, Ticket2 focuses on implementing a system-wide enforcement for all users and suggests including specific character classes in passwords. The suggestion of a password generator in Ticket2 adds an additional feature but does not change the core goal of improving password strength. Given the significant overlap in their objectives, it's advisable to consolidate these requirements.","* Subject: Implement System-Wide Password Strength Enforcement & Generator in Redmine
    * Description: To strengthen Redmine's security, implement a comprehensive password policy that enforces strong passwords for all users, including admin-created accounts. This policy should require passwords to contain a specified mix of character classes (e.g., uppercase, lowercase, numbers, special characters). Additionally, integrate a password generator within the Redmine platform to facilitate the creation of strong passwords during user registration and password reset processes, ensuring all passwords adhere to the new enhanced security standards."
390,fn-queried,152,25061,default value for user_custom_field,"Hi Everyone

In attachment I sent the screen when I created my issue ,I created a custom user field called ""REFERENTE EDFS"" I want for each project , set default values of this list(i.e.  project 1  referente edfs (tommy and alex) , project 2 referente edfs ( Mike and john) ecc...

Thanks in advance 

Tommy

",84,15358,"Default value for ""User"" type custom field","We have added ""Resolved By"" and ""Resolution Type"" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to ""Resolved"".

It would be very useful if we can provide a default value of ""current"" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.

Thanks,
Ketki
",0.5782219750516493,0.3,"The two tickets both address setting default values for custom user fields in a project management system, but the contexts and specific asks differ. Ticket1 focuses on setting different default values for a custom user field (""REFERENTE EDFS"") per project, whereas Ticket2 seeks a default value of the ""current user"" for a mandatory custom field (""Resolved By"") when the issue status changes to ""Resolved."" Since the requirements touch upon different aspects of functionality (project-specific defaults vs. dynamic current user default), they should not be marked as duplicates.",N/A (since the probability is not > 70%)
392,tp,153,25112,"In Ticket-Queries the ""new"" field ""total spent time"" is forgotten as totals-checkmark - see screenshot",nan,97,21450,Totals for Total estimated time and Total spent time,"There are missing totals for _Total estimated time_ and _Total spent time_.

The totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details.",0.5292294976536741,0.9,"Both tickets are related to the addition of missing totals for time tracking within a system, specifically mentioning ""total spent time"" in Ticket1 and both ""Total estimated time"" and ""Total spent time"" in Ticket2. The descriptions, though brief, indicate a common goal of enhancing project overviews by including these summary values. Given the substantial overlap in subject matter and the enhancement's purpose, it's highly likely that these tickets address the same feature request from slightly different angles.","* Subject: Enhance Ticket Queries with Totals for Time Tracking
    * Description: Improve the Ticket-Queries module by implementing totals for both ""Total Estimated Time"" and ""Total Spent Time."" This enhancement will include a checkmark option to display these totals, facilitating a more comprehensive overview of project efforts. Users will be able to summarize and view aggregated time data without delving into detailed entries, enabling efficient monitoring and management of project timelines and resources."
396,tp,155,25300,Merging issues,"User story:
Sometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.
It can be available in issues report under right mouse  button.

",40,7997,Merge Issues,"Feature Request: Merge related issues

The idea would be to create a ""Merge Issue"" link next to the ""Duplicate"" and ""Delete"" links when viewing or updating Issues. Clicking it presents a box allowing you to enter an Issue number to merge with. Merging two issues combines all the comments and status updates chronologically (and of course presents an option to re-edit the title of the newly combined issue).

This would be super helpful! Sometimes issues are entered as separate tickets, when in fact they are the same or merely different aspects/perspectives on the same task. We don't want to just delete or close one of them, because they often contain useful comments relating to that particular aspect of the same task. Sorting through all the duplicate issues is a huge pain, but merging the issues would solve this problem.",0.6246854744082869,0.95,Both requirements describe nearly identical functionalities aiming to merge two or more issues/tickets that might have overlapping information or represent the same problem from different viewpoints. The users in both cases want to consolidate relevant data from separate tickets into a single ticket to avoid duplication of effort and maintain a clear workflow. The minor differences in phrasing do not change the core purpose of the requested feature.,"* Subject: Merge Duplicate & Related Issues
    * Description: Enhance the platform with a ""Merge Issues"" functionality to efficiently combine multiple tickets that address the same underlying problem or are different aspects of the same task. This feature will be accessible via a prominent ""Merge Issue"" button on the issue view and update pages, alongside ""Duplicate"" and ""Delete"" options. Upon selection, users will input the target issue number to merge with. The system will then整合 all comments, status updates, and attachments chronologically into a single, coherent issue while offering an immediate opportunity to revise the merged issue's title and description for accuracy. This will streamline issue management, prevent information scatter, and facilitate a more organized approach to handling interconnected tasks or reports."
409,fn-queried,156,25381,Allow project selection when editing timelog entries,"When you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.

This patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.

The need for this crops up when project managers have to fix time entries logged on the wrong projects.

This patch is for Redmine version 3.3.2-stable",2,588,Move timelog between projects,"It'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example
cause of mistake.

",0.589390505647199,0.6,"The two tickets are related to editing timelog entries in terms of project association but address slightly different aspects. Ticket1 focuses on enhancing the editing process by adding a project selection dropdown, which is currently available when creating new entries but not when editing. This is particularly useful for correcting project assignments. Ticket2, on the other hand, suggests a more general feature of moving or deleting timelog entries between projects, which could include the functionality of Ticket1 but also extends to outright moving logs without necessarily editing them. While they are closely related, they are not identical in scope, hence the moderate probability.","Since the probability is not >70%, no new combined requirement is drafted. However, if they were to be merged based on their similarity, it might look something like this:

**Subject:** Enhance Timelog Management with Project Selection and Transfer Capabilities

**Description:** Improve the timelog management system to facilitate both editing and transferring of timelog entries across projects. This enhancement will include:

- Implementing a project selection dropdown during the editing of timelog entries, mirroring the functionality present when creating new entries. This will enable users, especially project managers, to swiftly correct misallocated time entries by changing the associated project, with the system automatically updating the type of hours and other project-specific details.

- Introducing a feature to move timelog entries directly between projects, akin to the 'issue_move' function, allowing users to reassign time logs due to mistakes or changes in project scope, without the need for deletion and recreation.

This unified feature request addresses ticketing system compatibility with Redmine version 3.3.2-stable and aims to streamline project time management tasks."
418,tp,157,25454,Add bulk edit after save hook,"Correct me if I'm mistaken, but now there only exists a @issue_bulk_edit_before_save@ controller hook. This makes it impossible to provide consistent behavior for plugins implementing edit_after_save controller hooks.

Say, a user edits an issue via issue view and triggers a @issue_edit_after_save_hook@ which handles the issue in a proper way. The same is expected to happen when an issue is edited via context menu (right click) in any multiple issues view, but there is no way to provide that as @bulk_edit@ method is called for context menus and there is no @issue_bulk_edit_after_save@ hook which makes @issue_edit_after_save@ hook useless.

I think it would be useful to have something like this in issues#bulk_edit controller method:

<pre>
def bulk_edit
  ...
  @issues.each do |orig_issue|
    ...

    begin        
      Issue.transaction do          
        call_hook(:controller_issues_bulk_edit_before_save, { :params => params, :issue => issue })          
        issue.save!          
        call_hook(:controller_issues_bulk_edit_after_save,  { :params => params, :issue => issue })          
      end        
    saved_issues << issue
    rescue ActiveRecord::RecordNotSaved => e        
      unsaved_issues << orig_issue
    end

    ...
  end
  ...
end
</pre>

Hope someone can make a proper patch out of this or provide a better way of managing after_save hooks for bulk edit. Thanks.",47,8757,Add hook for bulk edit post-save state,"There is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.

Patch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212",0.7288036605901913,0.95,"Both tickets request the addition of a post-save hook for bulk editing issues in Redmine. The descriptions align closely, with the first ticket describing the absence of such a hook and suggesting its implementation, while the second ticket confirms the lack and provides a link to an existing patch that introduces the `controller_issues_bulk_edit_after_save` hook. Given the substantial overlap and shared objective, these tickets can be considered duplicates.","* Subject: Implement bulk edit post-save hook for consistent plugin behavior
    * Description: To ensure consistency across issue editing processes and facilitate plugin functionality, introduce a new hook named `controller_issues_bulk_edit_after_save`. This hook should be triggered after saving each issue within a bulk edit operation, mirroring the functionality of the `issue_edit_after_save` hook for individual issue edits. The implementation should allow plugins to perform necessary post-save actions when issues are updated in bulk, maintaining transactional safety and providing the necessary parameters for each issue being processed. A community-contributed patch is available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212, which can serve as a starting point for this enhancement."
419,tp,158,25512,Favicon for a project (avatar for a project),"Please add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.",31,5973,Ability to set project icons,It would be very convenient to see individual icons on project's list page.,0.6900973791717634,0.95,"Both requirements essentially ask for the same feature—adding project-specific icons or favicons to enhance the visual identification of projects within the Redmine interface. The descriptions vary slightly in their wording but convey the same intent. Hence, it is highly recommended to treat these as duplicates and consolidate them into a single requirement.","* Subject: Implement Project-specific Icons in Redmine 3.3.x
    * Description: Enhance the project list view in the upcoming Redmine 3.3.x release by introducing a feature that allows administrators to assign unique icons or avatars to individual projects. This improvement will facilitate quicker visual differentiation and identification of projects within the list, thereby enhancing usability and organization for users."
425,tp,159,25542,Custom Fields available over the API,"Hi Guys,

the /custom_fields.json is not available for normal project members.

I have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. 

Please make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.

Regards Tobias",95,18875,"[Rest API][custom field]Why ""GET /custom_fields.xml"" required the System manager's privilege?","Dear developers

Why Getting ""Custom_field's Possible values"" required the System manager's privilege?

I am creating a Redmine client by C#.
My Redmine project have Custom Field as List Format.

My C#'s Client can get Custom Field value,but can not update Custom Field.
Becase Getting ""Possible values"" required the System manager's privilege.

I can not give the system administrator privileges to all users.
I want all user to be able to get Possible values.

Best Regards.",0.6480112371148267,0.9,"Both tickets essentially request the same feature improvement to the Redmine API regarding access to custom fields for non-administrative users. The first ticket asks for custom fields to be made accessible for validation before submitting an issue, while the second ticket specifically mentions the inability to get possible values for list-type custom fields without system manager privileges. The underlying issue in both cases is the restriction on accessing custom field data via the API for regular project members.","* Subject: Extend API Access for Custom Fields to Project Members
    * Description: Enhance the Redmine REST API to allow project members to access and interact with custom fields, including retrieving possible values for list-type fields, without requiring system manager privileges. This will enable users to validate and set custom fields correctly when submitting or updating issues via the API, improving the workflow for third-party application integration and automation tasks."
-1,fn-no-query,160,25562,restricting the number of files a user can upload,"Hi,

By not restricting the number of files a user can upload, the users may
upload numerous large files to exhaust the resources available. This may cause a potential Denial of Service (DoS) scenario

How to limit the number of files a user can upload or how to monitor how many files a user uploaded?

Thank you",94,18556,Add ability to configure limit of attachments at once,"Currently there is a hard limit of only 10 attachments per change of an issue. It would be nice if this was configurable or removed completely if possible.

I'm wondering if there was a specific reason why this limit was added in the first place.

Related Issue: #18555, #8579
This is the code in question: source:/trunk/public/javascripts/attachments.js#L6",0.49159859594347655,-1,,
445,fn-queried,165,25768,Group hierarchy,"I have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.
I wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'",38,7774,Sub groups or Multi-level groups,"Did a preliminary search, but did not find a feature request for this.

I see a need for having sub-groups as part of groups ability

Group A
   Group B
       Member
       Member

Group C
    Member
    Member

Group D
    Member
    Group E
       Member

As an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.

This would eliminate the need for duplicate entry of names into different groups.

",0.5347587916323499,0.6,"The two tickets are related to group structures but address slightly different aspects. The first ticket focuses on hierarchical inclusion within filtering (specifically for beneficiaries with a mention of mobile, iOS, and Android developers), while the second ticket proposes a more general implementation of subgroups or multi-level groups without specifying any particular user category. There's overlap in the idea of group hierarchy, but the use cases differ. A duplication might not fully capture the unique aspects of each requirement, yet combining them could lead to a more comprehensive group management feature.","(Provided since the probability is relatively close to 70%. However, please consider that merging might not perfectly fit each original intent.)
    ** Subject: Enhanced Group Hierarchy and Filtering
    ** Description: Implement an advanced group management system that supports both sub-group creation and hierarchical filtering based on group membership. Users should be able to create multi-level group structures such as:
        - Group A
            - Subgroup B (including Members)
            - Subgroup C (with its own members)
        This feature will allow for more precise assignment and visibility control in projects. For instance, the 'Mobile Developer' group can encompass 'iOS Developer' and 'Android Developer' subgroups, enabling filters to include 'Mobile Developer' to also show results from 'iOS Developer' while excluding 'Android Developer' where appropriate. This enhancement will reduce duplicate data entry and facilitate targeted communication and access permissions."
453,tp,166,25776,Automated Plugin installer,"It would be great if Redmine could support Plugins installation in a ""Wordpress"" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.
",135,24611,Plugin installer on the Administration page,"I am having a hell of a time installing a plugin - specifically ""Checklists"" which is the top rated plugin. I am doing this to evaluate the plugin installation process, but I am having no luck. 

First, some background.

I am not a ruby, or even a web developer. I write embedded code, and I would like to use Redmine to help manage my projects. I have some linux skills, but am a long way from being a guru.

I installed Redmine on an Ubuntu 16.04, Apache, and MySQL system using ""sudo apt-get"". For me, this was the easiest, most consistent way to resolve all dependencies and get a basic working system up and running. Trying to resolve all the discrepancies between the various installation instructions in the Guide drove me to madness. I finally found some installation instructions on the Ubuntu help pages that delivered a working system.

Now that it is installed, I cannot seem to get plugins working. I believe this is due to permissions. Since the system was installed with ""sudo apt-get install ..."" the files have root permissions. If I try to run the various commands indicated in the various plugin guides I usually get errors regarding permissions. (I am repeating my journey to madness trying to resolve all the unexplained differences) . If I try to run the commands with sudo, I get errors or warnings about running as root. In most cases I end up with a broken system. I have not figured out the magical incantation to install this plugin yet.

The feature request I have is to have an Administration page where you could upload the zip file, and it would install the plug-in to the appropriate directory, backup the appropriate files (as needed), run the appropriate commands with the appropriate credentials, and deliver a working system at the end.

I think this would help make this system a lot more usable to non-ruby developers.",0.5911118057928957,0.9,"Both tickets revolve around improving the plugin installation process in Redmine to make it more user-friendly and accessible, especially for users who are not proficient in Ruby or web development. While Ticket1 focuses on a ""WordPress-like"" experience with browsing and automatic handling of plugin installations, Ticket2 describes a specific administrative interface for uploading ZIP files and managing the installation process seamlessly. The underlying goal of enhancing the plugin management experience for users with limited technical expertise overlaps significantly.","* Subject: Streamlined Plugin Management Interface for Easy Installations
    * Description: To enhance the user experience for all users, including non-technical administrators, Redmine should implement a unified and intuitive plugin management interface within the Administration panel. This feature will enable users to effortlessly install, update, and manage plugins without direct command-line interaction. It should support both browsing and selecting plugins from an official repository and uploading ZIP files directly. The system will automatically handle dependencies, permissions, backups of affected files, and execution of necessary setup scripts, ensuring a seamless and secure installation process. This will alleviate the need for deep technical knowledge, thereby widening Redmine's appeal and ease of use across diverse user backgrounds."
457,tp,167,25779,cannot know who delete issue,"we don't know who delete issue, can we add a notification mail to the project manager notify him that user ""x"" delete an issue  from the project at ""date""+"" time""
 ",93,18027,Notification when deleting an issue,"Currently, issue deleted are ... deleted :-)
To avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).

If you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon.",0.6200916166100368,0.9,"Both tickets essentially request a notification system when an issue is deleted. Although the descriptions vary slightly in their details, the core requirement is the same – to be informed about issue deletions and potentially by whom and when. Ticket1 specifically asks for a notification email to the project manager, mentioning the user who performed the deletion and the timestamp. Ticket2 suggests a more general notification (adhering to existing notification rules and including Redmine administrators) with the full history of the issue before deletion, and contemplates the idea of soft deletes as an alternative. Given the significant overlap in the desired outcome, it's advisable to merge these tickets into one.","* Subject: Implement Notification System for Issue Deletions
    * Description: Develop a notification system that alerts specified recipients (including project managers and Redmine administrators) when an issue is deleted. The notification should contain details such as the username of the person who initiated the deletion, the date and time of deletion, and a complete history of the issue prior to deletion. Additionally, consider incorporating options for handling attachments within these notifications. If implemented, this feature could either complement or substitute a potential 'soft delete' functionality, depending on further decision-making regarding issue retention strategies."
463,tp,169,25799,Issue Import - Dynamic Parent pasks,"We use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We´d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don´t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.

Useful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.",101,22701,Allow forward reference to parent when importing issues,"When importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.

To work around this limitation, the issue import could be extended to use multiple passes:

# one to import basic issue properties
# one to import relations to other issues

This way it becomes easier to create the CSV files for imports, since order is no longer important.

This change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.



Attached you find a patch series based on trunk r15361.

While implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.


h3. 0001 Extend test data for issue import

This change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.

The patch also updates the existing tests, where the number of imported issues is asserted.

h3. 0002 Add test for issue relations to following rows

This patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.

h3. 0003 Multi-pass CSV import

This patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.

The @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.

Since @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.

In the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.

The patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.

Finally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.


*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing ""Related Issues"" properly, which I would like to contribute next, if this patch is accepted.",0.7276384408591307,0.9,"Both tickets address the issue of importing issues with parent-child relationships in Redmine, with a focus on overcoming the limitation where parent issues must be imported before their child issues. Ticket1 suggests using a dynamic link via a local ID within the import file to establish these connections, while Ticket2 proposes a multi-pass import process to handle the ordering problem and facilitate the import of issue relations more generally. Given that both propose solutions to enhance the issue import functionality concerning parent-child relationships, their goals are very similar, and the implementation suggested in Ticket2 could encompass the need expressed in Ticket1.","** Subject: Enhance Issue Import Functionality for Dynamic Parent-Child Relationships
    ** Description: Improve the issue import feature in Redmine to allow for more flexible handling of parent-child issue relationships during project setup. Implement a mechanism that enables the import of issues and their relationships without requiring a strict order of import or explicit issue numbers. This enhancement will incorporate a dynamic linking system, potentially using local IDs within the CSV file, and adopt a multi-pass import process to decouple basic issue properties from issue relations. This will ensure that template-based import files can be used effectively, accommodate various issue dependency structures, and pave the way for the straightforward import of general issue relations in addition to hierarchical parent-child links."
481,tp,171,25810,Add #ID into Import Feild for update issue properties,"When I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.
Sometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.

So I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.
The expect result view may like attached import.png.",114,23448,Allow updating existing issues via CSV import when their ID's are the same,"I'd like to have the possibility to update issues with a csv import.
Atm, if i import a task with an already existing ID, the ID changes and a new task is created.",0.6442594649642709,0.95,"Both tickets describe a very similar need to update existing issues within a project by using their unique IDs as a reference during the CSV import process, rather than creating duplicate issues. The users express inconvenience with the current functionality that only allows creating new issues and express a desire for an improved workflow that facilitates updating properties of existing issues when their IDs match those in the CSV file. Given the high degree of overlap in both the subject and description, it's clear that these tickets address the same core feature request.","* Subject: Enable CSV Import to Update Issue Properties by Matching Issue IDs
    * Description: Enhance the CSV import functionality to allow users to update properties of existing issues by matching on the issue ID. This improvement will facilitate updating multiple issues at once when offline changes are made and network connectivity is restored. Users should be able to map the #ID field in their CSV files to the corresponding issues in the system, enabling the import process to modify these issues instead of creating duplicates. The expected outcome will streamline the workflow for users who manage large volumes of issue updates and need an efficient method to synchronize their changes when reconnected to the network."
484,fp,173,26077,Add project Icons,"Hi.

Please create an new project page view. I wish to add an images for projects. 

The project can be presented like in the attached file.

Best regards
Bartłomiej Ekiert
",31,5973,Ability to set project icons,It would be very convenient to see individual icons on project's list page.,0.7777960584003715,0.9,"Both tickets revolve around the idea of adding icons to projects to improve visual identification, albeit with slight differences in implementation details (one focusing on a project page view, the other on the projects list page). The core requirement of incorporating project icons is shared, hence they can be consolidated to avoid duplication of effort.","* Subject: Implement Project Icons in Project Views and List
    * Description: Enhance the project management interface by introducing the ability to set unique icons for each project. These icons should be visible both on the individual project page and the projects list page, allowing for easier and faster visual recognition of different projects. Users should have the option to select an image from a predefined set or upload a custom icon, adhering to specified image guidelines for consistency and performance optimization."
486,fp,173,26077,Add project Icons,"Hi.

Please create an new project page view. I wish to add an images for projects. 

The project can be presented like in the attached file.

Best regards
Bartłomiej Ekiert
",158,25512,Favicon for a project (avatar for a project),"Please add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.",0.6312089175282076,0.85,"Both requirements revolve around enhancing project visualization by adding icons or images to represent projects. While Ticket1 focuses on creating a new project page view with images, and Ticket2 specifically asks for favicons or avatars for projects in the project list of Redmine 3.3.x, the core intention of enhancing project identification through visual elements is shared. Thus, it's recommended to consolidate these into a single requirement that addresses the addition of project icons across the platform.","* Subject: Implement Project Icons and Avatars
    * Description: Enhance project visualization by introducing the ability to add unique icons or avatars to each project. This feature should include both a new project page view where images can be displayed as depicted in the attached reference, and integration of these icons into the Project List view in Redmine version 3.3.x, functioning akin to favicons for better project identification and differentiation. Ensure compatibility and consistent display across different interfaces and platforms."
489,tp,174,26165,API for Redmine configuration & information,"Hello,
Is it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the ""settings"" page)?

For instance, I have to code an node app differently depending on the version of the Redmine instance.",58,9912,Expose Redmine server settings via REST API,"I have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).

I could modify the integration tests to start a Redmine server, 
ideally - provide a pre-configured test database instance,
then set some settings like ""authentication required"" and run tests with it.
then turn this setting OFF and run the tests again.

This would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.

So, is it possible to support at least some settings manipulation using REST API?

I can list the ones most important for me at this moment:
* ""authentication required""
* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)
",0.767532740292371,0.9,"Both tickets are requesting an API to interact with Redmine's configuration and settings. Although the descriptions provide different use cases, the core requirement of accessing and modifying Redmine's configuration through an API is shared. Thus, it's highly likely that addressing one ticket would resolve the needs of both tickets.","* Subject: Unified API for Redmine Configuration Management
    * Description: Develop a comprehensive REST API to facilitate the retrieval and modification of Redmine's configuration and system information across various instances. This API should enable users to:
        - Retrieve Redmine's version, environment details, Source Code Management (SCM) integrations, and installed plugins.
        - Get current configuration settings akin to the ""settings"" page, including but not limited to authentication requirements and database configurations.
        - Update settings dynamically, such as toggling ""authentication required"" and potentially configuring database settings upon Redmine startup, supporting options for in-memory databases for testing purposes.
    This unified API will cater to the needs of automating tests, adjusting Redmine configurations based on the deployment environment, and facilitating easier integration with external applications, thereby enhancing flexibility and automation capabilities for Redmine users and developers."
495,fp,176,26326,Adanced relation handling for Issue Import,"As in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don´t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn´t change, even if rows are deleted inbetween.",101,22701,Allow forward reference to parent when importing issues,"When importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.

To work around this limitation, the issue import could be extended to use multiple passes:

# one to import basic issue properties
# one to import relations to other issues

This way it becomes easier to create the CSV files for imports, since order is no longer important.

This change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.



Attached you find a patch series based on trunk r15361.

While implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.


h3. 0001 Extend test data for issue import

This change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.

The patch also updates the existing tests, where the number of imported issues is asserted.

h3. 0002 Add test for issue relations to following rows

This patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.

h3. 0003 Multi-pass CSV import

This patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.

The @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.

Since @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.

In the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.

The patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.

Finally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.


*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing ""Related Issues"" properly, which I would like to contribute next, if this patch is accepted.",0.7389377783091091,0.85,"Both tickets address improvements to the issue import functionality when dealing with relational data, specifically parent-child relationships. Ticket1 suggests relating to a fixed ID column to maintain links even when rows are deleted, while Ticket2 proposes a multi-pass import process to handle the order independence of parent and child issues. The underlying goal of both tickets is to enhance the flexibility and usability of the import feature when importing interconnected issues, making them quite similar in intent. The attachment of a patch series in Ticket2 that introduces multi-pass import also aligns well with the enhancement sought in Ticket1, as maintaining relationships regardless of import order would alleviate the need for a strict sequence as mentioned in Ticket1.","** Subject: Enhanced Issue Import Functionality for Parent-Child and Inter-Issue Relations
    ** Description: Improve the issue import process to better manage parent-child and general issue relations during CSV imports. Implement a mechanism that allows for forward referencing of parent issues during import, eliminating the necessity for a specific order. This will be achieved through a multi-pass import feature where:
       - The first pass imports basic issue properties.
       - The second pass establishes relations to other issues, ensuring that even if parent issues are listed after their children, the relationships are correctly formed.
     Additionally, introduce an option to relate imported issues based on a stable identifier, allowing relationships to persist even if rows are removed from the import file. This update will facilitate smoother setup for new projects requiring selective subsets of standard tickets without the risk of breaking relational links."
497,fp,176,26326,Adanced relation handling for Issue Import,"As in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don´t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn´t change, even if rows are deleted inbetween.",169,25799,Issue Import - Dynamic Parent pasks,"We use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We´d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don´t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.

Useful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.",0.6942453906145971,0.9,"Both tickets describe a need to improve the issue import functionality in Redmine to better handle relationships between issues, especially when importing a standard set of issues as a template for new projects. The core issue revolves around maintaining or establishing the correct parent-child links despite deletions or不确定性 in the import order. Slight differences in proposed solutions (ID-column reference vs. dynamic link) can be consolidated into a single, more comprehensive requirement.","* Subject: Enhanced Issue Import with Dynamic Relationship Management
    * Description: Enhance the issue import feature to facilitate the creation of new projects with a standard set of interconnected issues without manual relationship management post-import. This enhancement should allow for the import of issues as a template while dynamically resolving parent-child links, even when the parent issues do not yet exist. Users should be able to define a local or static ID within the import file that remains unchanged despite deletions or modifications to the import order, ensuring consistent linking. Additionally, introduce an option to relate imported issues to a predefined, unchanging identifier or use a designated column for dynamic parent-task assignment to streamline the process and maintain the intended hierarchical structure."
500,tp,177,26327,Redmine Should have Defeult Categories for Project trackers. See description.,"Redmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.

Thanks in Advance.",7,1278,Creating global (default) categories.,"It would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.

Redmine is the Best!!!",0.777548095737824,0.95,"Both tickets describe nearly identical requests to implement a feature in Redmine that allows administrators to set default categories for project trackers globally, reducing the need to manually create the same categories for each individual project. The users want to streamline their workflow by having predefined categories like Data, Design, Functionality, and Usability available by default across all projects. The minor differences in wording do not change the essence of the request.","* Subject: Implement Global Default Categories for Project Trackers
    * Description: Enhance Redmine to include a feature that enables administrators to define and set global default categories for project trackers. This will alleviate the need for repetitive setup by automatically applying common categories (e.g., Data, Design, Functionality, Usability) to all new projects, with the option to add or modify these defaults as needed in an administrative settings module. This improvement will significantly streamline project initialization and ensure consistency across multiple projects."
510,tp,178,26357,Checking time tracking even if no hour spent,"For the moment, we can only access the time tracking of a tracker if we have at least 1 hour spent.
The problem is that I don't count time spent in hour but in days, and I created custom fields.
The users sometimes put the real amount of hours spent, and sometimes ""0"", because they indicate that they spent ""X"" days.

Is it possible to access the time tracking of a tracker even if we have no hour spent on it?",49,9090,Issue view does not show spent time if hours are zero,"If I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as ""Spent time: -"". 
It would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue.",0.5656251690183653,0.9,"Both tickets address the same fundamental issue: the display and accessibility of time tracking information when no hours are spent or when zero hours are logged. Although the descriptions focus on slightly different aspects (Ticket1 emphasizes accessing the time tracking section while Ticket2 focuses on the visual representation in the issue view), the underlying requirement to handle and display ""zero-hour"" entries consistently is shared.","* Subject: Improve Time Tracking Display for Zero-Hour Entries
    * Description: Enhance the system to properly display and allow access to time tracking information even when users log zero hours on a task. This should include updating the time tracking section to be accessible regardless of the hours spent and modifying the issue view to show ""0 hours"" instead of ""-"" when no time or zero hours are logged. Additionally, ensure that custom fields reflecting days instead of hours are integrated into this view, allowing users who track time in days to have a cohesive experience. The update should maintain a clear link or indication for users to view all logged time entries, including those with zero hours, on the respective issue."
512,tp,179,26358,Change unit of time for time tracking,"For the moment, the time spent is measured in hours.
I'd like to customize it, to be able to set ""seconds"" or ""days"" for example.

Could it be possible to have a parameter in project or global Redmine configuration to set a unit of time tracking?",5,877,ability to vary the units used to track time,"Some development methodologies suggest tracking time in points or even ""tomatoes"" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking.",0.724446139748807,0.95,"Both tickets request the enhancement of customizing the unit for time tracking in Redmine. While Ticket1 specifically mentions seconds, days, and the option to set it via project or global configuration, Ticket2 more broadly asks for the ability to use various units such as points or a Pomodoro-based system. The underlying intent is the same: to extend the time tracking functionality beyond just hours.","** Subject: Enhanced Time Tracking Units Customization
    ** Description: Enhance Redmine's time tracking feature to allow users to customize the unit of measurement for tracked time. This should include, but not be limited to, options such as seconds, minutes, hours, days, as well as non-traditional units like ""points"" or ""Pomodoros."" Implement a flexible configuration setting, available at both the project and global levels, enabling teams to adopt diverse development methodologies and track time in a manner that best suits their workflow."
517,tp,181,26467,expand & collapse gantt chart list,"can you make the gantt chart list expandable and can be collapsed? so we can focus om a specific  issues?
 ",33,6417,Allow collapse/expand in gantt chart,"Eric - it would be great if there was a way to collapse nested structures in the Gantt chart plugin you developed.. for example, if we don't want to see all the tasks/bugs for our versions, but just want a high level picture of what's coming up, it would be nice to be able to collapse each version to a single row that shows the due date for the version. Possible? Thanks!",0.804771256379571,0.95,"Both tickets are requesting nearly identical functionality for the Gantt chart, specifically the ability to expand and collapse items within the chart to focus on particular details or get a higher-level overview. The descriptions vary slightly in context (one mentions focusing on specific issues, the other on nested structures and versions), but the core requirement is the same.","* Subject: Implement Expand/Collapse Functionality in Gantt Chart
    * Description: Enhance the Gantt chart to include a collapse/expand feature, enabling users to hide or reveal detailed information as needed. This will allow users to focus on specific issues or tasks by collapsing others, providing both a detailed view for managing individual items and a broader perspective for understanding the high-level timeline. The feature should support collapsing and expanding of nested structures, such as tasks within versions, to display a condensed version with only version due dates for a概括 or expand for comprehensive task details."
524,tp,183,26527,Show previous comment version when editing an issue comment,"I am able to edit an issue comment. I want to give this right to the other users too. But currently there is nowhere a hint that the comment has been edited. The disadvantage is that a user can manipulate a conversation and nobody gehts knowledge of that.

It would be great if I could see how often a comment was edited and the user can have a look to the previous versions. If too hard, the small, but helpful alternative would be, to show the amount of edits and the author/time of the last edit.",65,12388,diffs for editions of issue/notes entries,"It should be possible to see what changes had been done to the issue/note if someone edited it after it was already created.
If I edit issue description there is a diff entry generated. But if I edit the note itself there is no info that the note was edited.",0.6048689750918569,0.9,"Both requirements address the need for tracking and displaying edits made to comments or notes within an issue tracking system. They emphasize the importance of maintaining a transparent history of changes to ensure accountability and prevent potential manipulation of conversations. While Ticket1 focuses on providing access to previous comment versions and tracking edit history, Ticket2 specifically requests a diff feature to highlight changes made in issue/notes entries upon editing. The core objective of enhancing edit transparency overlaps significantly, suggesting that these tickets can be merged under a broader requirement.","* Subject: Enhanced Edit Transparency for Issue Comments and Notes
    * Description: Enhance the issue tracking system to provide enhanced transparency for edits made to both issue comments and notes. This includes implementing functionality to view the edit history, with details such as the number of edits, the author, and timestamp of each edit. Additionally, introduce a diff feature that visually highlights changes made in each edit, allowing users to easily discern modifications to both issue descriptions and individual notes. This will ensure that all users can track alterations in the conversation, promoting accountability and preserving the integrity of the discussion thread."
525,tp,184,26529,Email notification when watcher is added and removed,Allow observers to be warned when they are inserted or removed from a task.,12,1757,Immediately send a notify email when a user is added to issue's watcher list,"Hi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.

But I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?",0.5723943687281707,0.85,"Both requirements revolve around sending email notifications to users when they are added or removed as watchers on an issue. Although Ticket1 mentions both addition and removal, while Ticket2 specifically focuses on addition and suggests including a summary of the issue in the notification, the core idea of的通知机制是相同的。因此，这两个需求高度相似，建议合并以减少重复工作并统一功能实现。","* Subject: Enhanced Email Notification for Watcher List Changes
    * Description: Improve the watcher functionality to immediately send a notification email to a user when they are added or removed from an issue's watcher list. Upon addition, the system should include a summary of the issue in the notification email, ensuring that the new watcher is informed of the context. Similarly, upon removal, a notification should be sent confirming their removal from the list, maintaining transparency and communication efficiency within the project."
532,fp,185,26534,Allow project bulk edit of time entries,"This issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.

- Activity field is updated on project change (actually, the entire form is replaced on project change)
- Issue autocomplete is available only for bulk editing of time entries from the same project
- Added the ""Clear"" checkbox to the issue field.
- Moved the method ""bulk_edit_error_messages"" from issues_helper to application_helper because now it is used by both entities (issue and time entry).",156,25381,Allow project selection when editing timelog entries,"When you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.

This patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.

The need for this crops up when project managers have to fix time entries logged on the wrong projects.

This patch is for Redmine version 3.3.2-stable",0.6280985537626927,0.9,"Both requirements focus on enhancing the functionality related to editing time entries with respect to project selection. Ticket1 describes adding project field to bulk edit mode for time entries, while Ticket2 extends this concept to individual time entry editing, ensuring consistency in project selection capabilities across bulk and single edit operations. The overlap in enhancing project handling in time entry edits justifies a high probability of being duplicates, considering their shared objective to improve time tracking management, especially concerning project assignment corrections.","* Subject: Enhance Project Selection in Time Entry Editing
    * Description: This requirement aims to streamline project assignment in time entry management by implementing consistent project selection capabilities across both individual and bulk editing modes. It includes the following enhancements:
        - Introduce a project selection dropdown when editing an existing time entry, mirroring the functionality present during the creation of new time entries, ensuring project managers can easily correct misallocated time logs.
        - Extend the bulk edit feature for time entries (as initiated in #588#note-28) to include project field editing, enabling efficient adjustments of multiple time entries' project associations simultaneously.
        - Maintain functionality such as updating the activity field based on project changes, restricting issue autocomplete suggestions to the selected project, and providing a ""Clear"" option for the issue field during bulk edits.
        - Centralize utility functions like ""bulk_edit_error_messages"" within application_helper for broader reuse across issue and time entry entities.
        - Ensure compatibility and functionality with Redmine version 3.3.2-stable, with considerations for necessary JavaScript adjustments to dynamically update entry types and details in response to project changes, whether editing singly or in bulk."
533,tp,186,26553,Overly restricted number of ReST results,"Currently, ReST queries are limited to 100 elements.

This makes it impossible to, e.g., retrieve all users in one query.

Given today's computing power, please check whether the limit can be lifted.

A proposal is given in the attached patch.",89,16069,Allow configuration of API limit instead of hardcoding at 100,"The below tested patch makes the previously harcoded limit of 100 items in a RESTful API response configurable in the Administration GUI. The default value is still 100. This is based on 2.4.1.stable.

This is quite useful since it is nice and simple to just get the full response in a single page rather than having to traverse pagination, and a limit of a bit more than 100 is still very performant for many sites -- the limit beyond which performance starts to degrade really depends on the particular site's usage, so should be controllable by the local administrator.

<pre><code class=""diff"">
Index: app/controllers/application_controller.rb
===================================================================
--- app/controllers/application_controller.rb       (.../trunk/app) (revision 13385)
+++ app/controllers/application_controller.rb       (.../branches/code-8112/app)    (revision 13389)
@@ -519,8 +519,8 @@
     limit = options[:limit].to_i
     if limit < 1
       limit = 25
-    elsif limit > 100
-      limit = 100
+    elsif limit > Setting.api_limit.to_i
+      limit = Setting.api_limit.to_i
     end
     if offset.nil? && options[:page].present?
       offset = (options[:page].to_i - 1) * limit
Index: app/views/settings/_general.html.erb
===================================================================
--- app/views/settings/_general.html.erb    (.../trunk/app) (revision 13385)
+++ app/views/settings/_general.html.erb    (.../branches/code-8112/app)    (revision 13389)
@@ -24,6 +24,8 @@
 
 <p><%= setting_select :wiki_compression, [['Gzip', 'gzip']], :blank => :label_none %></p>
 
+<p><%= setting_text_field :api_limit, :size => 6 %></p>
+
 <p><%= setting_text_field :feeds_limit, :size => 6 %></p>
 
 <p><%= setting_text_field :file_max_size_displayed, :size => 6 %> <%= l(:""number.human.storage_units.units.kb"") %></p>
Index: config/settings.yml
===================================================================
--- config/settings.yml        (revision 13387)
+++ config/settings.yml        (revision 13389)
@@ -73,6 +73,9 @@
   default: localhost:3000
 protocol:
   default: http
+api_limit:
+  format: int
+  default: 100
 feeds_limit:
   format: int
   default: 15
Index: config/locales/en.yml
===================================================================
--- config/locales/en.yml      (revision 13387)
+++ config/locales/en.yml      (revision 13389)
@@ -352,6 +352,7 @@
   setting_host_name: Host name and path
   setting_text_formatting: Text formatting
   setting_wiki_compression: Wiki history compression
+  setting_api_limit: Maximum number of items returned in a JSON/XML API response
   setting_feeds_limit: Maximum number of items in Atom feeds
   setting_default_projects_public: New projects are public by default
   setting_autofetch_changesets: Fetch commits automatically

</code></pre>",0.607892192375034,0.9,"Both tickets address the limitation of the number of results returned by the ReST API. Ticket1 requests a review of the hardcoded limit of 100 elements, suggesting it to be lifted given today's computing capabilities. Ticket2 provides a patch that implements a configurable limit through the Administration GUI, with the default remaining at 100 but allowing for adjustment as needed. The core issue and the intended improvement are essentially the same in both tickets, hence a high probability of duplication.","** Subject: Enhance API result limit configurability
    ** Description: Currently, the ReST API is restricted to returning a maximum of 100 results per query, which can be inconvenient for tasks such as retrieving all users in a single call. To improve flexibility and accommodate varying performance thresholds across different installations, implement a feature that allows the API result limit to be configurable in the Administration GUI. The default limit will remain at 100 for compatibility, but administrators should have the option to increase or decrease this limit according to their specific environment's performance capabilities. This enhancement promotes efficiency by enabling users to fetch more data in a single request when feasible, reducing the need for pagination in certain scenarios."
535,tp,187,26554,Select Wiki Page as Project Start Page,"The overview page of a project (with its issue stats and users list) is not very attractive to customers.

The Redmine website with its custom home page is an excellent proof that the overview page is not a good starting point.

I think it would be a great option to declare the Wiki start page as the start page of a project.",175,26184,wiki page in project top page,"hello,
i want to add my specific project wiki page as my redmine home page with dropdown option with that wiki name.

or if not possible in dropdown list then also ok i directly get on my home/my page of redmine with other redmine home page block.

thanks.",0.6209341690510786,0.9,"Both tickets essentially request the ability to set a specific Wiki page as the default landing or start page for a project, enhancing the project's initial presentation. The first ticket emphasizes the unattractiveness of the standard project overview page and suggests using the Wiki start page instead. The second ticket asks for a more direct approach, either through a dropdown option or directly setting a project's Wiki page as the Redmine homepage. Given the substantial overlap in the desired outcome, it's highly likely these tickets can be merged.","* Subject: Set Project Wiki Page as Default Landing Page
    * Description: Enhance Redmine to allow administrators to designate a specific Wiki page within a project as the default landing page. This feature will provide a more engaging entry point compared to the standard project overview. Users should have the option to select this customized Wiki page from a dropdown menu on the Redmine homepage, or alternatively, the system can directly route users to this personalized start page upon accessing the project, incorporating necessary Redmine homepage elements alongside the selected Wiki content."
538,tp,188,26639,Enabling creating issue within the project regarding the subproject,"Hey,

Im managing many projects, which do not have trackers as they are something general. 
Under each project I have a lot of subprojects, in which I do have trackers for issues creation. 
I would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject
Is it possible to create such option? I could not find any info regarding it. 

Thanks ",67,12704,Allow selecting subprojects on new issue form,"happy new years!
As you know, redmine sub task mechanism supported cross-project since version 2.2. 
But there is no project field on the new issue form. This is a need, when we creating new issue by the link ""Sub task Add"" on the parent issue.",0.6082385123696474,0.8,"Both tickets essentially request the ability to create issues that are directly associated with subprojects from a higher-level project view, without having to navigate into each subproject individually. While the descriptions differ slightly in their context (one mentions general projects with tracked subprojects, the other refers to a specific use-case with sub-tasks), the underlying requirement is very similar.","* Subject: Enable Subproject Selection in Issue Creation Across Projects
    * Description: Enhance the issue creation process to allow users to directly associate a new issue with a specific subproject, regardless of whether the issue is created from the main project level or via a ""Sub task Add"" link on a parent issue. This improvement will facilitate efficient issue tracking management across multiple projects and their respective subprojects, eliminating the need to enter each subproject individually to log tasks or subtasks."
554,tp,192,26656,Search Assignee,"Hello,

It will be very useful to have search for assigners when editing issue. I have a bunch of people I need to pick from, and a search as in watchers can be great. ",98,21662,Search in issue assigned dropdown list,"My team used redmine over one year，now there are about 100 people in one project。

Everytime I create a issue ，I must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.

sorry about my english,can  somebody tell me to do fix it? ",0.5847297073665915,0.95,"Both tickets describe a very similar need for improving the user experience when assigning issues to users within a project. They mention the inconvenience of having a long list of assignees and express the desire for a search functionality to quickly find and assign issues to the desired person. The difference lies mainly in the wording and context provided, but the core requirement is identical.","* Subject: Implement Assignee Search Functionality in Issue Editing
    * Description: To enhance efficiency when managing issues with a large number of project members, implement a search bar within the issue assignment dropdown list. This feature will allow users to quickly search and select assignees by name, reducing the time and difficulty associated with scrolling through extensive lists. The search functionality should resemble that of the existing watchers search, providing an intuitive and streamlined user experience."
575,tp,197,26861,Display Issue Edit form Position according to comments chronological order,"So I've set up my Redmine to display issue comments in reverse chronological order.

I have an issue with hundreds of comments. When I hit Edit, the form is displayed at the very bottom of the page.

To me, it would make more sense that the Edit page shows above the latest comment, so there is no need to Scroll all the way up to see what are the latest comments as I am adding new ones.

So:

- ""Show comments in chronological order"": Edit form is at the very bottom of the page
- ""Show comments in reverse chronological order"": Edit form is displayed above the top comment

Does this makes sense?",118,23518,Move action links and edit form above the history when displaying comments in reverse order,"When we switch comments to reverse chronological order `action_menu` and div#update are still below History section. This requires either scrolling to the top or to the very bottom of the page to be able to click ""edit"".
Is it possible to move `action_menu` and `edit` partials above div#history for User.current.wants_comments_in_reverse_order? ?",0.7045706648141388,0.9,Both tickets describe a similar issue regarding the positioning of the edit form and action links when displaying comments in reverse chronological order. They request adjustments to the layout to improve usability by reducing the need for excessive scrolling when interacting with recent comments.,"- Subject: Improve Comment Section Usability with Reverse Chronological Order
    - Description: Enhance the comment section display to accommodate users who prefer viewing comments in reverse chronological order. Adjust the page layout such that when comments are set to display in this order, both the action links (including ""Edit"") and the edit form are relocated above the comment history section. This change ensures that users can quickly access editing functionality and view the latest comments without extensive scrolling, thereby improving workflow efficiency and user experience."
584,tp,198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.7092296199564782,0.85,"Both tickets are addressing the issue of extending visibility or access to specific individuals or roles for private issues in a project management system like Redmine. While the wording and proposed solutions slightly differ, the underlying intention seems very similar. Ticket1 suggests extending the issue's visibility to watchers, which currently serves a notification purpose, and acknowledges potential impacts on role authorization. Ticket2 proposes an 'Involve' mechanism allowing certain roles to grant access to specific users on a per-issue basis, which also bypasses the standard visibility rules. Given the alignment in objectives, it's likely these tickets can be merged under a broader enhancement request for flexible issue visibility control.","* Subject: Enhanced Issue Visibility Control for Select Users and Watchers
    * Description: Develop a feature to enhance issue visibility management by enabling administrators and designated roles to grant additional access to private issues beyond the standard permission rules. This would include both extending visibility to issue watchers, transforming the watcher role to allow direct access to the watched issue, and implementing an 'Involve' mechanism. The 'Involve' function would permit authorized users to add individuals, regardless of their default permissions, to specific issues granting them viewing and potentially interacting rights. The system must ensure smooth integration with existing role-based authorization while maintaining control and auditability over who has been granted special access. Consideration must be given to minimize disruptions to the current notification setup for watchers and to provide clear UI/UX indicators for involved parties' permissions."
589,tp,198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",0.760049318045086,0.85,"Both tickets discuss enhancing issue visibility in a project management or issue tracking system, focusing on expanding access beyond just assignees and authors to include watchers. While the descriptions differ slightly in their scope and context, the core idea of improving visibility for watchers is shared. Ticket1 is more of a request to consider the feature, whereas Ticket2 proposes a specific solution and references past discussions, indicating a higher level of detail but aligned intent.","* Subject: Enhanced Issue Visibility: Include Watchers, Creators, and Assignees
    * Description: This requirement aims to improve issue visibility settings by allowing administrators to grant access not only to issue assignees and creators but also to users who are watching the issue. Inspired by previous discussions (#8488, #14318#note-22) and community contributions, the feature will introduce a new role-based visibility option that encompasses issues watched by, created by, or assigned to users. This enhancement acknowledges the need for a moderate balance between privacy and collaboration, ensuring that interested parties stay informed without compromising existing role-based authorizations. Development should consider整合 the best aspects of proposed solutions to deliver a streamlined and effective implementation of this expanded visibility feature."
594,tp,199,27036,Ticket status closed,"Hello

after the ticket status is ""closed"" several changes are still possible. For example one can add a comment or log the time.
Is it possible to prevent this for special users?

Thanks",78,13814,No more comments when ticket closed,Is there a possibility to prevent users from commenting on closed tickets?,0.7230018548848595,0.9,"The two tickets are very similar as they both revolve around restricting user actions on tickets that have already been closed. Although Ticket1 mentions preventing special users from making any changes (implied to include comments and time logging), and Ticket2 specifically addresses commenting on closed tickets, the core issue is the same—limiting activity on closed tickets. Thus, it would be appropriate to consolidate these into a single requirement that addresses the broader goal of restricting actions on closed tickets, which can then specify the particular actions to be restricted.","* Subject: Restrict User Actions on Closed Tickets
    * Description: Implement a feature that restricts specific user groups or special users from making any modifications to tickets once they have been marked as ""closed."" This includes but is not limited to adding comments and logging time. The system should allow administrators to define which user roles or individuals are subject to these restrictions, ensuring data integrity and process closure after ticket resolution."
597,fn-queried,201,27128,Ability to choose default sort by column for all projects,"Much like what's available when new saved query is created.

Preferably it should be shown in *admin | Settings | Issue tracking*

at *Default columns displayed on the issue list* section.

For example, from saved queries page:
!2017-10-05 13_10_30-RCOM.png!",37,7360,"Issue custom query: default query per instance, project and user","It would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list.",0.7529651108722718,0.3,"The two tickets address different aspects of customization for issue tracking. Ticket1 focuses on setting a default sort by column for all projects in the system, suggesting an addition to the admin settings to control the default display of columns. Ticket2, on the other hand, proposes a feature for individual users to have a default custom query saved per instance, project, and user, which is more about pre-setting filters and views rather than just sorting. While both aim to improve the initial view of the issue list, their scopes and implementation details differ.","Not applicable since the probability of duplication is less than 70%. However, if consolidation were necessary, it might look something like:

**Subject:** Enhanced Default View Customization for Issue Tracking

**Description:** Implement an enhanced default view setting for issue tracking that allows both setting a default sort order by column at the project or global level (in admin settings) and creating user-specific default custom queries per project or instance. This will streamline the issue list view, ensuring it opens with the preferred sorting and filtering preferences set by admins and individual users, thereby improving workflow efficiency."
610,tp,202,27234,I need put the custom fields lavel in multiple language,"Internationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.
Its posible?",20,3972,Translation for field values,"It would be very nice when the values of fields can be translated in different languages. For example:
1st user has choose language english -> So he see the ticket status ""new"" to choose
2nd user has choose language german -> So he see the ticket status ""neu"" to choose",0.6418724482364075,0.85,"Both tickets revolve around the need for internationalization and localization of the platform, specifically focusing on custom fields and field values. While Ticket1 emphasizes custom field labels and Ticket2 stresses the translation of field values, these are complementary aspects of the same feature request, which is multilingual support for a better user experience across different languages.","* Subject: Multilingual Support for Custom Fields and Field Values
    * Description: Enhance the platform's internationalization capabilities by enabling administrators to define custom field labels and field values in multiple languages. This will ensure that when users switch their interface language in their profile, all custom field labels and the options within those fields adapt accordingly. For instance, if a user selects English, they would see ""New"" as a ticket status, whereas a user with German preferences would see ""Neu"". This update will cover both the customization of fields and the translation of their possible values, improving the overall multilingual user experience."
-1,fn-no-query,203,27328,edit the time of the user,"hi 
i need to know how do i add time as a project manager for the user on the project. certain time i face this issue to add time manually like 3 months back time to be added manually. 
i need this feature for the projects managers and above ",19,3848,Permission to log time for another user,"This patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)

I never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.
",0.49581302202304617,-1,,
619,tp,204,27365,Filtering by two or more values for parameters without choosable options,"Hi!
Is there an opportunity to insert for parameter ""Subject"" several values for filtering?
For example, I want to exclude issues which contain two or more values (as I can do with ""Tracker"" or ""Status"" parameters)",6,1140,Filtering using more than one instance of each field,"I would like to filter issues using more than one instance of each field.
Example:
issues with subject containing ""email"" but not containing ""server""...",0.7551006267776597,0.9,"Both tickets describe a desire to enhance the filtering functionality to allow for more complex queries using multiple values for a single parameter. Although the specific use cases provided in the descriptions differ slightly, the core requirement of extending filter capabilities to accommodate multiple conditions on the same field is shared. Therefore, it is recommended to consolidate these tickets as they address the same feature enhancement from different angles.","* Subject: Enhanced Filtering: Multiple Values for Single Parameter
    * Description: Users need the ability to filter issues more precisely by setting multiple conditions for a single parameter within the filtering interface. This should include the option to filter based on including or excluding several distinct values for fields such as ""Subject,"" as well as implementing logical operators (e.g., AND, OR, NOT) to combine these values in complex queries. For example, this would enable filtering issues that contain both ""email"" and exclude ""server"" in their subjects, or any other combination of values across different fields where applicable, enhancing the current capability which is limited to single-value selections for parameters without choosable options."
625,fp,204,27365,Filtering by two or more values for parameters without choosable options,"Hi!
Is there an opportunity to insert for parameter ""Subject"" several values for filtering?
For example, I want to exclude issues which contain two or more values (as I can do with ""Tracker"" or ""Status"" parameters)",106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",0.6908361073063999,0.85,"Both tickets address the improvement of the issue filtering functionality, with Ticket1 specifically requesting the ability to filter by multiple values for a parameter that doesn't offer choosable options (like excluding issues with two or more subjects), and Ticket2 suggesting the implementation of logical operators (""AND"", ""OR"") to enhance the filtering process. The core idea behind both tickets is to improve the granularity and flexibility of the issue filtering system. Thus, they are very similar and indicate a common need for advanced filtering capabilities.","* Subject: Enhanced Issue Filtering with Multiple Values & Logical Operators
    * Description: Improve the issue filtering system to allow users to filter issues based on multiple values for any parameter, even those without predefined choosable options. Introduce logical operators (""AND"", ""OR"") within the filter menu to facilitate complex query construction, enabling users to exclude or include issues that meet various combinations of criteria. For instance, this would permit excluding issues containing any two or more specified subjects or applying filters using combinations such as ""Tracker A AND Status Closed OR Tracker B."""
626,fp,204,27365,Filtering by two or more values for parameters without choosable options,"Hi!
Is there an opportunity to insert for parameter ""Subject"" several values for filtering?
For example, I want to exclude issues which contain two or more values (as I can do with ""Tracker"" or ""Status"" parameters)",108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",0.6822432442051432,0.85,"Both tickets are requesting enhancements to the issue filtering functionality, specifically the ability to apply more complex queries, such as using ""OR"" conditions and filtering by multiple values across different fields (like ""Subject"", ""Tracker"", and ""Assigned to""). While the descriptions differ in detail and context, the underlying desire for advanced filtering capabilities is shared.","* Subject: Advanced Issue Filtering Enhancements
    * Description: Enhance the issue filtering system to support advanced query capabilities, including:
        1. Application of ""OR"" logic to combine filter criteria, enabling users to find issues that match any condition within a set rather than all.
        2. Ability to filter by multiple specific values within non-choosable parameters like ""Subject,"" allowing exclusion or inclusion of issues based on multiple entries in a field.
        3. Implementation of multiple query sets within a single search, permitting users to define separate filters for different aspects of their search (e.g., Tracker A assigned to Paul AND Tracker B assigned to John) with results displayed concurrently for easy comparison and management. This enhancement should also support distinct and union operations on the result set to provide comprehensive and tailored issue lists."
628,fn-queried,205,27401,Switch from View ticket to Edit Ticket - hit the button E on your keyboard,"Coming from Confluence I really love that ""E"" button on my keyboard.
Whenever I hit redmine and try to edit a ticket, pressing the ""E"" key makes me wonder, why Redmine not offers this handy, candy key to open the edit view of the ticket.
.
Pls add a keylistener to ticket view switching from VIEW to EDIT, when hitting ""E"" on the keyboard.
.
Would love to support you, testing the feature.
.
Thanks for taking my humble thoughts into consideration.",1,449,Keyboard shortcuts,"It would be so convinient and productive if redMine supports keyboard shortcuts like Trac or some nifty web apps.
For example,  press Ctrl+R to preview, Ctrl+S to submit, Ctrl+/ to enter search text, ...

To support above, we would only need to add ""accesskey"" attribute to elements (like input, a).

Thanks,",0.5941729207654517,0.3,"The two tickets are related to keyboard shortcuts in Redmine, but they are not very similar and shouldn't be duplicated. Ticket1 specifically requests adding the ""E"" key to switch from viewing to editing a ticket, while Ticket2 suggests implementing various keyboard shortcuts inspired by Trac and other web applications without mentioning the ""E"" key functionality explicitly.","Not applicable since the probability is less than 70%. However, if they were to be combined due to a high similarity, the suggestion would be:

**Subject:** Enhanced Keyboard Shortcuts for Ticket Operations

**Description:** Improve productivity by introducing a comprehensive set of keyboard shortcuts in Redmine, akin to those found in Trac and other efficient web apps. Specifically, implement the following:
- Pressing ""E"" to quickly switch a ticket from View mode to Edit mode, enhancing the workflow for frequent editors.
- Ctrl+R to preview changes before submission.
- Ctrl+S to save or submit edited content.
- Ctrl+/ to activate the search field for easy navigation.
Ensure these shortcuts are intuitive and well-documented, with considerations for accessibility and compatibility across different platforms. Invite interested users to participate in beta testing the new features."
634,tp,207,27541,New optional column for issue list: number of comments/updates,Just to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown.,4,684,Add journal count on issues list,"I think that viewing journal count is better than nothing.
Because it is easy to understand issues's activity.
so I make this patch.",0.5846244619680516,0.95,"Both requirements suggest enhancing the issue list by adding a new column to display the level of activity on each ticket. Although the wording differs slightly, the essence of both requests is the same - to provide a quick visual indicator of the number of comments or updates (journals) on an issue. Ticket1 proposes displaying the number of comments/updates, optionally showing an empty string for tickets with no activity, while Ticket2 specifically asks for a journal count to gauge issue activity. Given the substantial overlap in intent, these tickets can be considered duplicates.","* Subject: Add Activity Indicator Column to Issue List
    * Description: Enhance the issue list view by introducing a new optional column that displays the total number of comments and updates (journals) for each ticket. This will facilitate a swift understanding of the level of engagement on individual issues. For tickets that have not undergone any comments or updates, the column should display an empty string instead of a zero to indicate inactivity clearly. This addition aims to improve the user's ability to prioritize and assess the dynamics of issues at a glance."
658,fn-queried,208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.6108252288993229,0.15,"The two tickets address different aspects of issue visibility and notification within a project management system like Redmine. Ticket1 focuses on expanding notification settings for users who are watchers of issues they are not directly involved in (not created by or assigned to them), while Ticket2 proposes a new feature called ""Involve"" to grant temporary access to private issues for external parties or users who wouldn't normally have access based on default permissions. Although both tickets deal with improving communication around issues, their objectives and target functionalities are distinct enough to warrant separate consideration.",N/A (since the probability of duplication is below 70%)
661,fp,208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",0.63319262722098,0.9,"Both tickets are requesting an enhancement to the notification settings related to issue visibility in role settings. The primary difference lies in the articulation of the request, but the underlying intention appears to be the same – expanding the notification options to include issues that a user is watching, in addition to those created by or assigned to them.","** Subject: Enhanced Notification Settings for Watched, Created, and Assigned Issues in Role Settings
    ** Description: Implement a new notification option within role settings to encompass ""issues watched by, created by, or assigned to the user."" This enhancement will ensure users receive email updates for issues they are watching in addition to those they have created or are assigned to, even if they are not directly involved as the creator or assignee. The feature aims to improve collaboration and awareness across projects by addressing the limitations reported in discussions like #8488 and patches proposed such as in #14318#note-22."
665,fp,208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",0.7178938602823782,0.9,Both tickets are requesting an enhancement to the notification settings related to issue visibility for users who are watchers but not necessarily the creator or assignee of an issue. The core idea in both requests is to ensure that watchers receive notifications under circumstances not currently covered by the default settings.,"* Subject: Enhanced Notification Settings for Watchers in Role Configuration
    * Description: Enhance the role setting configuration to include a new notification option that enables watchers of an issue to receive updates via email even if they are not the creator or assignee of the issue. This additional setting will provide administrators with a more granular control over issue visibility, striking a balance between fully private and openly notifying assignees and authors. Implementing this feature will require consideration of its impact on existing role authorization structures to ensure a smooth integration with current permission systems."
668,tp,209,27680,Changing Subject Line in email notification when an issue is created or updated,"Currently the format is as follows:

<pre>
[ProjectName - Task #4983] (Closed) Email Notification Test1
</pre>

For email security reasons, we would like to add '#' at the beginning of the subject line:

<pre>
#[ProjectName - Task #4983] (Closed) Email Notification Test1
</pre>

Is it possible?  If so, then how?

Thanks,
Shakeel Masood
MegaChips Technology America,
San Jose, CA 95134, USA.

",80,13981,Abilty to configure subject of email,"It would be nice to be able to configure the subject of an email.

Sequence now: [""Project"" - ""Tracker"" #""Number""](""Status"")""Subject""

=> the whole sequence should be configurable, f.e.: [""Project"" - ""Subject""] #""Number""

",0.7089178367491514,0.9,"Both tickets are related to modifying the subject line of email notifications. While the first ticket specifically requests adding a '#' at the beginning for security purposes, the second ticket asks for a more general configuration ability for the subject format. The underlying desire to customize the email subject is the same, making these tickets very similar and suggesting that a single solution could address both concerns.","* Subject: Customizable Email Subject Line Format
    * Description: Users have expressed the need for greater customization of email subject lines for issue notifications. This includes the ability to:
        1. Add a prefix (e.g., '#') for security or identification purposes.
        2. Modify the overall structure of the subject line to suit their needs, such as changing the sequence to [""Project"" - ""Subject""] #""Number"".
    Implement a feature that allows administrators to configure the email subject line format, including predefined placeholders for project name, tracker, issue number, status, and subject, enabling flexible customization options as per user requirements."
672,tp,210,27864,Subtasks inherit parent settings during copy,"Hi,
often I copy issues across versions. My issues have a lot of subtasks.
It would be useful if when I set, for example, version or status on  parent issue the same are set on the subtasks.
Without this I must modify them afterwards, and this in not always easy.

Regards
Alessandro
 ",82,14342,Apply changes on parent issue to subtasks when copying issues,"When I copy tasks with subtasks, the changed properties are applied only in the parent tasks.

<pre>
Environment:

  Redmine version                          2.2.3.stable
  Ruby version                             1.8.7 (i686-linux)
  Rails version                            3.2.12
  Environment                              production
  Database adapter                         MySQL

Redmine plugins:

  redmine_impasse                          1.2.2
  redmine_screenshot_paste                 2.1.0
  redmine_wiki_extensions                  0.6.2
  redmine_wiki_lists                       0.0.1
</pre>",0.7123531750508768,0.95,"Both tickets describe a very similar enhancement request for the Redmine issue tracking system. They both want the system to automatically apply changes made to the parent issue (like version or status) to its subtasks when the issue, along with its subtasks, is copied. The difference lies in the slight variation of wording and the additional environment information provided in Ticket2, which does not change the core requirement.","* Subject: Synchronize Parent Issue Settings with Subtasks During Copy
    * Description: Enhance Redmine's issue copying functionality to automatically synchronize any changes made to the parent issue settings (such as version, status, etc.) with all associated subtasks when copying an issue along with its subtasks across different contexts (versions, projects, etc.). This will streamline the process and eliminate the need for manual post-copy adjustments, ensuring consistency and efficiency in task management."
678,tp,211,27870,API for editing/deleting notes in an issue,"Hi
Could you please create API for editing/deleting?
I found this comment #25793#note-7 from Toshi MARUYAMA but I can't understand how to do that.

Thanks.",60,10171,Updating journal notes via REST API,"Currently viewing journals via REST API is possible (with include=journals), but there is no way to update them.

Note that journal notes are edtiable in main ui.",0.6135193116276316,0.9,"Both tickets are requesting functionality related to modifying notes or journals within issues through an API. While the first ticket specifically mentions editing and deleting notes, and the second one focuses on updating journal notes via REST API, the underlying intention appears to be the same - to extend the API capabilities to manage issue notes/journals. The reference to a comment in Ticket1 suggests a user's attempt to edit or delete notes, which aligns with the feature asked for in Ticket2. Therefore, it's highly likely that these tickets are duplicates of each other, seeking an enhancement to the existing API to support editing and deletion of issue notes/journals.","* Subject: Enhance API for Editing and Deleting Issue Notes/Journals
    * Description: Develop REST API endpoints to facilitate the editing and deletion of notes and journals within issues. This should include functionalities allowing users to update the content of existing notes/journals and remove them when necessary, mirroring the capabilities currently available in the main UI. Ensure compatibility with existing API calls and maintain data integrity and audit trails for changes made via the API."
690,tp,213,27879,Does redmine support bulk edit time log?,nan,185,26534,Allow project bulk edit of time entries,"This issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.

- Activity field is updated on project change (actually, the entire form is replaced on project change)
- Issue autocomplete is available only for bulk editing of time entries from the same project
- Added the ""Clear"" checkbox to the issue field.
- Moved the method ""bulk_edit_error_messages"" from issues_helper to application_helper because now it is used by both entities (issue and time entry).",0.5123094291333763,0.9,"The two tickets are indeed very similar as they both revolve around the idea of bulk editing time logs or time entries in Redmine. Although the first ticket is more of an inquiry about the feature's existence, the second ticket describes specific implementation details for bulk editing of time entries at the project level. Given the strong overlap in subject matter and the logical progression from a question about support to a request for a new feature, it's reasonable to conclude that they address the same underlying need.","** Subject: Implement Bulk Edit Functionality for Time Entries across Projects
    ** Description: Enhance Redmine to facilitate bulk editing of time entries across multiple projects, addressing the lack of support for this feature as queried in previous requests. The implementation should include:
    - Introduction of a project field in the bulk edit mode for time entries, enabling users to modify time logs for different projects simultaneously.
    - Automatic update of the activity field based on project selection, with the entire form dynamically refreshed to reflect project-specific activities.
    - Restriction of issue autocomplete suggestions to only those belonging to the selected project during bulk editing, ensuring data consistency.
    - Addition of a ""Clear"" option for the issue field, allowing users to easily remove selections.
    - Refactoring of the ""bulk_edit_error_messages"" method from issues_helper to application_helper for broader reuse across entities like issues and time entries, improving code maintainability and efficiency."
691,tp,214,27920,Show button to create new version in issue form even if all versions are locked or closed,"If all versions are closed or locked and there is no any version opened, there is no way to create new version when creating new issue or editing existing issue.

When there are no opened versions the field ""Target version"" is not shown and the (+) button next to it is also not shown.

I think that this is omission, because if there is at least one opened version, the (+) button for creating new version is shown.",24,4569,Cannot add new version if all versions are closed (from issues page),"With feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change.",0.7923070464739327,0.9,"Both tickets describe a similar issue where users are unable to create a new version when all existing versions are closed or locked, whether they are trying to do so from the issue creation/editing form or the issues page. The core problem addressed is the same, hence it's recommended to treat them as duplicates with a slight adjustment in the description to encompass both scenarios.","** Subject: Enable creation of new versions when all current versions are closed or locked
    ** Description: Users should be able to create new versions from both the issue form and the issues page even if all existing versions are either closed or locked. Currently, the functionality to add a new version via the ""+” button next to the ""Target Version"" field is unavailable under these conditions, which hinders workflow when no versions are open. This update will ensure consistency and maintain the utility of the feature regardless of the status of previous versions."
742,fp,220,28198,Support issue relations when importing issues,"As promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.

h3. Usage

The attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.

Within the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.

h3. Technical notes

Since issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.


h3. Additional considerations

Initially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type.",101,22701,Allow forward reference to parent when importing issues,"When importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.

To work around this limitation, the issue import could be extended to use multiple passes:

# one to import basic issue properties
# one to import relations to other issues

This way it becomes easier to create the CSV files for imports, since order is no longer important.

This change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.



Attached you find a patch series based on trunk r15361.

While implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.


h3. 0001 Extend test data for issue import

This change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.

The patch also updates the existing tests, where the number of imported issues is asserted.

h3. 0002 Add test for issue relations to following rows

This patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.

h3. 0003 Multi-pass CSV import

This patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.

The @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.

Since @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.

In the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.

The patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.

Finally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.


*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing ""Related Issues"" properly, which I would like to contribute next, if this patch is accepted.",0.8153555296687774,0.9,"Both tickets discuss improvements to the issue import functionality in Redmine, with a focus on handling issue relations during the import process. Ticket1 proposes a patch that supports various issue relations, including parents, and introduces a two-step import process to accommodate these relations. It also details the CSV format and the technical implementation. Ticket2 suggests a similar enhancement, emphasizing the need for a multi-pass import to address the limitation where parent issues must precede their children in the CSV file. The attachment in Ticket2 seems to be a direct implementation of the idea discussed, aligning closely with the enhancements proposed in Ticket1. Given the significant overlap in objectives and the fact that Ticket2's patch seemingly encompasses the improvements of Ticket1, these tickets can be considered duplicates with a shared goal of enhancing issue import to support relations more effectively.","** Subject: Enhance CSV Issue Import to Support Issue Relations and Multi-Pass Processing
    ** Description: Improve the CSV issue import feature to facilitate the import of issue relations (including parent-child and general issue links) without the constraint of issue order. Introduce a multi-pass processing mechanism to first import basic issue properties and then, in subsequent passes, establish issue relations. This enhancement will allow for more flexibility in CSV file creation by making the order of issues irrelevant and enabling the direct re-import of issue relations exported from Redmine. The updated import process should include configuration options for selecting columns corresponding to different relation types and parsing CSV values to identify existing issues or map them within the same import batch. Additionally, it should handle delayed relations (like 'follows' and 'precedes') with specified time offsets. The technical implementation must maintain compatibility with existing import plugins and provide clear guidance for extending custom import processes."
766,tp,221,28202,Allow updating existing issues via CSV import,"It would be very helpful to be able to update existing issues through the CSV import function.

",114,23448,Allow updating existing issues via CSV import when their ID's are the same,"I'd like to have the possibility to update issues with a csv import.
Atm, if i import a task with an already existing ID, the ID changes and a new task is created.",0.8228060057856403,0.9,"The two tickets are indeed very similar as they both request the functionality to update existing issues via CSV import. The second ticket specifies a scenario (when IDs are the same) which is a subset of the first ticket's broader request. Therefore, it's recommended to consolidate these into a single ticket to avoid duplication and streamline development efforts.","* Subject: Implement CSV Import Functionality for Updating Existing Issues Based on IDs
    * Description: Enhance the CSV import feature to enable users to update details of existing issues by matching their IDs in the CSV file. This update should prevent the creation of duplicate tasks when an issue with the same ID is encountered during import, ensuring that any provided updates are applied to the corresponding existing issue instead."
773,fp,221,28202,Allow updating existing issues via CSV import,"It would be very helpful to be able to update existing issues through the CSV import function.

",171,25810,Add #ID into Import Feild for update issue properties,"When I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.
Sometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.

So I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.
The expect result view may like attached import.png.",0.55399038601131,0.9,"Both tickets revolve around enhancing the CSV import functionality to support updating existing issues, with Ticket1 stating the need generally and Ticket2 providing a specific suggestion on including the issue ID in the import field to facilitate updates. The core objective overlaps significantly, hence a duplication or consolidation is advised.","* Subject: Enhance CSV Import to Support Updating Existing Issues by Issue ID
    * Description: To improve workflow efficiency, the CSV import feature should be augmented to allow users to update properties of existing issues directly. This enhancement will incorporate an ""#ID"" field in the import mapping, enabling the system to recognize the issue being referenced and apply the changes provided in the CSV file accordingly. Users will thus be able to bulk-update issue details offline and seamlessly sync these modifications when back online, reducing manual effort and enhancing productivity."
790,fp,222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.708328997837997,0.8,"Both tickets address the issue of extending access to issues beyond the default visibility settings. Ticket1 focuses on granting access to watchers when the visibility is set to ""Issues created by or assigned to,"" while Ticket2 proposes a more general ""Involve"" mechanism to allow specific individuals, regardless of their role, to access private issues. The underlying intention of enhancing visibility control and involving additional parties aligns, making these tickets highly related. However, they are not identical, as Ticket1 specifically targets watchers, and Ticket2 suggests a broader involvement feature.","* Subject: Enhanced Access Control: 'Watcher Involvement' and 'Issue Involvement' Features
    * Description: To improve collaboration and flexibility in issue management, develop an enhanced access control mechanism that addresses two primary needs:
        1. **Watcher Involvement**: Extend the current visibility settings to include an option that grants access to issues for watchers when the setting is ""Issues created by or assigned to."" This will ensure that designated watchers can view and contribute to issues without necessitating full public visibility.
        
        2. **Issue Involvement Mechanism**: Create a new 'Involve' feature allowing authorized roles (e.g., issue creators, assignees, or project managers) to manually add users outside the default visibility scope to specific issues. Users added through this mechanism will gain access to the issue they are involved in, facilitating collaboration with external parties, such as customers who need to track the progress of their reported problems.

This combined feature will cater to both the targeted enhancement for watcher accessibility as well as the broader need for flexible issue involvement across different scenarios."
798,tp,222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",0.7673543791096095,0.9,"Both tickets address the issue of limited visibility settings for issues in a project management or issue tracking system, focusing on including watchers in the access permissions when the current visibility setting is restricted to issues created by or assigned to specific users. The descriptions suggest a desire to expand the visibility options to accommodate a wider range of users without compromising privacy for other issues. While the descriptions differ slightly in their approach, the core issue they aim to resolve is essentially the same.","* Subject: Enhanced Issue Visibility Options Including Watchers
    * Description: Currently, issue visibility settings that restrict access to ""Issues created by or assigned to the user"" do not grant necessary access to watchers. To improve collaboration and maintain appropriate permissions, we propose an extension to the visibility settings to include a new option: ""Issues watched by, created by, or assigned to."" This enhancement will ensure that watchers can view and stay informed about relevant issues without broadly exposing all issues. Additionally, this feature should allow for granular control over which roles can utilize this new visibility setting, thereby maintaining the system's security and adaptability to different team structures and privacy needs."
807,fp,222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",0.8247282847611157,0.95,"Both tickets describe a very similar need to extend the visibility of issues to include watchers when the current visibility setting is limited to issues created by or assigned to specific users. They both highlight the limitation of the current system in managing access rights for a more nuanced group than just creators and assignees. The request for an additional visibility option or modification to accommodate watchers is clearly overlapping, indicating a strong case for duplication.","** Subject: Extend Issue Visibility Options to Include Watchers
    ** Description: Currently, issue visibility settings restrict access to ""Issues created by or assigned to the user,"" which does not cater to the need for including watchers in the visibility scope. To better manage permissions and balance privacy with collaboration, we propose enhancing the system to offer a new visibility option. This feature would grant access to issues for the issue creator, assignee, and all watchers, providing a middle ground between fully private and more open access levels. Administrators would benefit from this additional granularity in controlling who can view issues without compromising on security for sensitive matters. Developers are requested to assess the feasibility of modifying the existing visibility settings or introducing a new option to accommodate this requirement, considering any potential impacts on current role-based authorizations."
808,fp,222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",0.7079455118391804,0.8,"Both tickets address a common issue with the visibility settings for issues, particularly concerning Watchers. Ticket1 requests a modification or addition to the visibility options to include Watchers when the visibility is set to ""Issues created by or assigned to the user."" Ticket2 proposes a similar solution by suggesting a new notification setting that would allow Watchers to receive updates even if they are not the creator or assignee of the issue. While the tickets approach the problem from slightly different angles (one focusing on access, the other on notifications), the underlying issue is the same, hence a high probability of being duplicates.","* Subject: Enhanced Visibility & Notification Options for Watchers
    * Description: To improve collaboration and ensure comprehensive awareness within projects, enhance the system to provide a new visibility setting that grants Watchers access to issues alongside creators and assignees. Introduce a fourth notification type in role settings under issue visibility labeled ""Issues created by or assigned to the user, or user is a watcher."" This setting will enable Watchers to receive email notifications for updates in issues where they are not directly involved as creators or assignees, addressing the current limitation and fostering better communication among team members."
813,tp,223,28234,Add CSV Import for Time Entries,"h3. Preface

The imports controller was obviously built to be used for more than just issue imports. But since Redmine currently only supports issue imports, there are now some places, where assumptions about the issue import are hard-coded.

There are some plugins out there, which add other kinds of CSV imports to Redmine, but none of them seems to use the imports controller. I assume, it's because of the shortcomings mentioned above. I wanted to improve this situation, so I decided to build a time entry importer and - along the way - generalize the imports controller so that it's able to handle more than just issues.

h3. Preparations

The first patch attached extracts the issue related view parts into partials which are determined by convention. They are all prefixed with the imported model name, i.e. @_issues@. 

The issue related model parts are moved to the import model. Those are, e.g. the proper menu item, the authorization or the layout. Strictly speaking they should be located on the controller level, but I did not want to build sub classes of the imports controller for each and every kind of import.

h3. Adding the time entry import

The second patch attached adds the time entry import. It's using the newly introduced extension points to fill in the blanks. To provide a way for the user to find the new import, I've added the @timelog/_sidebar@ partial, similar to the one for issues. This new sidebar partial is now used in the timelog views and it contains a link to the import.

*Note:* within said partial, I've mis/re-used an i18n key @label_time_entries_visibility_all@ since it was providing the desired text in German and English. I did not want to introduce a new key based on the existing one, since that would have probably caused major merge problems. If desired, I may of course do that anyway.

h3. Closing notes

The second patch may of course also become a plugin. The main point of this patch (series) was it, to allow plugins to reuse the existing plugin infrastructure. Without the first patch though, a plugin author would need copy most of the views and functionality of the imports class, which is undesirable (at least for the plugin author).

Thank you for considering these patches.",161,25578,Import spent time,"I think it should be great to have a way to import spent time, something similar to the way you can import issues.
",0.5793308318595547,0.95,"Both tickets essentially request the same feature, which is the ability to import time entries into Redmine. Ticket1 provides a comprehensive overview of the changes needed to generalize the imports controller to support time entry imports, along with details on preparations, implementation, and considerations for plugin development. Ticket2 makes a simpler, more direct request for the functionality to import spent time, akin to the existing issue import feature. Given the substantial overlap in the core requirement, it's clear that both tickets aim to address the absence of a time entry import functionality in Redmine.","** Subject: Implement Generalized CSV Import for Time Entries
    ** Description: Enhance Redmine's import functionality to facilitate the import of time entries via CSV files, analogous to the current issue import mechanism. This will involve refactoring the imports controller to support multiple import types, abstracting model- and view-specific components, and introducing dedicated views and controllers for time entry imports. Additionally, a new sidebar link within the timelog section will be added to guide users to the time entry import feature, ensuring a consistent and user-friendly experience across different import functionalities. This enhancement will also pave the way for easier development of future import plugins by establishing a solid foundation in the core system."
819,tp,224,28312,Option to automatically add user as watcher to an issue if they edit an issue they're not currently involved with,"We occasionally get users updating issues that they didn't create, nor are they watching.

What happens then is they don't get email -- neither for the update they made, nor for any future updates.

What we would like is to automatically have such a user added as watcher to the issue.

Suggest that this be made an option, with it default to ""off"" for old behaviour.",10,1737,autowatch issues,"i'd very much like to have a feature similar to Patch #222. that is, a per-user option to:

* ""auto-watch issues i've modified"" (i.e., autowatch if i create or modify an issue)
* ""auto-watch issues assigned to me""

Unlike Balazs (author of Patch #222), i'd want users to be able to choose their own ""autowatch"" policy.

Other than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?",0.6252455881213609,0.9,"Both tickets essentially request an automatic mechanism to add users as watchers to issues based on their interactions with those issues. Ticket1 focuses specifically on adding a user as a watcher when they edit an issue they're not already involved with, suggesting it as an optional feature. Ticket2 expands on this idea by also including auto-watching for issues a user creates or is assigned to, with the preference being configurable per user. The core idea in both tickets is to ensure users stay informed about issues they engage with, making them very similar in nature.","** Subject: Enhanced Auto-Watch Feature for Improved Issue Tracking
    ** Description: Implement an enhanced auto-watch feature that provides users with the option to automatically be added as watchers to issues under specific conditions. This feature will include the following configurable policies per user:
        - Automatically watch issues when a user creates them.
        - Automatically watch issues when a user edits them, even if they were not previously involved.
        - Automatically watch issues assigned to the user.
    
    The system will default these options to ""off"" to maintain the existing behavior for users who do not opt-in. This enhancement aims to improve communication and ensure all stakeholders are notified of updates relevant to issues they have interacted with or are responsible for, thereby promoting collaboration and efficiency within the team."
839,fn-queried,225,28368,regarding watcher added in private project but not getting notification ,"Hi 
   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link 

Can anyone help with this ",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.5084699719694789,0.2,"The two tickets are related to notifications and access permissions within private projects in Redmine, but address different aspects. Ticket1 focuses on a specific issue where watchers are not receiving notifications or emails for tickets they are watching in a private project with custom roles and permissions. Ticket2 proposes a new feature, an 'Involve' mechanism, which would allow granting access to specific users who are not otherwise allowed by default rules, for better collaboration on private issues. While they both touch upon improving collaboration in private contexts, the solutions and underlying issues are distinct enough to warrant separate consideration.","Not applicable due to the low probability of duplication. However, if they were to be combined under the premise of enhancing collaboration and notification流程 in private projects, it might look something like this:

**Subject:** Enhance Collaboration & Notification流程 in Private Projects

**Description:** Improve the current system in private Redmine projects to ensure effective collaboration and notification流程 across different user roles and permissions. This includes addressing an issue where watchers with the 'viewownissue' role do not receive notifications or email links to tickets they are watching (Ticket1), and implementing a new 'Involve' feature (Ticket2) allowing authorized roles to grant temporary or issue-specific access to external users, enabling them to view and contribute to the discussion, thus overcoming the limitations of the current observer mechanism which is primarily for notifications. This enhancement will facilitate better coordination, especially in scenarios where customers or third-party collaborators need controlled access to private issues."
855,tp,226,28405,Allow assigning issue to any user,"Currently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small ""+"" icon next to the default dropdown).

It's already possible with watchers and it would be helpful for ad-hoc tasks.",45,8629,Allow assigning issues and/or watcher status to authenticated non members,"This feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.

Our redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.

Since we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.

But while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.

As a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.

This work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.

While this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.

 


",0.596427369574118,0.85,"Both tickets revolve around the idea of expanding the capability to assign issues and grant watcher status to a broader range of users beyond just project members. While the specifics differ slightly—Ticket1 focuses on allowing assignment by admins/superusers to any user, and Ticket2 emphasizes the need for authenticated non-members to be assigned tasks or become watchers—the underlying intention to enhance user assignment flexibility is shared. Given this significant overlap, it would be beneficial to consolidate these requests into a single, more comprehensive requirement.","* Subject: Enhance User Assignment and Watcher Functionality for Broader Collaboration
    * Description: To facilitate ad-hoc task allocation and improve collaboration across projects, enhance the system to allow assigning issues and setting watchers to any authenticated user, regardless of their membership in a specific project. This enhancement should provide administrators and superusers with the ability to assign tasks directly to any user in the system through an intuitive interface, such as adding a ""+"" icon beside the current assignee dropdown, which expands the assignable user base. Additionally, streamline the process for authenticated non-members to participate actively in issue tracking by enabling them to be assigned tasks and designated as watchers without requiring additional roles or manual group assignments. Improve the user experience by implementing a sortable and filterable assignee/watcher selection interface that can be grouped by roles, with expandable/collapsible options for easy navigation, enhancing efficiency and user-friendliness when managing issue assignments and watchers."
-1,fn-no-query,227,28473,Using the classical 'list' view on projects,"I believe quite a few versions back there was a 'list' like view, 1 project per 'row' almost on the project page, is it possible to regain this view?",196,26853,Fix hardcoded project-index width for webkit and mozilla browsers,nan,0.38022486324801,-1,,
899,tp,229,28514,issue delete button confusion,"In 3.4.3, if your last issue history item is only one or two lines, you end up with the history item delete button (trashcan) directly above the whole-issue delete button (trash can plus ""delete"") so that it is really unclear whether the ""delete"" text button goes with the history item or the whole issue, leading to accidental issue deletion.

We should add a separator between the history list and the item action buttons.

To reproduce: 

* Add a one line Note to an issue and save it.
* look at the delete buttons a the bottom right corner of the page.  

!redmine_issue.png! 

If we put some <hr>'s in the issue show template (patch attached) it becomes obvious that the ""delete"" text does not go with the history item, but with the whole issue.

!after_patch.png!",193,26662,Add border around issue history to prevent accidental deletion of an issue,"In my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.

Such misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.

The patch was extracted from ""farend basic"":https://github.com/farend/redmine_theme_farend_basic theme.

*Before:*
!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!

*After:*
!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!
",0.8003162879459097,0.95,"Both tickets describe a similar user interface issue within Redmine where the placement and proximity of the delete button for issue history items and the delete button for the entire issue can lead to accidental deletion of issues. The suggested solutions also align in intention—to visually separate the two actions to prevent misunderstandings—though they propose slightly different implementations (additional spacing via separators in Ticket1 and a border around issue history in Ticket2). Given the substantial overlap in the subject matter and the shared goal, it's highly likely these tickets address the same underlying problem and thus could be consolidated to avoid duplication of effort.","* Subject: Improve UI to prevent accidental issue deletion
    * Description: In the current Redmine version, users have reported accidentally deleting entire issues when attempting to remove the latest note due to confusing button placement. To mitigate this issue, enhance the visual distinction between the delete action for individual issue history items and the delete action for the entire issue. Implement a design update that incorporates both a clear separator below the issue history section and a distinct border around the history to clearly demarcate the scope of the delete actions. This will ensure users can readily distinguish between deleting a note and deleting the entire issue, thereby reducing the likelihood of accidental deletions."
904,tp,230,28533,Add a description in a custom queries,"I have more than 40 different querys and it would be practical to be able to add to each one, a description of the results that it brings.",52,9309,Add description field to custom queries,"Especially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for.",0.8147280533167087,0.95,"The two tickets are very similar as they both request the addition of a description field to custom queries for the purpose of explaining the results or purpose of the query. The primary difference is the emphasis on ""public queries"" in Ticket 2, but the core requirement remains the same. Therefore, it's highly recommended to treat these as duplicates to streamline the development process and avoid redundant work.","** Subject: Add Description Field to Custom Queries for Enhanced Understanding
    ** Description: Implement a description field within the custom query feature to allow users to input a brief explanation of the query's purpose and the results it generates. This will be particularly beneficial for both personal organization when managing numerous queries and for sharing public queries, ensuring clarity and context for all users who access or utilize them."
917,fn-queried,231,28614,Issue Watcher view Issue when not in project group,"Hi, 

is there a way to let watcher view issues that they are not assigned to the projekt. 

best",120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",0.6454245492552921,0.6,"The two tickets are related to issue visibility but approach the topic from slightly different angles. The first ticket focuses on allowing watchers to view issues outside their project group, while the second one discusses a broader change to issue visibility rules based on roles, including those watched, created, or assigned. Although they share the theme of expanding visibility, the scope and proposed solutions differ enough that they shouldn't be considered duplicates without further clarification on the intended functionality.","Not applicable since the probability is less than 70%. However, if they were to be combined, it might look like this:

**Subject**: Enhanced Issue Visibility Control for Watchers and Roles

**Description**: Develop a comprehensive enhancement to the issue tracking system that addresses the limitations in visibility for both watchers and defined roles. This update should enable watchers to view issues they are not directly assigned to, even if those issues are outside their project group. Additionally, introduce granular visibility settings based on roles, allowing users to view issues they have created, are assigned to, or are watching, regardless of project affiliation. The feature should be designed with flexibility in mind, accommodating various organizational structures and user permissions seamlessly."
925,fp,231,28614,Issue Watcher view Issue when not in project group,"Hi, 

is there a way to let watcher view issues that they are not assigned to the projekt. 

best",198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",0.6435771570011345,0.9,Both tickets are requesting an enhancement to the visibility of issues for watchers who are not directly assigned to a project or might not have a specific role within the project. The core idea in both tickets is to expand the ability of watchers to view issues they are interested in but might not be directly involved with.,"** Subject: Enhanced Issue Visibility for Watchers
    ** Description: 
        Enhance the platform to allow issue watchers to view issues even if they are not members of the project group or do not hold a specific role within the project. This feature aims to strike a balance between privacy and collaboration by granting a moderate level of visibility to watchers, without compromising the current role-based authorization settings. This enhancement will facilitate better collaboration and information sharing among stakeholders who need to stay informed about progress but may not necessarily be direct assignees or authors of the issues. Considerations should be made to ensure this new visibility setting does not interfere with existing privacy controls and role permissions."
927,fp,231,28614,Issue Watcher view Issue when not in project group,"Hi, 

is there a way to let watcher view issues that they are not assigned to the projekt. 

best",222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",0.7363235602219836,0.9,"Both tickets address the issue of watchers not having sufficient access to view issues they are assigned to when specific visibility settings are in place. While the descriptions differ slightly, the core problem is the same—enhancing watchers' ability to view issues under restricted visibility configurations. Thus, consolidating these tickets would streamline the process of addressing this shared concern.","** Subject: Enhance Watcher Access for Restricted Visibility Settings
    ** Description: Currently, watchers face limitations in viewing issues that they are assigned to when the visibility is set to ""Issues created by or assigned to the user."" This configuration hinders efficient collaboration and information sharing. To improve workflow transparency and maintain granular access control, we propose an update to allow watchers to view such issues without compromising security. The new feature should provide an additional visibility option that grants access to the issue's author, assignee, and all designated watchers, ensuring that relevant stakeholders remain informed without necessitating a full-access setting of ""ALL issues."""
957,tp,233,28683,My Page Issues Block limit configurable,"i think it would be a nice and easy thing, to have the issue queries on the »my page« changeable. currently they are hardcoded to 10, which make them a bit useless to our type of work environment.

",215,28011,Setting for My page blocks to change the maximum number of issues,"The maximum number of issues to be displayed on a My page block is fixed to 10. But sometimes I want to see more issues on blocks.

I think it is useful and will increase flexibility if each block has a setting to change the maximum number of issues.

!{width: 507px; border: 1px solid #ccc;}.mock-my-page-maximum-number-of-issues@2x.png!
The screenshot above is just a mock. I haven't written any codes.",0.7036136688920444,0.95,"Both tickets describe nearly identical requests to make the issue query limit on the ""My Page"" blocks configurable, with users expressing the need for more flexibility beyond the current hardcoded limit of 10 issues. The descriptions align closely in their objective, indicating a strong overlap in the desired functionality.","** Subject: Configure Maximum Number of Issues on My Page Blocks
    ** Description: Enhance the ""My Page"" feature by implementing a user-configurable limit for the number of issues displayed within each block. This will allow users to adjust the issue query count according to their individual work preferences and needs, thereby increasing the utility and flexibility of the My Page interface. The default limit is currently set to 10 issues, but this new setting will permit users to select a higher or lower number as required, improving the overall usability of the platform."
958,tp,234,28893,Show number of attached files in Wiki Files-Link,"Right now, you have to click on the ""Files"" link below the wiki (to open the section) to see whether there are any files or not.

I think it would be very useful to show the number of currently attached files in brackets, like

Files (0)

or 

Files (42)

I guess this would have no real performance implication and help the user very much.

Thanks for any feedback to this idea!",200,27090,Show the number of attachments on wiki pages,"I noticed the problem that users cannot know whether there are any attachments unless users expand the ""File"" section by clicking it.

To resolve the problem, I suggest showing attachments count on ""Files” section.
Please see the screenshots below for the details.

h2. before
!before.png!

h2. after
!after.png!

Patch: attachment:show_attachments_count_of_wiki_page_trunk_r16963.patch
(Compatible the latest trunk r16963.)",0.7633666735412981,0.95,"The two tickets are very similar as they both request for displaying the number of attached files on wiki pages without having to click to expand the section. The descriptions align closely, indicating a shared objective. The only difference is the slight variation in explanation and the addition of a patch file in Ticket2, which can be incorporated into the new requirement.","** Subject: Display Attached Files Count on Wiki Pages
    ** Description: Enhance the user experience by showing the number of currently attached files directly on the ""Files"" section of wiki pages. This will allow users to ascertain the presence of attachments without needing to expand the section manually. Implement the feature to display the count in brackets next to the ""Files"" label, e.g., ""Files (0)"" if no files are attached or ""Files (42)"" if there are 42 attachments. Apply the provided patch (attachment:show_attachments_count_of_wiki_page_trunk_r16963.patch, compatible with the latest trunk r16963) for efficient implementation."
963,tp,235,28913,Watcher Changes tracked in History,"Would like Redmine to track when watchers are added or removed.

Currently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.
Prefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to.",50,9122,Tracking adding/removal of watchers in the ticket history,It should be possible to track adding and removal of watchers in the ticket history (mainly because of possibility to remove watcher after ticket was closed).,0.6525783031541361,0.95,"Both requirements essentially ask for the same feature, which is the tracking of additions and removals of watchers within the ticket history in Redmine. This would enhance user understanding of notification events and provide an audit trail for changes to the watcher list, including actions taken after a ticket has been closed. The descriptions are nearly identical in their intent, hence a high probability of duplication.","* Subject: Implement Watcher Activity Tracking in Ticket History
    * Description: Enhance Redmine to systematically record instances when watchers are added or removed from a ticket within the history log. This update will ensure clarity regarding email notification expectations and provide a comprehensive audit of all watcher modifications, even those occurring post-ticket closure. The functionality should maintain a non-disruptive user experience, avoiding page refreshes when possible, except when such actions are part of a larger journal entry update. This will significantly improve user understanding and accountability in the ticket management process."
970,fp,235,28913,Watcher Changes tracked in History,"Would like Redmine to track when watchers are added or removed.

Currently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.
Prefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to.",184,26529,Email notification when watcher is added and removed,Allow observers to be warned when they are inserted or removed from a task.,0.5833011013396561,0.85,"Both requirements revolve around enhancing the watcher functionality in Redmine. Ticket1 focuses on tracking the addition or removal of watchers in the issue history, aiming to improve user understanding of notification events. Ticket2 requests email notifications to be sent to users when they are added or removed as watchers from a task, which is directly related to the tracking aspect mentioned in Ticket1. Since both tickets deal with improving user awareness regarding watcher status changes, they can be considered very similar and merged.","* Subject: Enhanced Watcher Management and Notifications
    * Description: Improve Redmine's watcher management system by implementing the following features:
        - Track and display in the issue history whenever watchers are added or removed, providing clarity on notification events and user subscriptions.
        - Send email notifications to users when they are added or removed as watchers from a task, ensuring they are promptly aware of their observer status changes.
        - Implement these enhancements without disrupting the user experience, preferably without unnecessary page refreshes when manually adding or removing watchers, unless part of a larger journal update process."
977,tp,236,28924,Issues filter: Adding a <<Nobody>> special entry to the user list,"Sometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select ""nobody"" as an additional user. So he has to open the issue list two times with different filters.

There was already a similiar request in #689, but it is no possible to have a filter like: ""Assigned to <<Me>> OR <<Nobody>>""

Thank your for considering this feature request.",28,5535,Assigned to issuelist filter: added <nobody> value,"the filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all
",0.8107096586356748,0.95,"Both tickets describe nearly identical requests to enhance the issue filtering system by adding a special option for ""nobody"" or ""unassigned"" issues, allowing users to filter tasks that are either assigned to them or not assigned to anyone. The purpose in both cases is to facilitate finding tasks to work on. Given the high degree of overlap and the same desired outcome, it's clear that these tickets represent the same feature request.","* Subject: Add <<Nobody>> Special Filter Option for Assignee in Issue List
    * Description: Enhance the issue tracking system by introducing a new special entry, <<Nobody>>, in the assignee filter dropdown within the issue list. This will enable users to efficiently filter and view issues that are either assigned directly to them (<<Me>>) or are currently unassigned. By selecting ""Assigned to <<Me>> OR <<Nobody>>,"" users can quickly identify tasks that are available for them to take on, streamlining their workflow and improving task allocation management. This implementation addresses the limitations discussed in previous tickets #689 and other similar requests."
-1,fn-no-query,237,29042,"Add links to Users, Projects and Versions (at least) in timelog report","This issue is extracted from 24568#note-8.

*Before:*
!{width: 60%; border: 1px solid grey;}timelog_report_before.png!

*After:*
!{width: 60%; border: 1px solid grey;}timelog_report.png!

 In this way, the locked users will have the grey out style and can be differentiated by the active users.
",154,25288,Add links to spent time report table elements,"When working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine.",0.4379590898566663,-1,,
-1,fn-no-query,238,29074,"Add ""Edit"" function to entries in ""Spent Time"" block appropriately","In previous versions of Redmine, the ability to edit time entries from the ""Spent Time"" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  ",191,26655,Additional icon for contextmenu,"The contextmenu is a very helpful feature that can increase the productivity while working with redmine. Many people don't know of this great feature because it is only triggered by a right mouse click, which is not a common user interaction on the web. In order to make this feature more prominent this patch adds an icon to table rows that have a contextmenu, which allows to trigger the appearance of the contextmenu with a regular mouse click. 

As there was no icon with three dots available in the famfamfam available, we created our own by using an existing icon with a dot.

This gif shows this new icon in action on the issues table:

!contextmenu.gif!",0.3816480808139959,-1,,
1010,tp,239,29097,Migrate tickets from jira to redmine,"Hi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.

Your help will be highly appreciated",8,1385,Script for import from JIRA,"I've attached ""migrate_from_jira.rake"", which was modeled on both the trac migration script, and jira2trac.rb which can be found at trac's home page.

Though it isn't as polished as it could be, it gives better fidelity than jira2trac.rb + migrate_from_trac.rake, and hopefully it servers as a good starting point for any other tweaks needed to do a decent import.

It currently takes as input (as per jira2trac.rb), an xml dump of issue info from jira. Based on that, it imports projects, sub-projects, users, issue categories, issues, and issue comments.",0.630044479805691,0.9,"Both requirements are focused on migrating tickets from Jira to Redmine. Ticket1 is a request for guidance on the process, while Ticket2 provides a specific script (""migrate_from_jira.rake"") designed for this task. Since Ticket2 directly addresses the need expressed in Ticket1, these tickets are very similar and indicate a duplication in terms of seeking a solution for Jira to Redmine migration. However, Ticket2 offers a more concrete solution, rendering Ticket1 potentially redundant if the script satisfies the migration needs.","* Subject: Jira to Redmine Migration Script and Guidelines
    * Description: Develop and document a streamlined process for migrating all tickets, including projects, sub-projects, users, issue categories, issues, and comments, from Atlassian Jira to Redmine. This will involve utilizing and refining the existing ""migrate_from_jira.rake"" script, ensuring it is user-friendly, thoroughly documented, and capable of handling various data structures exported from Jira. Additionally, create a comprehensive guide detailing each step of the migration process, troubleshooting tips, and best practices to ensure a successful and cost-effective transition from Jira to Redmine."
1027,tp,240,29131,'View all Issues' adds project custom fields  Columns displayed on the issue list,"'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!



",92,18006,Project's custom fields should be available in issue lists columns,"In an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)",0.8284894270575758,0.95,"Both tickets are requesting the same functionality, which is to have project custom fields displayed as columns in the issue list for better visibility and management. The descriptions are slightly different but convey the same essential need. Therefore, it is highly recommended to treat these tickets as duplicates.","* Subject: Display Project Custom Fields as Columns in Issue List
    * Description: Enhance the issue list view to allow users to add project custom fields as columns, enabling easy visualization and filtering of these fields alongside other default columns. This will improve the management of issues by providing a comprehensive overview of project-specific data directly within the issue list."
1056,tp,242,29212,export gantt chart to  csv file,can you add a feature to export gantt chart to csv file beside pdf and png format where pdf doesn't  support Arabic font,16,3097,Add CSV export to Gantt,Then it can be converted to Excel file for further reporting to clients,0.6617704685840174,0.95,"Both tickets request the addition of a feature to export Gantt charts to CSV format, with Ticket1 emphasizing the need due to PDF's lack of support for Arabic fonts and Ticket2 mentioning the conversion to Excel for client reporting purposes. The core requirement of exporting Gantt charts as CSV files is identical in both tickets.","* Subject: Implement Gantt Chart Export to CSV for Enhanced Compatibility and Reporting
    * Description: Enhance the Gantt chart functionality by introducing a CSV export option alongside existing PDF and PNG formats. This will address the issue with non-supported languages in PDF, such as Arabic, and facilitate further data manipulation and reporting to clients through easy conversion to Excel format. Users will be able to generate more inclusive reports and customize data presentations according to client needs."
1059,tp,243,29254,Start date and due date in issue email notification,nan,71,13307,Start date and due date in email notifications,"Today, the start date and the due date doesn't appears in the email sent when we create a new issue.
It would be really useful to make them appears for being aware of the priority of the issue.",0.8095525887941547,0.9,"The two tickets are indeed very similar, with both referring to the inclusion of start date and due date in email notifications related to issues. The first ticket specifically mentions ""issue email notification,"" which can be interpreted as synonymous with the more general ""email notifications"" mentioned in the second ticket. Given that the core request is the same and only the phrasing slightly differs, it's highly likely that they are addressing the same feature request or issue.","** Subject: Display Start Date and Due Date in Issue Email Notifications
    ** Description: Currently, email notifications dispatched upon creation of new issues do not include the start date and due date details. To enhance users' ability to prioritize and manage their tasks effectively, it is proposed that these crucial dates be added to the content of the email notifications. This update will ensure recipients are immediately aware of the time sensitivity and priority of the issues without needing to access the system directly, thereby improving workflow efficiency and response times."
1067,tp,245,29308,Time entry creation: preserve 'spent on' value when using 'Create and Continue',"When creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well.",216,28081,"Option to keep last spent-time date on ""create and continue""","When you have to add time spent in previous days, 
it could be useful to ""continue"" adding entries on the date you previously inserted.

Without that our team often insert wrong dates because date it's being automatically resetted to ""now""",0.7523387753088481,0.95,"Both tickets describe nearly identical issues regarding the preservation of the 'spent on' or date value when creating multiple time entries consecutively using a ""Create and Continue"" feature. They both highlight the need to maintain the previously entered date instead of defaulting to the current date, which leads to inaccuracies in time tracking when users are inputting historical data. Given the high degree of overlap, it's clear that addressing one ticket would resolve the issue mentioned in the other, hence a duplication is strongly recommended.","* Subject: Preserve 'spent on' date when creating consecutive time entries with ""Create and Continue""
    * Description: Enhance the time entry creation process by modifying the ""Create and Continue"" functionality to retain the previously entered 'spent on' date, along with the issue ID and activity, when users create a new time entry immediately after saving another. This improvement will prevent accidental misdating of time entries and streamline the process for users who need to log time for previous days, ensuring data accuracy and reducing the likelihood of manual errors."
1087,tp,247,29471,Allow for calling users by their username,"This is very popular function in modern tools (like GitHub, Slack, Jira, BitBucket...)
It should be possible to ""call"" the user by username (e.g. using @username syntax) in comments.
An suggestion box should be displayed while typing.
Called user should receive email notification and have his name highlighted in comment.",79,13919,Mention user on issues and wiki pages using @user with autocomplete,"https://github.com/dwarburt/redmine-mention-plugin is ok, but I think would be awesome to have something like Github where it has an inline autocomplete for users etc. I think this should be built into the core plugins maybe?

for reference check this out https://github.com/tactivos/jquery-sew",0.7041441556226501,0.95,"Both tickets describe a nearly identical feature request to mention users within comments, issues, or wiki pages using the @username syntax, with an emphasis on autocomplete functionality to facilitate user selection. The primary difference lies in the additional detail provided in Ticket2 about a specific plugin reference and a desire for it to be part of the core product. Given the substantial overlap and the shared core functionality, it's highly recommended to treat these as duplicates with a focus on consolidating the unique aspects from both into a single requirement.","* Subject: Implement User Mentions with Autocomplete across Platform
    * Description: Enhance the platform to allow users to mention others seamlessly in comments, issues, and wiki pages by incorporating the @username functionality, akin to popular tools such as GitHub and Slack. This feature should include an intelligent autocomplete suggestion box that pops up while typing to facilitate easy user selection, thereby improving collaboration and communication efficiency. Users who are mentioned will receive email notifications and their names will be visually highlighted within the content. To ensure a seamless and integrated experience, consider incorporating this feature directly into the core product or basing its implementation on successful third-party solutions like the redmine-mention-plugin and github's mention system, potentially utilizing technology like jquery-sew for efficient autocomplete behavior."
-1,fn-no-query,249,29482,Query system for Projects page,"The attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.

Available columns: 
* Name (default column)
* Status
* Short Description (default column)
* Identifier (default column)
* Subproject of
* Public
* Created
* Project custom fields

Available filters:
* Status with active, closed and archived
* Name
* Description
* Subproject of
* Public
* Created
* Project custom fields

Board view (default):
!board_view.png!

List view:
!list_view.png!

Some mentions:
- I chose to open a new ticket because the patch implements multiple related issues
- More filters and columns can be added, but I wanted to keep this patch as small as possible. 

Any feedback is welcome.",145,24841,Hide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown),"Dear developers,

currently redmine lists all projects on the projects page if a user is admin of a redmine instance.

I think it might be more sensible to hide the projects the user is not a regular team member of.
We use Redmine in our organisation and have currenty 90 projects.
There are several admins assigned via the LDAP attribute and it works quite fine.

Though, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.
Ok, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.

Maybe I can assist you on implementing this behaviour but I need a advise where to start from.
Organisations and companies with a large user base and an elaborated project structure might be very grateful.

Thank a lot in advance!

J. Stein",0.4184085183595464,-1,,
-1,fn-no-query,249,29482,Query system for Projects page,"The attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.

Available columns: 
* Name (default column)
* Status
* Short Description (default column)
* Identifier (default column)
* Subproject of
* Public
* Created
* Project custom fields

Available filters:
* Status with active, closed and archived
* Name
* Description
* Subproject of
* Public
* Created
* Project custom fields

Board view (default):
!board_view.png!

List view:
!list_view.png!

Some mentions:
- I chose to open a new ticket because the patch implements multiple related issues
- More filters and columns can be added, but I wanted to keep this patch as small as possible. 

Any feedback is welcome.",182,26494,Add ability to enable\disable multiple columns on project list page,Currently all project list  displays on multiple columns. What about to add abbility to disable this feature? ,0.469054585424194,-1,,
-1,fn-no-query,249,29482,Query system for Projects page,"The attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.

Available columns: 
* Name (default column)
* Status
* Short Description (default column)
* Identifier (default column)
* Subproject of
* Public
* Created
* Project custom fields

Available filters:
* Status with active, closed and archived
* Name
* Description
* Subproject of
* Public
* Created
* Project custom fields

Board view (default):
!board_view.png!

List view:
!list_view.png!

Some mentions:
- I chose to open a new ticket because the patch implements multiple related issues
- More filters and columns can be added, but I wanted to keep this patch as small as possible. 

Any feedback is welcome.",189,26641,Display and export project information,"can we have report display all project information as  table  including custom fields  and can be exported to excel

",0.4918223801206201,-1,,
1107,tp,251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,27,5325,Add Parent Task to 'Group Results By' drop down,"I just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.

To replicate go to a project and choose ""Issues"" from the top menu.  Choose the ""options"" section and then open up the drop down menu for ""group results by"".  I have attached a screenshot.


---------------------
server info
---------------------
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]
Rails 2.3.5
mysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1
redmine Revision: 3671
",0.5704290218991122,0.95,"Both tickets essentially request the same functionality, which is to add the ability to group issues by their parent task in the issues list view within Redmine. The descriptions differ slightly in context and detail, but the core requirement is identical. Hence, it is highly recommended to treat these as duplicates to streamline the development process and avoid redundant work.","* Subject: Group Issues by Parent Task in List View
    * Description: Enhance the Issues list view to allow users to group issues based on their parent task. This will involve adding 'Parent Task' as an option in the 'Group Results By' dropdown menu, enabling better organization and management of subtasks within projects. Users should be able to select this option and see issues grouped accordingly, facilitating a clearer overview of hierarchical issue structures."
1120,fp,251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,147,24942,"Additional ""Group by results"" option for parent task","The way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.

We then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.

To view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.

To improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.",0.7090500374981651,0.95,"Both requirements essentially ask for the same functionality, which is the ability to group issues by their parent task in the issues section or search results. The descriptions provided in both tickets describe different aspects of this feature but ultimately aim to achieve the same user experience improvement for managing hierarchical issues.","* Subject: Enhance Issue Organization: Grouping by Parent Task
    * Description: To enhance the organization and visibility of issues within the project management interface, implement a new ""Group by Parent Task"" feature in the Issues section and search results. This will allow users to selectively display issues grouped under their respective parent tasks, facilitating a streamlined overview of related tasks associated with each feature or release. Users should be able to choose ""Parent Task"" from the grouping options, enabling them to view not just standalone parent tasks but also to easily unfold and review all subtasks affiliated with a particular parent in a more efficient manner, without the need for additional searches or navigating into individual parent tasks."
1160,tp,252,29615,Add has source revisions/check-ins to issue filters,"it would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  

If set, the issues list would only contain tickets that are associated with source code Revisions.",219,28170,"Filter issues by ""Associated revisions""","In the issues view, it would be helpful to filter issues in that way:
* only show issues that have no associated revisions
* only show issues that have associated revisions
* only show issues that have no associated revisions in _<repository>_
* only show issues that have associated revisions in _<repository>_
* (only show issues that have at least N associated revisions)

Is there already a feature request for that ?",0.6566337679942608,0.95,"Both requirements revolve around enhancing issue filters to include the presence or absence of associated source code revisions/check-ins as a criterion. Although Ticket2 provides more specific filtering options, such as filtering by a particular repository and counting a minimum number of revisions, the core idea is very similar. Thus, it's highly recommended to consolidate these into a single requirement to avoid duplication and streamline development efforts.","* Subject: Enhance Issue Filters with Source Code Revision Associations
    * Description: Improve the issues view by adding advanced filter options related to source code revisions/check-ins, including:
        - Show issues that have associated revisions.
        - Show issues that do not have any associated revisions.
        - Show issues with associated revisions specifically in _<repository>_.
        - Show issues without any associated revisions in _<repository>_.
        - Optionally, allow filtering issues that have at least N associated revisions, where N is a user-defined number.
This new requirement encapsulates all the aspects raised in both original tickets, providing a comprehensive enhancement to issue filtering capabilities."
1172,tp,253,29624,Possibility of auto updates to the latest stable version?,"As an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.
Would anything like this be possible with Redmine?",48,9020,Auto upgrade of redmine and plugins making it much easier to manage the versions,"Can we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. 
Please install jenkins and look at these areas they have, you need this stuff badly.",0.7629770705913429,0.9,"Both tickets describe a desire for an automated update mechanism for Redmine and its plugins, aiming to simplify the process of keeping the system up-to-date. The descriptions are different in their examples (Simple Machines Forum vs. Jenkins) but convey the same core requirement for a user-friendly interface that notifies users of updates and facilitates one-click upgrades.","* Subject: Implementation of Automated Update System for Redmine & Plugins
    * Description: Develop a built-in feature within Redmine that automatically detects and notifies administrators about available updates for both the Redmine core application and installed plugins. Inspired by systems like Simple Machines Forum and Jenkins, this feature will include:

    - A dashboard notification system that displays a prominent message when a new stable version is available, ensuring administrators are promptly informed.
    - An 'Update Center' within the Redmine administration panel, allowing for seamless management of updates.
        - For Redmine core updates: Provide a one-click upgrade option that verifies the integrity of the current installation, backs up necessary files and databases, installs the update, and migrates data as required.
        - For plugin management: Include a separate section to manage all installed plugins, displaying available updates, enabling selective or bulk updates, and ensuring compatibility checks before proceeding with installations.
    - Post-update verification to ensure the update was successful and the system integrity is maintained, with rollback capabilities in case of issues.

This unified approach will significantly enhance the manageability and reduce the maintenance overhead for Redmine instances."
-1,fn-no-query,254,29687,Keep history for comment editions,"Whenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.

Probably this was reported in #9441 but due to bad style, it was considered as spam.",65,12388,diffs for editions of issue/notes entries,"It should be possible to see what changes had been done to the issue/note if someone edited it after it was already created.
If I edit issue description there is a diff entry generated. But if I edit the note itself there is no info that the note was edited.",0.4937688310088903,-1,,
1179,fp,254,29687,Keep history for comment editions,"Whenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.

Probably this was reported in #9441 but due to bad style, it was considered as spam.",183,26527,Show previous comment version when editing an issue comment,"I am able to edit an issue comment. I want to give this right to the other users too. But currently there is nowhere a hint that the comment has been edited. The disadvantage is that a user can manipulate a conversation and nobody gehts knowledge of that.

It would be great if I could see how often a comment was edited and the user can have a look to the previous versions. If too hard, the small, but helpful alternative would be, to show the amount of edits and the author/time of the last edit.",0.5924881005543057,0.85,"Both tickets revolve around the need for maintaining a history or version control for comments in an issue tracking system like Redmine. While Ticket1 emphasizes the general need for a change history including comment edits, Ticket2 focuses on the specific functionality of displaying previous versions of comments when they are being edited, as well as tracking the number of edits and details of the last edit as a minimum requirement. Given the substantial overlap in their objectives, it's reasonable to consolidate these into a single requirement.","* Subject: Implement Comment Edit History and Version Tracking in Issue Tracker
    * Description: Enhance the issue tracking system to maintain a comprehensive history of all comment edits. This feature should allow users to view previous versions of comments, indicating the number of times a comment has been edited along with the author and timestamp of each edit. Additionally, when a user edits a comment, the system should display the previous version by default, facilitating transparency and preventing potential manipulation of conversation records. This enhancement will ensure accountability and preserve the integrity of communication within the issue tracking process."
1184,tp,255,29712,Preview and wiki toolbar for full width custom fields,"Currently, full-width custom fields don't have preview feature and wiki toolbar.

Since those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.

!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!
",217,28085,Wiki Toolbar on Full Width Custom Fields,"Upon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  

When editing an issue, fields with these options should also have the wiki toolbar displayed.

We were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:

<pre>
<% custom_field_values_full_width.each do |value| %>
  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>
  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>
  </p>
<% end %>
</pre>

Note that I'm not checking the Text Formatting option so all full width fields have the toolbar.",0.6166682708040543,0.9,"The two tickets are indeed very similar as they both address the enhancement of full-width custom fields in terms of adding a wiki toolbar for text formatting. Although Ticket1 mentions both the preview and the wiki toolbar, while Ticket2 focuses solely on the wiki toolbar, the core request overlaps significantly. Given that implementing the toolbar would likely facilitate a preview function or at least align with the desire for a consistent UI, combining them makes sense.","* Subject: Enhance Full Width Custom Fields with Wiki Toolbar and Preview Functionality
    * Description: Users have reported a need for improved functionality in full-width custom fields to enhance content creation consistency and user experience. This update will introduce both a wiki toolbar for text formatting and a live preview feature for these fields, ensuring they mirror the capabilities of description fields. Implementation should include the necessary adjustments to the UI to accommodate these features without compromising performance, aiming to provide a seamless editing experience across all full-width custom fields. This enhancement will be made considering the existing workaround applied in version 3.4.4, integrating it more systematically to support the new features universally and respect text formatting options set for each field."
1191,tp,257,29897,hook: controller_issues_bulk_edit_after_save,"From https://www.redmine.org/issues/8757

To avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them",47,8757,Add hook for bulk edit post-save state,"There is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.

Patch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212",0.9130934867696717,0.95,"The two tickets are indeed very similar, as both are requesting the implementation of a hook that triggers after saving multiple issues in a bulk edit operation. The descriptions align closely, with the first ticket referring to an existing discussion on the Redmine forum and the second one providing a specific patch that introduces the desired `controller_issues_bulk_edit_after_save` hook. Given the overlap in subject matter and the direct relation of the provided solution to the requested feature, it's clear that these tickets address the same feature request.","* Subject: Implement hook for bulk issue edit post-processing
    * Description: Create a new hook named `controller_issues_bulk_edit_after_save` that gets triggered after a bulk editing operation has successfully saved changes to multiple issues. This hook should allow plugins to perform necessary post-save actions on the batch of updated issues, ensuring that any custom processing or validation can be executed without interrupting the bulk update process. A community-provided patch exists as a starting point (available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212), which should be reviewed and potentially integrated to implement this functionality."
1200,fp,257,29897,hook: controller_issues_bulk_edit_after_save,"From https://www.redmine.org/issues/8757

To avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them",157,25454,Add bulk edit after save hook,"Correct me if I'm mistaken, but now there only exists a @issue_bulk_edit_before_save@ controller hook. This makes it impossible to provide consistent behavior for plugins implementing edit_after_save controller hooks.

Say, a user edits an issue via issue view and triggers a @issue_edit_after_save_hook@ which handles the issue in a proper way. The same is expected to happen when an issue is edited via context menu (right click) in any multiple issues view, but there is no way to provide that as @bulk_edit@ method is called for context menus and there is no @issue_bulk_edit_after_save@ hook which makes @issue_edit_after_save@ hook useless.

I think it would be useful to have something like this in issues#bulk_edit controller method:

<pre>
def bulk_edit
  ...
  @issues.each do |orig_issue|
    ...

    begin        
      Issue.transaction do          
        call_hook(:controller_issues_bulk_edit_before_save, { :params => params, :issue => issue })          
        issue.save!          
        call_hook(:controller_issues_bulk_edit_after_save,  { :params => params, :issue => issue })          
      end        
    saved_issues << issue
    rescue ActiveRecord::RecordNotSaved => e        
      unsaved_issues << orig_issue
    end

    ...
  end
  ...
end
</pre>

Hope someone can make a proper patch out of this or provide a better way of managing after_save hooks for bulk edit. Thanks.",0.6307337991439652,0.95,"Both tickets are requesting a similar feature improvement regarding the addition of an ""after save"" hook for bulk issue editing in Redmine. The descriptions align in the need to address inconsistencies in plugin behavior when editing single issues versus bulk editing. Ticket1 references an existing discussion and suggests iterating over saved issues post-save, while Ticket2 proposes a specific code snippet implementation for the desired functionality. The core intent and proposed solution are essentially the same.","** Subject: Implement controller_issues_bulk_edit_after_save Hook for Consistent Plugin Behavior
    ** Description: To ensure consistent plugin behavior during both single and bulk issue editing, introduce a new `controller_issues_bulk_edit_after_save` hook. This will allow plugins to properly handle actions after saving each issue during a bulk edit operation, akin to the existing `issue_edit_after_save` hook functionality. The enhancement will involve modifying the `issues#bulk_edit` controller method to iterate through each edited issue within a transaction, calling the proposed `controller_issues_bulk_edit_after_save` hook after successfully saving each issue. This will guarantee that plugins can extend or modify the behavior of bulk edit operations consistently across different interfaces within Redmine."
1207,tp,258,29992,Add permissions to read all projects. ,"Now, only administrators can see list of all projects and sub-projects.

But, it is needed to allow some people (or even group) who should see all this projects. 
Why? to prevent chaos with adding new ones, for better understanding what is going on here.

Currently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. ",86,15835,New permission to allow to view all projects,"We are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.

But using an Administrator as API-User is a security risk.

It would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management.",0.6913979590909791,0.95,"Both tickets essentially request the same feature: the implementation of a new permission that allows non-administrative users or groups to view all projects without granting them full administrative privileges. The reasoning behind both requests overlaps significantly, with one focusing on preventing chaos and enhancing visibility, while the other emphasizes the need due to API synchronization and security concerns. Combining these tickets would streamline the process of addressing this shared requirement.","* Subject: Implement a new ""View All Projects"" permission
    * Description: Develop and incorporate a new permission level within the system that enables designated users or groups to view a comprehensive list of all projects and sub-projects without赋予 them administrative capabilities. This enhancement is crucial to maintain security by avoiding the unnecessary elevation of users to administrator roles for the sole purpose of project visibility. It will also facilitate better project management, ensure seamless integration with external applications via APIs, and promote an organized understanding of ongoing activities across the platform."
1212,tp,259,30336,"""Log Time"" feature controlled per Tracker","Currently, I can enable or disable ""Log Time"" per Role.
I would like this to be a per-tracker setting to allow for more control.",250,29490,Ability to restrict time logging on certain tracker types,"I would like to have a flag that can restrict time logging against a particular type of Tracker. e.g. time can be logged against 'Bug' or ' Task' but *not* against 'Feature' 
In the projects in our setup, we have created a custom type called 'Epic' which represents a big feature that could span across sprints. Epic will contain Features. And users should not be able to log time against custom type 'Epic' or 'Feature'",0.6557268757624295,0.9,"Both tickets essentially request finer control over the ability to log time based on tracker types or categories within their project management system. The first ticket asks for the ""Log Time"" feature to be controllable per tracker, while the second ticket specifically mentions the need for a flag to restrict time logging on certain tracker types, giving examples such as 'Epic' and 'Feature.' The core intention of enhancing control over time logging permissions by associating them with trackers or tracker types is shared between the two tickets.","* Subject: Fine-grained Control of ""Log Time"" Feature per Tracker Type
    * Description: Implement a granular permission control for the ""Log Time"" functionality that allows administrators to enable or disable time logging based on specific tracker types. This will provide more precise control over which roles can log time against trackers such as 'Bug', 'Task', while restricting it for categories like 'Epic' and 'Feature', or any other custom tracker types as per project needs. This enhancement will ensure that time tracking aligns with the organization's workflow and reporting requirements across different project elements."
1225,tp,261,30460,This project is closed and read-only so please hidden all issue on mypage,"When a project was closed and read-only, all my issues assigned to me still display on my page (Issues assigned to me). I think that not necessary for this case",246,29449,Filter out issues from closed projects in My Page blocks,"Users see issues assigned to them on My Page, even when the project is closed.
So it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.
I think that the best solution is NOT to display issues of closed projects on the user's My Page.",0.7787111260680395,0.95,"Both tickets describe nearly identical issues where users observe assigned issues from closed projects appearing on their My Page. The subjects and descriptions convey the same request to hide or filter out these issues to avoid confusion and unnecessary actions for project management. Given the high degree of similarity and the common goal they present, it's strongly recommended to treat these as duplicates.","** Subject: Hide Closed Project Issues on My Page
    ** Description: Users currently see issues assigned to them on My Page even if the respective projects are closed and read-only. This creates an不必要的 burden for project administrators who must reopen projects just to manage issue assignments. To enhance usability and streamline project management workflows, modify the My Page view to automatically exclude issues from closed projects. This adjustment will ensure that only issues from active projects are displayed, thereby reducing confusion and the need for redundant project status adjustments."
1237,tp,265,31113,Update Rails to 5.2.3,"https://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/
",264,31112,Update to Rails 5.2.3,"Rails 5.2.3 has been released on March 28, 2019.
https://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/",0.918717488889223,0.95,"The two tickets have nearly identical subjects and descriptions, both referring to the task of updating Rails to version 5.2.3 and citing the same release announcement URL. This indicates that they are likely referencing the same update task and therefore should be considered duplicates.","** Subject: Update Rails to version 5.2.3
    ** Description: Perform the necessary updates to the application's Rails framework to version 5.2.3, as announced on March 28, 2019. Follow the guidelines and notes provided in the official release notes found at <https://weblog.rubyonrails.org/2019/3/28/Rails-5.2.3-has-been-released/> to ensure a smooth and secure upgrade process."
1238,tp,266,31234,Redmine assign a issue to more than one user,"h3. How to assign a issue to more than one user by checking the checkbox of any user I want?

Is there any way to make it?

Thanks a lot.",0,408,Assign a task to multiple users,"It would be great if it was possible to assign a task to multiple users; And have another state, ""being solved"",
where a task is locked and ""assigned"" to a specific one.

Why: 

In some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign
a task to several workers, and the first who gets available would then grab the task, setting the ""being solved""
to himself.
",0.6271225319398253,0.85,"Both tickets essentially request the functionality to assign tasks or issues to multiple users within the Redmine system. The first ticket directly asks for the ability to assign an issue to more than one user using checkboxes, while the second ticket expands on this idea by suggesting an additional ""being solved"" state to manage concurrency when one of the assigned users begins working on the task. Given the substantial overlap in their core requirement, it's likely that addressing one ticket would resolve the concern of the other.","* Subject: Enhance Task Assignment to Support Multiple Users with ""Being Solved"" Status
    * Description: Enhance Redmine to allow assignment of tasks or issues to multiple users through a checkbox interface, enabling efficient distribution of workloads. Introduce a new task status, ""Being Solved,"" which can be set by any of the assigned users to indicate they have started working on the task, effectively locking the task from being edited or claimed by others until its resolution or release back into the pool. This enhancement will facilitate better collaboration in teams where multiple members are capable of addressing the same type of tasks, ensuring tasks are swiftly addressed by the first available team member."
1242,fp,266,31234,Redmine assign a issue to more than one user,"h3. How to assign a issue to more than one user by checking the checkbox of any user I want?

Is there any way to make it?

Thanks a lot.",66,12579,Ability to assign issues to multiple users,"+*Dear All:*+

+Kindly I need to make *""Assignee""* Combo box allow *""Multi-Selection""* because of:+
 

* Sometimes , Groups don't help me while assigning a specific issue to more than one member.
This happened in case where the assignees are not gathered in a group. (This happened frequently)
(*Note that:* There is an Infinite combination of users!!)
So , I need the *""Assignee""* field to be a *List Box* which allow +*""Multi-Selection""*+.",0.6853785188269815,0.95,"Both tickets essentially request the same functionality, which is the ability to assign a single issue to multiple users within the Redmine platform. The first ticket asks how to do it by checking checkboxes, and the second ticket specifically requests a multi-selection feature for the Assignee field, turning it into a list box. The descriptions differ slightly in their explanation but the core requirement is identical.","* Subject: Implement Multi-User Assignment Functionality
    * Description: Enhance Redmine's issue assignment capability to allow assigning a single issue to multiple users simultaneously. This will be achieved by modifying the current ""Assignee"" field from a dropdown to a list box enabling multi-selection. Users should be able to select multiple assignees by checking the respective checkboxes, catering to scenarios where issues need to be addressed by multiple individuals who may not necessarily belong to the same group. This update acknowledges the dynamic nature of project tasks and the need for flexibility in team collaboration."
1245,fp,266,31234,Redmine assign a issue to more than one user,"h3. How to assign a issue to more than one user by checking the checkbox of any user I want?

Is there any way to make it?

Thanks a lot.",129,24286,Multiple Asignee ticket,"Currently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.

We dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.",0.7231810857221914,0.95,"Both tickets are essentially requesting the same functionality, which is the ability to assign a single issue to multiple users directly in Redmine, rather than relying on groups as a workaround. The first ticket specifically mentions using checkboxes to select multiple users, while the second ticket emphasizes the need for assigning both multiple users and groups to a ticket natively in Redmine, expressing dissatisfaction with the current reliance on plugins for such a feature. Given the substantial overlap in their objectives, these tickets can be considered duplicates with a high degree of certainty.","** Subject: Implement native support for multiple assignees in Redmine
    ** Description: Enhance Redmine's issue assignment functionality to allow direct assignment of a single issue to multiple individual users and/or groups without the need for external plugins. This enhancement should introduce an intuitive interface, potentially using checkboxes, enabling issue creators and managers to easily select multiple users from a list for assignment. By incorporating this feature into Redmine's core, it will cater to organizations that dynamically form ad-hoc teams around tasks and do not wish to predefine extensive group structures for every possible collaboration scenario."
1259,tp,267,31321,Option not to block closing a parent issue when its subtask is open,"From Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.

Redmine 3.4から、子チケットがまだクローズされていない場合、親チケットはクローズすることができません。 コンフィグまたは管理画面で、オン/オフを制御することが可能であれば、チケットクローズのプロセス管理が容易になると考えます。",228,28492,Option not to block closing a parent issue when it has open subtask(s),"Hello,

I saw that: r16108.

But actually, it could be great to be able to close a parent task.
Is it possible to allow this in the ""configuration"" of Redmine? For example:

> ""Allow a parent tracker to be closed even if the sub-task aren't: YES/NO"".

Thanks",0.8354790262084042,0.95,"The two tickets are essentially requesting the same feature, which is the ability to control whether a parent issue can be closed when there are open subtasks. Both descriptions propose a solution involving a configuration setting to enable or disable this behavior in Redmine. The difference in wording is minimal and does not change the core requirement.","* Subject: Option to Allow Closing Parent Issues with Open Subtasks via Configuration
    * Description: Users have reported a need for flexibility in managing the closure of parent issues when associated subtasks are still open. To address this, a new configuration option should be introduced in Redmine's settings. This option would read: ""Allow closing a parent issue even if it has open subtasks: Yes/No."" Enabling this setting would permit users to close a parent issue regardless of the status of its subtasks, providing more streamlined issue management, while disabling it would maintain the current behavior where a parent issue cannot be closed until all subtasks are closed. This enhancement will cater to diverse project management methodologies and user preferences."
1264,tp,268,31338,Add option for append mail header to ticket,"Currently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.
Its okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.",96,21158,Send E-Mail to Redmine: Copy E-Mail Header into Ticket Note,"I frequently bcc redmine, when I send project updates to clients. 

In the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: 

<pre>
Update from E-Mail 
To: <recipients list>
Cc: <cc list>
</pre>",0.6840604262108823,0.85,"Both requirements revolve around incorporating email header information into Redmine tickets to better identify the sender and context of the email. While Ticket1 focuses on emails from unregistered users and suggests appending the header to the ticket generally, Ticket2 specifies the scenario of BCCing Redmine and desires the header to be included as a note with a clear format indicating recipients and CC list. The core idea of enhancing ticket details with email header info overlaps significantly, justifying consolidation.","* Subject: Enhance Email-to-Ticket Functionality with Email Header Details
    * Description: Improve Redmine's ability to handle emails converted into tickets by adding an option to include email header information. This feature will apply both when tickets are created from emails sent by unregistered users and when Redmine is BCCed on project-related communications. The header inclusion will facilitate identification of the sender and provide contextual information such as the recipient list and CCs, enhancing traceability and organization within the tickets. The header details will either be appended to the ticket directly or inserted as a note, clearly formatted for easy reference."
1273,tp,269,31340,Allow restrict auto create accounts for sender domains by list,"It would be nice, if there would be a option(s) which restrict auto create accounts for new users only to specific sender domains.",81,14341,Ability to self-register only from ceratain domains,"Could you add ability to restrict email domains for new users by few domain zones (e.x. sysctem can approve xxx@domain.ru, xxx@domain2.ru but deny any other zones)? It's very useful feature in small company's without centralized account management.

thank you!",0.7140773857801026,0.95,"Both requirements essentially ask for the same feature, which is the restriction of automatic account creation for new users to specific email domains. The descriptions vary slightly in wording but convey the same intent. Hence, it is highly recommended to mark these tickets as duplicates since they both aim to implement domain-based restrictions on user self-registration.","** Subject: Restrict Self-Registration to Specified Domains
    ** Description: Implement a feature that allows the system to restrict self-registration of new user accounts to specific email domains. This will enable the platform to automatically approve accounts from pre-defined domain zones (e.g., @domain.ru, @domain2.ru) while denying registrations from any other domain not on the approved list. This functionality will enhance security and facilitate account management in organizations without centralized account provisioning systems, particularly beneficial for small companies."
1276,tp,270,31377,"Updating project status, or archiving with REST","Hi Redminers,

I've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.
Our redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.

I would like to do a patch request with status=0 for example.

Is this a bug, existing but undocumented or a new feature?

Thanks a lot in advance!

( if it's currently not possible, could someone help me creating a patch for this? )

- Jonas
",75,13725,Archive/close a project via API,"Hi!

It would be great to archive or close a project via the API",0.508146987534748,0.95,"Both tickets essentially request the same functionality, which is the ability to update the project status, specifically to close or archive a project, through the REST API. The descriptions differ slightly in tone and detail, but the core requirement is identical. Given the high similarity, it's advisable to treat these as duplicates to streamline development efforts.","** Subject: Implement Project Status Update (Close/Archive) via REST API
    ** Description: Enhance the existing REST API to allow users to update the status of a project, including the capability to close or archive projects. This will facilitate seamless synchronization with external platforms and help maintain a clean and up-to-date project list within Redmine. Users should be able to perform a PATCH request with a designated status parameter (e.g., `status=archived` or `status=closed`) to modify the project status accordingly."
1285,tp,271,31518,Default due date for issues,"It would be nice if we can configure Redmine to set a default due date for issues (N days from today).

Due date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users.",70,13296,"Permits defining a default ""due date""","Each project has a ""due date"" (when working with clients). It would be awesome to permits to add a default ""due date"" for a project.
For each new issue, the ""due date"" will be filled by default.",0.6752282682039313,0.9,"Both requirements revolve around setting a default due date for issues, with Ticket1 focusing on a global configuration for all issues and Ticket2 emphasizing the need for a project-specific default due date. The core intent of enhancing Redmine's functionality to automatically assign due dates is shared between the two, suggesting a strong similarity. Thus, it's recommended to consolidate these into a single requirement that addresses both global and project-level configurations.","* Subject: Default Due Date Configuration for Issues and Projects
    * Description: Enhance Redmine to allow administrators to set a default due date for issues which can be configured both globally (with N days from creation as the default) and at the project level (aligning with each project's unique ""due date""). This feature will ensure issues are automatically assigned a due date, improving task management, user reminders, and overall accountability within and across projects, thereby reducing the likelihood of overlooked tasks and enhancing collaboration with clients."
1307,tp,273,31618,make version description field rich,it would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown,9,1680,Make version description multiline and textilizable,"Made Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).
We needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.

Contributed by Texuna Technologies.",0.695137657238586,0.9,"Both requirements aim to enhance the version description field by introducing formatting capabilities. Ticket1 suggests making the field ""rich"" with linked issues and easier presentation of information, while Ticket2 specifically requests multiline support and the adoption of Textile markup, similar to what is available in Trac. Given the substantial overlap in the intent to improve the description field's functionality, it's likely these tickets can be consolidated.","* Subject: Enhance Version Description Field with Rich Text Formatting
    * Description: Improve the Version description field to support rich text formatting, including hyperlinking to issues (#issue), multiline input, and adopting Textile markup for advanced formatting options, ensuring compatibility with migrations from Trac which uses similar Wiki markup features (as referenced in #1256). This update will facilitate better organization and presentation of version-related information across projects."
1359,tp,276,31859,Per role visibility settings for spent time custom fields,"Based on the work made by Jens Krämer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).

",164,25746,Spent time - CUSTOM fields - permissions,"Dears,

first of all thanks a lot for all the effort!

We really appreciate ""Issue custom fields permissions"" possibility settings.

Could you please implement the same feature/approach for ""Spent time custom fields""? I believe this could help a lot for many redmine users and the approach/code could be reused.

We need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.

Do you understand our needs? Any questions please? Can I help you somehow with this?

Thanks a lot
Kind regards
jb",0.7084732270296263,0.95,"Both tickets are requesting similar functionality, focusing on implementing role-based visibility settings for spent time custom fields in Redmine. The descriptions align in terms of needing permission control over these custom fields, with Ticket1 referencing an existing patch that achieves this and Ticket2 expressing a clear user need for such a feature, including additional ideas like field mandatory settings based on issue status and user permissions. Given the substantial overlap and the fact that both tickets aim to enhance spent time custom field visibility with roles and permissions, it's strongly recommended to consolidate these into a single ticket.","* Subject: Implement Role-based Visibility & Permissions for Spent Time Custom Fields
    * Description: Enhance Redmine to allow administrators to set role-based visibility and permission controls for spent time custom fields. This should include the ability to hide specific spent time custom fields from certain user roles, as well as make certain fields mandatory to fill when an issue reaches particular stages or statuses, correlating these requirements with the user's permissions. The implementation should build upon the work initiated in pull request #23997, ensuring compatibility and extending its functionality to accommodate the dynamic behavior of field visibility and mandatory status based on issue progression and user roles."
1364,tp,277,31984,Permission to add timelogs in past,"There is permission to edit time logs, 

But, what's missing is +forbid to add time log for date in past+.

There are many use-cases where employees log time on daily basis, but should not 
be able to log time retro-actively.

Even if they don't have edit timelog permission, they can still log
time for days in past, which should be good to forbid.

",69,13244,Restrict log time for old days,"For example any user have to log his spent time today or tomorrow.
If he try to log time for period more than yesterday - it should be not possible.
There are kind of users that sometimes log their time for period weeks ago and this is bad.
Is there any suggestion how to prevent such things.",0.7431751878307821,0.95,"Both tickets express a nearly identical need to prevent users from adding time logs for dates in the past, emphasizing the issue of retroactive logging and the desire to enforce daily or at most recent logging practices. The descriptions vary slightly in wording but convey the same underlying requirement.","* Subject: Implement restriction on adding time logs for past dates
    * Description: To ensure accurate and timely reporting, the system must be configured to disallow users from adding time logs for any date prior to the current day. This restriction should apply regardless of the user's edit permissions, effectively preventing retroactive time logging. Users should only be allowed to log time for the current day or future dates, with an exception not provided for logging time for previous days, even if it's within the same week. This measure will promote consistent daily logging habits and improve data integrity."
-1,fn-no-query,281,32291,Need some patch to enable emails queue,"I'm using redmine on Windows platform (Bitnami), smtp is set on gmail. In case I'm creating a new, the email about it trying to send for more than 50 recipients, so I'm getting an error 452 4.5.3 - too many recipients. Is it possible to develop some patch to make the queue of emails, sending one by one and not by all pack in time? Many thanks!",195,26791,Send individual notification mails per mail recipient,"With this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.

This approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:

* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.
* The mail will always be sent in the recipients language, even if multiple users with different languages are notified
* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)

In the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...

With this new approach, we do have a some challenges which we are trying to address separately:

* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.
* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.

h2. Reminder: How mail sending works in plain Rails (and Redmine)

This patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.

* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a ""@method_missing@"":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.

Now that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.

When calling @mail.deliver@, the delegator starts to render the mail:

* ""@MessageDelivery#processed_mailer@"":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.
* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.
* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.
* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.

h2. How we hook into this process

Now, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:

* We want to create multiple mails, one per recipient and deliver them all in one go.
* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done

These two goals are achieved with two specific changes to our Mailer:

We introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.

We use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.

When creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.

We also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).

h2. What we tried and did not work

I first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.

One way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.

h2. What we ship

We ship three patches here:

* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.
* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility
* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.

h2. Future work

h3. ActiveJob sending

If the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.

By default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.

h3. BCC recipients

Since each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though.",0.4584095410934099,-1,,
1382,tp,282,32321,Issue filter: new filter: Author's Group,"There is a filter as ""Asignee's Group"", and it would be better to have filter ""Author's Group"".",39,7867,"Add filters for ""Author's group"" and ""Author's role"" to issues list",Is it  possible to add group of auther for filtering of tasks?,0.7441826468395032,0.9,"Both tickets request the addition of filters related to the author of issues, specifically focusing on the author's group. Although Ticket1 mentions only the ""Author's Group,"" and Ticket2 asks for both ""Author's Group"" and ""Author's Role,"" the core requirement of including the author's group in issue filters overlaps significantly. Therefore, it's recommended to consolidate these tickets into one, with consideration given to including both group and role filters to comprehensively address the underlying need.","* Subject: Add filters for ""Author's Group"" and ""Author's Role"" to Issues List
    * Description: Enhance the issue tracking system by implementing filters for both ""Author's Group"" and ""Author's Role"" to facilitate more granular organization and management of tasks based on the author's attributes. This will include the development of a new filter option for the author's group, as initially suggested, and extend it to also include an additional filter for the author's role, addressing the combined needs outlined in the two original tickets."
1413,tp,283,32406,[ISSUE RELATIONS] Add several relations at a time,"For the moment the relations can be added one by one.
It could be great to add a group of relations, sending an array of relations, for example.",244,29272,Create several relations at the same time via Issue Relations API,"Hi,
For the moment it's possible to get all the relations of an issue and to post only one new relation. Could it be possible to POST an array of relations to make only one call?
Thanks.",0.7704257840823001,0.95,"Both tickets are requesting the functionality to create multiple issue relations simultaneously, indicating a strong similarity in their purpose. The descriptions differ slightly in wording but convey the same intention of enhancing the efficiency of the Issue Relations API by allowing batch processing of relations instead of individual requests. Given the high degree of overlap, it's recommended to treat these as duplicates to streamline the development process and avoid redundant work.","** Subject: Batch Add Issue Relations via API
    ** Description: Enhance the Issue Relations API to facilitate adding multiple issue relations in a single API call by accepting an array of relation objects. This improvement will enable users to efficiently manage issue dependencies and relationships without the need for multiple sequential requests, thereby optimizing workflow and reducing API overhead."
1423,fp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.7508584344427816,0.85,"Both tickets describe a need to grant selective access to issues beyond the default visibility settings. While the descriptions provide different use-cases (internal watchers vs. involving external parties), the underlying requirement is essentially the same: enabling a mechanism to permit specific individuals to view and/or be notified about an issue without changing the overall project's visibility settings. The implementation of either suggestion could likely address both tickets' concerns.","* Subject: Enhanced Access Control for Selective Issue Visibility
    * Description: Implement an enhanced access control feature allowing project members with appropriate permissions to grant visibility and notification privileges on a per-issue basis to users who would otherwise not have access according to the project's default visibility settings. This feature should cater to both internal watchers, who need to monitor and be informed about updates on specific issues, and external parties or additional team members requiring temporary or permanent access to a particular ticket. Users 'involved' or 'watching' under this mechanism will have tailored access rights to view and track the designated issues without altering the broader project visibility rules, ensuring privacy compliance and efficient collaboration."
1433,tp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",120,23546,"Issue visibility ""watched by, created by or assigned to"" for roles","There's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.

We wanted to contribute our ""minimal"" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.",0.6967923654383671,0.9,"Both tickets address the issue of issue visibility in relation to watchers. They propose adjustments to the visibility settings to allow watchers to see tickets they are assigned to, even if the general visibility setting is more restrictive. The core idea in both tickets is to make an exception for watchers within the visibility rules. Although the descriptions differ slightly and Ticket2 seems to propose a more generalized solution applicable to roles, the underlying requirement is very similar and could likely be addressed with a unified implementation.","* Subject: Enhanced Issue Visibility for Watchers and Roles
    * Description: Implement an enhanced issue visibility feature that allows for more granular control over who can view issues. This includes an option to set visibility on a role basis where issues can be made visible to ""Issues watched by, created by, or assigned to"" the user, in addition to the current visibility options. This will enable better collaboration while maintaining privacy constraints, ensuring watchers receive notifications and can view issues they are added to, without exposing all non-private issues."
1447,fp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",198,27028,Issue's visibility for the watchers,"Would you please consider the feature of extending the issue's visibility for the role to this issue's watchers?
This is a moderate choice for administrator between the none-private and assign & author.
Maybe there's influence for current role's authorization. You guys please think about it. Thank you so much.
",0.747000076619807,0.95,"Both tickets request an enhancement to Redmine's issue visibility feature, specifically targeting the ability for watchers to see tickets even if the general visibility setting is restricted. The descriptions convey the same underlying need albeit with slightly different wording and context. Given the high similarity in subject matter and the desired outcome, it is strongly recommended to treat these as duplicates to streamline development efforts.","** Subject: Enhanced Watcher Visibility: Allow Watchers Access Regardless of Issue Visibility Settings
    ** Description: The proposed feature aims to introduce a more granular control within Redmine's permission system concerning issue visibility for watchers. Currently, when issue visibility is set to restrict access to issues created by or assigned to users, watchers may not necessarily see those issues or receive notifications. This new functionality will permit administrators to configure the system such that selected watchers can view and be notified about issues they are watching, even if the default visibility setting is restrictive (e.g., ""Issues created by or assigned to the user""). This enhancement strikes a balance between maintaining privacy with GDPR compliance and ensuring necessary collaboration by granting exceptions for watchers without exposing all non-private issues to them. This addition will provide administrators with a flexible中间 ground in managing issue visibility while addressing the needs of specific project dynamics and individual roles."
1449,fp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",0.6923922403114202,0.9,"Both tickets describe a similar need to extend the issue visibility settings in Redmine to allow watchers to see and receive email notifications for issues they are watching even if the general visibility setting is restricted to ""Issues created by or assigned to the user."" The primary difference is in the articulation, with Ticket1 focusing on the need for a configuration option and Ticket2 specifically suggesting a new notification settings value within role settings. However, the underlying requirement is essentially the same.","* Subject: Extend Issue Visibility Settings for Watchers
    * Description: Enhance Redmine's issue visibility configurations to include an option that permits watchers to view and receive email notifications for issues they are added to, regardless of the default visibility setting. This new setting, ""Issues created by or assigned to the user or user is watcher,"" would ensure that designated watchers can stay informed without having to adjust the entire project's visibility to ""All non-private issues,"" thereby maintaining privacy controls while improving collaboration and communication."
1451,fp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",222,28223,Lack of access for Watchers if visibility=Issues created by or assigned to,"Dear,
I would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as ""Issues created by or assigned to the user"".
In general it is possible to set the issues visibility as ""ALL issues"" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).

Therefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers.",0.8136521825853119,0.95,"Both tickets describe a nearly identical issue regarding the limitations of issue visibility settings in a project management system, specifically Redmine. They both request a feature that would allow watchers to see and be notified about issues they are added to, even when the general visibility setting is restricted to issues created by or assigned to the user. This would provide a more granular control over permissions without compromising privacy by having to set visibility to ""All non-private issues.""","* Subject: Enhanced Watcher Visibility in Restricted Issue Visibility Settings
    * Description: The current issue visibility settings in our project management platform pose a challenge when attempting to grant specific individuals, such as watchers, access to issues without exposing them to all non-private issues. To address this, we propose an enhancement to allow for more nuanced permission controls. The new feature should include an option within the issue visibility settings that enables watchers to view and receive email notifications for issues they are designated to, regardless of the broader setting being ""Issues created by or assigned to the user."" This will ensure that watchers can effectively monitor and contribute to relevant issues while maintaining the intended restrictions on overall issue visibility for data protection and internal policy compliance."
1455,fp,284,32491,Watcher can see tickets independent from issue visibility,"Hello Redmine Team,

we would need the following configuration option: 
In our projects, our members have the issue visibility ""Issues created by or assigned to the user"".
This is set by default, due to GDPR and internal reasons.

For some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.

In contrast, setting the issue visibility to ""All non private issues"" would allow them to see too much tickets.

So a combination would be great: general setting for visibility is ""Issues created by or assigned to the user"" but with the exceptional case, if a person is assigned as watcher.
It should be possible, that the watcher can see those issues, he has been added to.

Thanks in advance.",231,28614,Issue Watcher view Issue when not in project group,"Hi, 

is there a way to let watcher view issues that they are not assigned to the projekt. 

best",0.6903326247015928,0.9,"Both tickets describe a scenario where watchers should be able to view issues they are assigned to, even if the issue visibility settings would normally prevent them from doing so. The core request in both tickets is to grant watchers special permissions to bypass the standard visibility restrictions. While the descriptions use slightly different wording and examples, the underlying requirement is very similar and could be consolidated.","** Subject: Enhance Watcher Permissions for Extended Issue Visibility
    ** Description: Implement a feature that allows issue watchers to view and receive email notifications for issues they are assigned to, regardless of the project's default issue visibility settings. This will enable a more flexible permission model where watchers can stay informed without needing full access to all non-private issues or belonging to the project group. This enhancement will cater to GDPR compliance and internal privacy needs by maintaining restricted visibility for other non-involved users while granting exceptions for designated watchers."
1464,tp,285,32493,Add capability to make an attachment\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla),"When a ticket has a lot of screenshot and\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.

The proposed feature is already present in bugzilla (see attachment:bugzilla.png)",13,1984,Ability to obsolete an uploaded file,"Similar to how bugzilla does it. The file is still there, but crossed out, to emphasize that it's been superseded by the newer attachment.",0.651409073069103,0.95,"Both requirements essentially ask for the same functionality, which is the ability to mark attachments as obsolete (similar to Bugzilla) to declutter the view and focus on the most recent or relevant files. The descriptions are nearly identical in their intent, suggesting a strong overlap and a clear case for consolidation.","- **Subject**: Implement Obsolete Attachment Feature for Enhanced File Management
    - **Description**: Enhance the platform with a feature that allows users to mark uploaded files as obsolete. This functionality mirrors the behavior seen in Bugzilla, where outdated attachments such as screenshots or patches can be visually marked as superseded, enabling their collapse and promoting focus on the current, necessary files. Despite being marked as obsolete, these files will still be retained for reference purposes but presented in a manner that emphasizes they have been replaced by newer versions."
1470,tp,286,32496,bulk edit issue by import CSV,"We can import CSV to batch creating new issues.
But if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.",114,23448,Allow updating existing issues via CSV import when their ID's are the same,"I'd like to have the possibility to update issues with a csv import.
Atm, if i import a task with an already existing ID, the ID changes and a new task is created.",0.7856192676935282,0.95,"Both requirements essentially ask for the same feature—updating existing issues within a project by importing a CSV file that contains the Issue IDs alongside other fields that need updating. The descriptions vary slightly, but the core objective is identical. Therefore, it's highly recommended to treat these as duplicates and consolidate them into a single requirement.","- Subject: Implement CSV Import for Bulk Updating of Issues
    - Description: Enhance the platform's CSV import functionality to support both the creation of new issues and the bulk updating of existing issues based on the provided Issue IDs. When a CSV is imported, and an Issue ID matches one in the system, the corresponding issue should be updated with the information provided in the CSV, rather than creating a duplicate entry. This will streamline the process of modifying multiple issue details efficiently."
1474,fp,286,32496,bulk edit issue by import CSV,"We can import CSV to batch creating new issues.
But if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.",171,25810,Add #ID into Import Feild for update issue properties,"When I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.
Sometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.

So I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.
The expect result view may like attached import.png.",0.6039901035718475,0.95,"Both tickets essentially request the functionality to update existing issues using CSV import by including the Issue ID in the CSV file. The descriptions convey the same core need,尽管它们从略微不同的角度出发。 Ticket1 emphasizes the current limitation of creating new issues instead of updating when Issue IDs are provided, while Ticket2 directly asks for the addition of Issue ID as a field in the import process to facilitate updating issue properties. The overlap in the desired outcome is clear, hence a high probability of duplication.","* Subject: Enhance CSV Import to Support Bulk Update of Issues by Including Issue IDs
    * Description: Currently, the CSV import feature is utilized for batch creation of new issues. To enhance productivity and streamline workflow, especially in offline scenarios, users need the ability to update existing issues in bulk through the same CSV import mechanism. This enhancement would involve allowing the inclusion of Issue IDs within the CSV file, alongside other columns that specify the changes to be made. Upon import, if an Issue ID is recognized, the system should update that particular issue with the provided information rather than creating a duplicate. This improvement will ensure efficient issue management and reduce manual efforts when reconnecting to the network after working offline."
1478,fp,286,32496,bulk edit issue by import CSV,"We can import CSV to batch creating new issues.
But if we provided the Issue#id in the CSV, also some other columns which need to be updated, we should be able to update the existing issues, but not to creating new issues.",221,28202,Allow updating existing issues via CSV import,"It would be very helpful to be able to update existing issues through the CSV import function.

",0.751430273697633,0.95,"Both requirements essentially ask for the same functionality, which is the ability to update existing issues using a CSV import feature, rather than just creating new ones. The descriptions differ slightly in wording but convey the same intent.","* Subject: Enhance CSV Import to Support Bulk Update of Issues
    * Description: Enhance the current CSV import functionality to facilitate both the creation of new issues and the bulk update of existing issues based on the Issue#ID provided in the CSV file. This will allow users to efficiently modify multiple issue fields, such as status, assignee, or description, streamlining the management of projects and tasks."
1481,fn-queried,287,32501,"The English version of ""Help"" content is displayed on the page after clicking the ""Помощь"" button","Preconditions: The localization of the site must be ""Russian""

1. Open the site http://www.redmine.org/ and log in
2. Click the ""Помощь""
3. Pay attention to the page

Actual result: The English version of ""Help"" content is displayed on the page after clicking the ""Помощь"" button
Expected result: The Russian version of ""Help"" content is displayed on the page after clicking the ""Помощь"" button",3,654,The i18n of the help ,"This is an example of the i18n of the help.

original http://redmine.rubyforge.org/svn/tags/0.6.3
",0.672890854580976,0.5,"The two tickets are related to the localization of the help content, but they do not provide enough overlapping information to conclusively determine that they are duplicates. Ticket1 specifically mentions the ""Помощь"" button displaying English content instead of Russian on the Redmine website, while Ticket2 vaguely refers to an ""i18n of the help"" with a version control reference that doesn't give explicit details about the issue. Without more specific details aligning the issues, it's risky to assume they are duplicates.",N/A (Since the probability is not > 70%)
1487,tp,289,32757,Show warning when an issue cannot be closed because of blocking issue relations,"Same as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues.",272,31589,Show warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s),"You cannot close an issue if it has open subtasks (#10989).

This rule is not obvious and difficult to know for users. In my company, ""why I cannot close this issue?"" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.

I think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.

!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!",0.7131587734801386,0.8,"The two tickets are quite similar as they both aim to address the issue of notifying users when an issue cannot be closed due to certain conditions. Ticket1 specifically mentions blocking issue relations, while Ticket2 includes both open subtasks and blocking open issues. Since the core idea revolves around enhancing user awareness on why an issue cannot be closed, it makes sense to consolidate these requirements to create a more comprehensive solution.","* Subject: Show detailed warning when an issue cannot be closed due to dependencies or open subtasks
    * Description: Enhance the user experience by implementing a unified warning system that alerts users with specific reasons when they are unable to close an issue. This system should cover scenarios where issues are blocked by related open issues (as per #31589) as well as cases with unresolved subtasks (#10989). Upon attempting to close an issue under such conditions, a clear warning icon accompanied by a tooltip will appear on the edit issue form, detailing all the blockers, including both blocking issues and any open subtasks that need attention. This improvement will significantly reduce confusion and save time for users by directing them immediately to the root cause of the issue closure restriction."
1489,fp,290,33256,Show wiki toolbar for spent time custom fields with text formatting enabled,"Before:
!{width:70%; border: 1px solid grey}.before.png!

Using this patch:
!{width:70%; border: 1px solid grey}.after.png!
",217,28085,Wiki Toolbar on Full Width Custom Fields,"Upon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  

When editing an issue, fields with these options should also have the wiki toolbar displayed.

We were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:

<pre>
<% custom_field_values_full_width.each do |value| %>
  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>
  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>
  </p>
<% end %>
</pre>

Note that I'm not checking the Text Formatting option so all full width fields have the toolbar.",0.5634621482291571,0.9,"Both tickets essentially request the addition of the wiki toolbar for custom fields with text formatting capabilities. The first ticket specifically mentions spent time custom fields, while the second refers to full-width custom fields without specifying the type but implies it should apply to those with text formatting options. Given the overlap in functionality and the similarity in the desired outcome, it's likely that addressing one ticket would resolve the issue for both types of custom fields. Hence, they can be considered very similar and should potentially be consolidated.","* Subject: Implement Wiki Toolbar for Custom Fields with Text Formatting
    * Description: Enhance the issue editing interface to consistently display the wiki toolbar for all custom fields that support text formatting, including but not limited to spent time and full-width custom fields. This update will ensure users can easily format their text across different custom field types, improving the overall user experience and consistency in content creation. The implementation should accommodate existing layout options and dynamically apply the toolbar based on the text formatting setting of each custom field."
1490,fp,290,33256,Show wiki toolbar for spent time custom fields with text formatting enabled,"Before:
!{width:70%; border: 1px solid grey}.before.png!

Using this patch:
!{width:70%; border: 1px solid grey}.after.png!
",255,29712,Preview and wiki toolbar for full width custom fields,"Currently, full-width custom fields don't have preview feature and wiki toolbar.

Since those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.

!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!
",0.6906269653451652,0.85,"Both tickets request improvements to the user interface for custom fields in terms of text formatting and consistency with other parts of the system. Ticket1 specifically asks for the display of the wiki toolbar for spent time custom fields when text formatting is enabled, while Ticket2 requests the addition of a preview feature and a wiki toolbar for full-width custom fields to enhance consistency and usability. Given the overlap in the nature of the enhancements (wiki toolbar and improving UI consistency), these tickets can be considered highly similar and could potentially be merged, focusing on implementing a unified solution for enhancing all custom fields with text formatting capabilities and preview options.","** Subject: Unified Text Formatting and Preview for Custom Fields
    ** Description: Enhance the user experience across all custom fields by implementing a consistent wiki toolbar for text formatting and adding a live preview feature. This improvement will apply to both spent time custom fields and full-width custom fields, ensuring that users have the ability to format their text entries and preview changes before submission. The updated interface will promote content accuracy and UI consistency throughout the platform."
1491,fp,291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",6,1140,Filtering using more than one instance of each field,"I would like to filter issues using more than one instance of each field.
Example:
issues with subject containing ""email"" but not containing ""server""...",0.7243813028536408,0.85,"Both tickets are requesting the ability to use multiple search terms or conditions within a single filter, specifically mentioning the ""Subject"" field in Ticket1 and a more general statement in Ticket2 but including an example that applies to the subject as well. The Japanese translation in Ticket1 also aligns with this desire for multiple inclusion/exclusion conditions in the subject filter. Therefore, these tickets are very similar and suggest a common need for enhanced filtering functionality.","* Subject: Enhanced Filter Functionality for Multiple Terms per Field
    * Description: Users need the capability to input multiple search terms within a single filter field to refine their queries more precisely. This should include support for AND and NOT logic, allowing for complex combinations such as including ""email"" while excluding ""server"" in the subject field, as well as extending this functionality to other relevant fields for comprehensive issue filtering. Users should be able to input these multiple conditions either by separating them with commas or through an intuitive UI that facilitates the addition of multiple criteria per filter field."
1494,fp,291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",0.6384076490496345,0.85,"Both tickets are requesting improvements to the filtering system for issues, with a focus on enhancing the logical operations that can be applied to the 'Subject' filter (Ticket1) and the filter menu in general (Ticket2). The Japanese text in Ticket1 specifically asks for an ""AND"" condition when separating terms with a comma, which aligns with the broader request for logical operators in Ticket2. Given the substantial overlap in their objectives, it's reasonable to consolidate these into a single requirement.","* Subject: Enhanced Filter Logic for Issues
    * Description: Improve the issue filtering functionality by implementing advanced logical operators such as ""AND"", ""OR"", allowing users to apply these operators both within the ""Subject"" filter and across other filter categories. This will enable users to create more complex and precise queries when searching for issues, for instance, by selecting multiple subjects or applying conditions like including or excluding specific terms simultaneously."
1495,fp,291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",0.6029164349703817,0.85,"Both tickets are requesting enhancements to the filtering system within an issue tracking system, specifically focusing on the ability to use multiple search terms or conditions simultaneously, including ""OR"" logic and multiple subject selections. The Japanese portion of Ticket1 confirms the desire for multiple inclusion/exclusion conditions in the subject filter. Ticket2 expands on this concept by suggesting a more advanced method of creating multiple query sets within a single search, which encompasses the need for multiple subjects and ""OR"" clauses as described in Ticket1. Given the significant overlap in the desired functionality and the complementary nature of the suggestions, it's reasonable to consider these tickets as addressing the same core enhancement need.","* Subject: Enhanced Multi-Term & Condition Filtering in Issue Search
    * Description: Improve the issue search functionality to support complex query building, enabling users to apply multiple search terms concurrently with both ""AND"" and ""OR"" logical operators. This includes the ability to select multiple subjects, assignees, trackers, and other filter criteria independently within each query set. Users should be capable of adding multiple query sets using a ""+"" icon, where each set can have its own combination of filters. The system will then aggregate results from all query sets, allowing for side-by-side comparison of issues based on varied criteria. Enhancements should also accommodate custom query combinations to further extend search capabilities."
1496,fp,291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",204,27365,Filtering by two or more values for parameters without choosable options,"Hi!
Is there an opportunity to insert for parameter ""Subject"" several values for filtering?
For example, I want to exclude issues which contain two or more values (as I can do with ""Tracker"" or ""Status"" parameters)",0.6520259908626626,0.9,"Both tickets are requesting the functionality to use multiple search terms or values in the ""Subject"" filter when performing queries. The first ticket specifically asks for the ability to select multiple subjects and applies a similar request to the Japanese translation. The second ticket also seeks to filter by two or more values within the ""Subject"" parameter, akin to how it's done with ""Tracker"" or ""Status."" Given the substantial overlap in their objectives, it's highly likely these tickets address the same feature request.","* Subject: Implement multi-value filtering for ""Subject"" parameter in queries
    * Description: Enhance the query functionality to allow users to input multiple search terms or values for the ""Subject"" filter, enabling AND condition searches when commas are used, as well as exclusion of issues containing any of the specified values. This enhancement will mirror the existing capability available for parameters like ""Tracker"" and ""Status,"" thereby improving the flexibility and precision of issue filtering."
1499,fp,292,33288,Add wiki bar to Time_Log,Is it possible to add a wiki bar into custom_fields created onto the timelog form,217,28085,Wiki Toolbar on Full Width Custom Fields,"Upon upgrading to version 3.4.4 we noticed we now have the ability to have custom long text fields with Full Width Layout and Text Formatting options.  

When editing an issue, fields with these options should also have the wiki toolbar displayed.

We were able to make it appear by adding a call to wikitoolbar_for in app/views/issues/_form_custom_fields.html.erb as follows:

<pre>
<% custom_field_values_full_width.each do |value| %>
  <p><%= custom_field_tag_with_label :issue, value, :required => @issue.required_attribute?(value.custom_field_id) %>
  <%= wikitoolbar_for custom_field_tag_id :issue, value.custom_field %>
  </p>
<% end %>
</pre>

Note that I'm not checking the Text Formatting option so all full width fields have the toolbar.",0.5288952216109746,0.9,"Both tickets essentially request the addition of a wiki toolbar to custom fields within different contexts—the Time Log and the Full Width Custom Fields. The descriptions diverge slightly in that Ticket1 specifically mentions the Time Log form, while Ticket2 focuses on the upgrade to version 3.4.4 and the behavior of custom long text fields with full-width layout. Despite this, the core requirement of integrating a wiki toolbar into custom fields is shared, indicating a high degree of similarity.","** Subject: Add Wiki Toolbar to Custom Fields in Time Log and Full Width Layout
    ** Description: Enhance the user experience by integrating the wiki toolbar into custom text fields across both the Time Log form and all full-width custom fields that support text formatting. This update will ensure consistency in text editing capabilities, enabling users to utilize wiki formatting conveniently in their issue descriptions and time log entries following the upgrade to version 3.4.4. The implementation should include an assessment to automatically display the toolbar for relevant fields without requiring manual adjustments to the view files, ensuring a seamless and user-friendly interface."
1500,fp,292,33288,Add wiki bar to Time_Log,Is it possible to add a wiki bar into custom_fields created onto the timelog form,255,29712,Preview and wiki toolbar for full width custom fields,"Currently, full-width custom fields don't have preview feature and wiki toolbar.

Since those look like a description field, I think it would be great and makes UI consistent to have preview and toolbar.

!{width: 707px; border: 1px solid #ccc;}.preview-and-toolbar@2x.png!
",0.5353151300675002,0.9,"Both requirements revolve around enhancing custom fields in the system by incorporating wiki functionality (wiki bar and toolbar) and improving the user interface consistency. Although Ticket1 specifically mentions the ""Time_Log"" form and adding a ""wiki bar,"" while Ticket2 addresses ""full-width custom fields"" in general and requests a ""preview feature and wiki toolbar,"" the underlying intent to improve the wiki capabilities and UI consistency across custom fields is shared. Thus, they can be considered very similar and merged.","* Subject: Enhance Wiki Functionality and UI Consistency in Custom Fields
    * Description: Improve the usability of custom fields, including those on the Time_Log form, by integrating a unified wiki toolbar with preview functionality. This update will ensure all custom fields, especially full-width ones, have a consistent user interface akin to description fields, featuring a wiki toolbar for easy formatting and a preview option to review changes before submission."
1501,tp,292,33288,Add wiki bar to Time_Log,Is it possible to add a wiki bar into custom_fields created onto the timelog form,290,33256,Show wiki toolbar for spent time custom fields with text formatting enabled,"Before:
!{width:70%; border: 1px solid grey}.before.png!

Using this patch:
!{width:70%; border: 1px solid grey}.after.png!
",0.6142162001338601,0.9,"The two tickets are very similar as they both request the addition of a wiki toolbar or formatting capabilities to the time log's custom fields. The descriptions differ slightly in that Ticket1 asks for a ""wiki bar,"" while Ticket2 specifically mentions a ""wiki toolbar"" and refers to enabling text formatting for spent time custom fields, which seems to align with the overall intent of enhancing the text input experience in the time log section. Given the strong overlap in their objectives, it's highly likely that these tickets address the same user need and can be consolidated.","* Subject: Enhance Time Log Custom Fields with Wiki Toolbar and Text Formatting
    * Description: To improve the usability and formatting options within the time log section, implement a unified wiki toolbar for all custom text fields. This toolbar should provide users with the ability to apply text formatting (e.g., bold, italic, lists, links) to their entries in the timelog form, enhancing the overall readability and organization of logged information. Ensure compatibility with existing custom fields and maintain a consistent user interface design across the platform."
1517,tp,293,33330,Import of issue relations when imported from csv,"There is no ability to import Issue relations when importing from csv.

Perhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. ",220,28198,Support issue relations when importing issues,"As promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.

h3. Usage

The attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.

Within the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.

h3. Technical notes

Since issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.


h3. Additional considerations

Initially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type.",0.7793512612583998,0.95,"Both tickets essentially request the functionality to import issue relations when importing issues from a CSV file. Although the descriptions differ in the details of how the implementation might be approached, the core requirement is the same. Ticket2 even references Ticket1 and proposes a specific implementation, indicating a clear connection between the two tickets.","* Subject: Enhanced CSV Import Functionality for Issue Relations
    * Description: Implement the ability to import issue relations along with issues during CSV import. Users should be able to map a column in the CSV to each type of issue relation (e.g., parent, child, blocks, etc.). The import process will support designating existing issues by prefixing with '#', specifying another issue within the import file without the prefix, and for 'follows' and 'precedes' relations, allowing an optional delay (e.g., '#12 3d' denotes a relation to issue #12 with a 3-day delay). To accommodate this, the import process will be extended to include a second step for saving issue relations after the issues have been successfully saved. This enhancement will ensure consistency when re-importing data exported from Redmine, while introducing a structured and user-friendly way to manage issue relations during CSV imports."
1541,tp,294,33479,Make other destinations visible in the Redmine notification email,"Make other destinations visible in the Redmine notification email

h1. Proposal

In Redmine4.0, other destinations are no longer displayed in the notification email.

This is a side effect of the following changes in Redmine 4.0.
https://redmine.org/issues/26791

Depending on the contents of the ticket, it may be necessary to confirm who is notified.
For example, the response may change depending on whether the trouble ticket content is delivered to the CEO.

In Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.
In Redmine 4.0 or later, you can not understand without checking the ticket.

Also, the amount sent to the person who has been set to ""notify all"" in the personal settings cannot be confirmed on the ticket.

h1. Solution

There is no problem in sending individual emails.
The only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.

It seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.

h1. Supplement

In Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)
It seems that it was not recognized that there were cases where this was used as a substantial function.
(In some cases, it may be necessary to respond depending on the email notification destination)

You can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.

/* The following is a Japanese supplement */

Redmineの通知メールで、他の宛先を表示可能にする

■提案内容

Redmine4.0にて、通知メールで他の宛先が表示されなくなった。

これはRedmine4.0の下記変更による副作用である。
https://redmine.org/issues/26791

チケットの内容によっては、他の誰に通知されているか確認必要な場合もある。
例えば、トラブルのチケット内容がCEOに配信されているかどうかで、対応が変わる場合もある。

Redmine3.4の時は、通知メールのTo/Cc欄から、他の誰に送信されたか判ったが、
Redmine4.0以降ではチケットを確認しないと判らない。

また、個人設定で「すべて通知」にしている人への送信分は、チケット上から確認できない。

■解決策
メールの個別送信自体には問題ない。
同時通知先をメールから直接確認できなくなったのが不便なだけ。

個人ID単位の設定により、従来のTo/Cc(watch) をメールテキスト先頭に付けられれば良いと思われる。

■補足
Redmine3.Xでは、メール一括送信により他の送信先が判るという副作用があった。（4.0で仕様変更）
これを実質的な機能として利用している場合があったことが、認識されていなかったと思われる。
（メール通知先により対応必要なケースもある）

通知メール上のリンクからチケットを確認すれば判るが、件数が多ければ負担になる。

本チケットの対応は下記に記載します
https://redmine.tokyo/issues/1083
",262,30787,Other recipients are not listed in To field even if Setting.bcc_recipients is false,"In Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if ""Blind carbon copy recipients (bcc)"" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.

However, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.

Suppose the following issue:

* Assignee is foo@example.com
* Watcher is bar@example.com

When someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:

<pre>
To: foo@example.com, bar@example.com
</pre>

However, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:

(The email that foo@example.com received)
<pre>
To: foo@example.com
</pre>

(The email that bar@example.com received)
<pre>
To: bar@example.com
</pre>

",0.7376954475282491,0.95,"Both tickets describe the same issue introduced in Redmine 4.0, where the notification emails no longer display other recipients in the To/Cc fields, which was possible and useful in previous versions for understanding the notification distribution. The tickets highlight the impact on workflow, the need for visibility into who else is being notified, and suggest restoring the functionality to view concurrent notification destinations. The solutions proposed in both tickets are aligned, aiming to make the notification process more transparent again by reverting or adjusting how recipients are displayed in the emails.","** Subject: Display All Notification Recipients in Email Headers
    ** Description: In Redmine 4.0 and later versions, restore the ability to view all recipients of a notification email within the email headers, as was possible before the change introduced in Redmine 4.0 (referenced in Redmine issue #26791). This enhancement is crucial for users to ascertain the complete distribution list of a notification, affecting their response strategy based on who else is being informed, especially when dealing with sensitive issues or managing internal communications efficiently.

    Previously, with the ""Blind carbon copy recipients (bcc)"" setting disabled, all recipients were listed in the To field, enabling transparency and informed decision-making. However, the current behavior lists only the direct recipient's email address in the To field, regardless of the bcc_recipients setting, causing inconvenience and potential miscommunications.

    The solution entails modifying the email notification system to include all recipients in the email header when ""Blind carbon copy recipients"" is not enabled, resembling the format:
    
    ```
    To: user1@example.com, user2@example.com, ...
    ```
    
    This adjustment would not affect the individual delivery of emails but enhance situational awareness for each recipient regarding the broader communication scope. Additionally, provide an option for users to toggle this visibility feature on or off in their personal notification preferences to cater to varying needs across the organization."
1544,tp,295,33526,Add possibility to configure limit used to retrieve objects for an API response,"In file app/controllers/application_controller.rb:
<pre>
  # Returns offset and limit used to retrieve objects
  # for an API response based on offset, limit and page parameters
  def api_offset_and_limit(options=params)
    if options[:offset].present?
      offset = options[:offset].to_i
      if offset < 0
        offset = 0
      end
    end
    limit = options[:limit].to_i
    if limit < 1
      limit = 25
    elsif limit > 100
      limit = 100
    end
    if offset.nil? && options[:page].present?
      offset = (options[:page].to_i - 1) * limit
      offset = 0 if offset < 0
    end
    offset ||= 0
    [offset, limit]
  end
</pre>
The value of the limit is hardcoded to 100.
It's very long to get for example 20000 objects - 200 requests in ~3 minutes. But it's faster with hardcoded limit 10000 - ~20 seconds only.

Please, add possibility to configure limit used to retrieve objects for an API response.

Thanks!",89,16069,Allow configuration of API limit instead of hardcoding at 100,"The below tested patch makes the previously harcoded limit of 100 items in a RESTful API response configurable in the Administration GUI. The default value is still 100. This is based on 2.4.1.stable.

This is quite useful since it is nice and simple to just get the full response in a single page rather than having to traverse pagination, and a limit of a bit more than 100 is still very performant for many sites -- the limit beyond which performance starts to degrade really depends on the particular site's usage, so should be controllable by the local administrator.

<pre><code class=""diff"">
Index: app/controllers/application_controller.rb
===================================================================
--- app/controllers/application_controller.rb       (.../trunk/app) (revision 13385)
+++ app/controllers/application_controller.rb       (.../branches/code-8112/app)    (revision 13389)
@@ -519,8 +519,8 @@
     limit = options[:limit].to_i
     if limit < 1
       limit = 25
-    elsif limit > 100
-      limit = 100
+    elsif limit > Setting.api_limit.to_i
+      limit = Setting.api_limit.to_i
     end
     if offset.nil? && options[:page].present?
       offset = (options[:page].to_i - 1) * limit
Index: app/views/settings/_general.html.erb
===================================================================
--- app/views/settings/_general.html.erb    (.../trunk/app) (revision 13385)
+++ app/views/settings/_general.html.erb    (.../branches/code-8112/app)    (revision 13389)
@@ -24,6 +24,8 @@
 
 <p><%= setting_select :wiki_compression, [['Gzip', 'gzip']], :blank => :label_none %></p>
 
+<p><%= setting_text_field :api_limit, :size => 6 %></p>
+
 <p><%= setting_text_field :feeds_limit, :size => 6 %></p>
 
 <p><%= setting_text_field :file_max_size_displayed, :size => 6 %> <%= l(:""number.human.storage_units.units.kb"") %></p>
Index: config/settings.yml
===================================================================
--- config/settings.yml        (revision 13387)
+++ config/settings.yml        (revision 13389)
@@ -73,6 +73,9 @@
   default: localhost:3000
 protocol:
   default: http
+api_limit:
+  format: int
+  default: 100
 feeds_limit:
   format: int
   default: 15
Index: config/locales/en.yml
===================================================================
--- config/locales/en.yml      (revision 13387)
+++ config/locales/en.yml      (revision 13389)
@@ -352,6 +352,7 @@
   setting_host_name: Host name and path
   setting_text_formatting: Text formatting
   setting_wiki_compression: Wiki history compression
+  setting_api_limit: Maximum number of items returned in a JSON/XML API response
   setting_feeds_limit: Maximum number of items in Atom feeds
   setting_default_projects_public: New projects are public by default
   setting_autofetch_changesets: Fetch commits automatically

</code></pre>",0.8153995455949984,0.95,"Both tickets request the same core functionality, which is to make the API response limit configurable instead of it being hardcoded to 100. Ticket1 describes the issue and proposes the need for configurability, while Ticket2 provides a detailed patch demonstrating how the configuration can be implemented, including updates to the GUI, code changes, and localization additions. Given the substantial overlap and the fact that Ticket2 essentially offers a solution for the problem posed in Ticket1, these tickets should be considered duplicates.","Since the probability of duplication is high, a combined requirement would be:

**Subject**: Implement Configurable Limit for API Response

**Description**: Enhance the application to allow the API response limit to be configured dynamically through the Administration GUI. Currently, the limit is hardcoded to 100 items, which can be inefficient for users needing larger data sets. By introducing a configurable limit, administrators can optimize the retrieval of objects based on their specific performance requirements and usage patterns. The change should include updating the `api_offset_and_limit` method in `app/controllers/application_controller.rb` to utilize a new setting, adding a text field for this setting in the GUI (`app/views/settings/_general.html.erb`), updating the `config/settings.yml` to include the new setting with a default value of 100, and ensuring proper localization adjustments are made in `config/locales/en.yml`. This modification will provide flexibility and improved performance management for API responses."
1545,fp,295,33526,Add possibility to configure limit used to retrieve objects for an API response,"In file app/controllers/application_controller.rb:
<pre>
  # Returns offset and limit used to retrieve objects
  # for an API response based on offset, limit and page parameters
  def api_offset_and_limit(options=params)
    if options[:offset].present?
      offset = options[:offset].to_i
      if offset < 0
        offset = 0
      end
    end
    limit = options[:limit].to_i
    if limit < 1
      limit = 25
    elsif limit > 100
      limit = 100
    end
    if offset.nil? && options[:page].present?
      offset = (options[:page].to_i - 1) * limit
      offset = 0 if offset < 0
    end
    offset ||= 0
    [offset, limit]
  end
</pre>
The value of the limit is hardcoded to 100.
It's very long to get for example 20000 objects - 200 requests in ~3 minutes. But it's faster with hardcoded limit 10000 - ~20 seconds only.

Please, add possibility to configure limit used to retrieve objects for an API response.

Thanks!",186,26553,Overly restricted number of ReST results,"Currently, ReST queries are limited to 100 elements.

This makes it impossible to, e.g., retrieve all users in one query.

Given today's computing power, please check whether the limit can be lifted.

A proposal is given in the attached patch.",0.5054080064125127,0.9,"Both tickets address the limitation of the number of items returned in an API response. Although the specific contexts (one refers to ""objects"" and the other to ""ReST results"") and the current hardcoded limits differ slightly (100 vs. 100 elements), the essence of the requests is the same: to increase flexibility by allowing configuration or removal of the limit to improve efficiency when fetching large datasets. The attachment in Ticket2 suggests a solution has already been proposed, which could be incorporated into a combined requirement.","* Subject: Improve API Response Limit Flexibility for Enhanced Data Retrieval
    * Description: Enhance the API's response capability by introducing a configurable limit for the number of objects/results returned in a single request. This will address instances where users need to fetch large datasets efficiently, such as retrieving all users in a single query. The current hard-coded limit, which varies between endpoints but is typically set at 100, poses restrictions and inefficiencies, especially for larger data retrieval tasks. Implement a solution that allows users to specify their desired limit within reasonable server performance constraints, potentially with a maximum threshold to prevent overload, thus improving the overall usability and performance of the API."
1546,tp,296,33612,Expose repository version via REST API,"For Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.

Or is there a more convenient workaround than the one mentioned above?",29,5901,REST API to expose the Redmine version,"After reading Alexey Skor's forum post about the ""API versions"":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.

That way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).

Thoughts?",0.8560379868119993,0.95,"Both tickets essentially request the same feature, which is to add a REST API endpoint to retrieve the Redmine server's version information. This would facilitate better integration and version compatibility checks for third-party applications interacting with Redmine. The descriptions differ slightly in their rationale but converge on the core need for a version-exposing API.","** Subject: Add REST API endpoint for retrieving Redmine server version
    ** Description: To enhance compatibility management for third-party applications and streamline the process of identifying the Redmine server version, implement a new REST API endpoint. This endpoint should provide easy access to the server's version details, allowing clients to determine compatibility with specific API features and avoid the need for scraping version information from web pages. This addition will facilitate smoother integration and ensure that clients can efficiently adapt to the capabilities of different Redmine server versions."
1550,fp,296,33612,Expose repository version via REST API,"For Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.

Or is there a more convenient workaround than the one mentioned above?",174,26165,API for Redmine configuration & information,"Hello,
Is it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the ""settings"" page)?

For instance, I have to code an node app differently depending on the version of the Redmine instance.",0.7260561218448189,0.9,"Both tickets request for enhancements to the Redmine API to provide access to server configuration and version information. While Ticket1 specifically asks for exposing the repository version via REST API, Ticket2 broadens the scope by asking for an API to manage both configuration and general information, which implicitly includes the version. The core intent behind both tickets is similar, hence they can be considered duplicates with a focus on expanding the API to cover all requested details.","** Subject: Enhanced Redmine Configuration & Version Information API
    ** Description: Develop an extended REST API endpoint for Redmine that facilitates the retrieval of comprehensive server information, including but not limited to the Redmine version, running environment details, Source Code Management (SCM) integration specifics, installed plugins, and current system settings. This API should also support the read and write operations for modifying select configuration settings, akin to those found on the ""settings"" page, to enable seamless integration and automation for third-party applications and services."
1553,tp,297,33672,Project Responsible Field,"Hello,

I'll try to explain the feature with my real life example. 
One day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in ""My Page"", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).
So, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.

Thanks!
BR,
Jean",62,11294,Option to choose the Issues owner on copy project ,"We use some projects like a template to start new client project.
With this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.
The problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.
This two options have their problems.
My suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project.",0.6993101759338227,0.95,"Both tickets describe a very similar issue regarding project duplication and the need to assign project responsibility or issue ownership to a specific user during the duplication process. The core requirement in both cases is to enhance the project duplication feature to allow the selection of a project负责人 (responsible person) or issue owner, ensuring that the original submitter does not inadvertently become the default owner of all issues in the new project. The slight differences in wording and examples provided do not change the essence of the requested feature.","* Subject: Enhanced Project Duplication with Selectable Owner Assignment
    * Description: To streamline the process of creating projects based on templates, implement an enhancement to the project duplication feature. This enhancement will include a user interface element, such as a dropdown or checkbox, within the project duplication window. It will allow the user to specify a different project responsible or issue owner for the newly created project, distinct from the user performing the duplication. This addition will prevent unintended email notifications and project issue assignments to the duplicator, ensuring that the selected individual becomes responsible for managing the new project's issues and overall oversight. The feature should store this assignment information as part of the project settings for future reference and ease of management."
1569,tp,298,33791,"""First Name"" and ""Last Name"" as mandatory fields?","Is there a reason to have the ""First Name"" and ""Last Name"" as mandatory fields for registration ?
IMHO is quite privacy unfriendly
such personal information is not necessary to contribute to a project

Would be nice to make these fields not mandatory by default.",256,29757,"Make ""First name"" and ""Last name"" optional (not required) in user's settings","Reasoning:
* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.
* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.
* there is already option in Redmine to set *user display format to login only* (instead of first/last name).
* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.
* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595

I propose to either:
# Make first and last name optional
or
# Add administrative setting to control whether first and last names are optional or required.",0.6161409249026241,0.95,"Both tickets essentially request the same core change: making the ""First Name"" and ""Last Name"" fields optional during user registration or in user settings. They both cite privacy concerns and the unnecessary nature of such personal information for contribution to projects, with additional context provided in Ticket 2. The slight difference lies in Ticket 2 suggesting an additional option for an admin setting to control this field requirement, which can be seen as an enhancement to the primary suggestion. Given the substantial overlap, duplication seems appropriate.","* Subject: Enhance Privacy by Making ""First Name"" and ""Last Name"" Fields Optional
    * Description: To enhance user privacy and accommodate various community practices, modify the registration and user profile settings to allow ""First Name"" and ""Last Name"" fields to be optional. Implement an administrative setting that enables the site administrator to configure these fields as either optional or required, catering to different installation needs. This adjustment addresses privacy concerns, supports communities that use single names, and aligns with platforms where a login alone suffices for identification, akin to Github or Twitter. It also helps avoid fake data entry and potential legal complexities associated with collecting personal data unnecessarily."
1627,fp,301,34062,Upgrade Rails to 5.2.4.5,"CVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)

It would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use.",264,31112,Update to Rails 5.2.3,"Rails 5.2.3 has been released on March 28, 2019.
https://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/",0.6426610878286314,0.75,"The two tickets are related to updating Rails but suggest different versions (5.2.4.5 and 5.2.3). Given that the first ticket mentions a security concern (CVE-2020-8165) and the urgency to upgrade due to server shutdown, it's crucial to address the latest version mentioned (5.2.4.5) which likely includes the fix for the CVE. The second ticket is outdated by the time consideration of the first. Thus, they can be combined with priority given to the more recent and security-driven update.","* Subject: Upgrade Rails to the Latest Secure Version
    * Description: Upgrade Rails to the latest secure version (currently 5.2.4.5) to mitigate security vulnerabilities such as CVE-2020-8165 and ensure compatibility with the most recent Ruby versions. This update is imperative as servers running older versions have experienced disruptions requiring them to be taken offline for testing and security enhancements."
1630,tp,301,34062,Upgrade Rails to 5.2.4.5,"CVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)

It would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use.",300,33906,Upgrade Rails to 5.2.4.5,"As released on May 18, 2020 with the following ""announcement"":https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/:
> Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.
> 
> Both releases contain the following fixes:
> 
> [CVE-2020-8162] Circumvention of file size limits in ActiveStorage
> [CVE-2020-8164] Possible Strong Parameters Bypass in ActionPack
> [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore
> [CVE-2020-8166] Ability to forge per-form CSRF tokens given a global CSRF token
> [CVE-2020-8167] CSRF Vulnerability in rails-ujs

Note: the fix for CVE-2020-8167 might also result in a requirement to manually update the bundled @rails-ujs@ code.

I'll set this issue to _private_ given the possible implications.",0.73185028962389,1.0,"The two tickets are identical in their subject and description, both requesting an upgrade to Rails version 5.2.4.5 due to security concerns mentioned by referencing CVEs. Since the descriptions overlap completely and address the same immediate need, there is no value in keeping them separate. They should be treated as duplicates to streamline the project's task management.","Not applicable since the requirements are already identical, but for the sake of formatting:

    ** Subject: Upgrade Rails to 5.2.4.5 addressing Multiple Security Vulnerabilities
    
    ** Description: Upgrade the application's Rails framework to version 5.2.4.5 to mitigate recently disclosed security vulnerabilities, including CVE-2020-8165, CVE-2020-8162, CVE-2020-8164, CVE-2020-8166, and potential implications requiring manual update of @rails-ujs@ code due to CVE-2020-8167. This upgrade is critical to ensure the application's resilience against known exploits and maintain secure operations."
1631,tp,302,34566,Always trim title,"Currently, it is possible to re-title an issue from ""myissue"" to ""myissue "". This is reflected/shown in the history as well. In practice, it makes no sense to allow leading and trailing whitespace in ticket titles. Therefore, I recommend to always trim the title field (and probably other fields as well) upon input, so that it doesnt even make it into the database.",54,9588,Text fields used for data entry should trim whitespace.,"For example, in the password recovery field for email address, if the address was copied and pasted with leading or trailing whitespace it should be trimmed off before use. Trying to send email to ` joe@blow.com ' will fail miserably without the user knowing.",0.6090649468743468,0.9,"Both requirements address the issue of trimming whitespace from input fields to improve data handling and user experience. Ticket1 specifically mentions the ticket title field, while Ticket2 extends the scope to all text fields used for data entry, providing an example with the password recovery email field. Given the overlap in the core issue and the broader application suggested in Ticket2, it's highly likely these tickets can be consolidated, especially since implementing a solution for one would naturally encompass the other.","* Subject: Implement global trimming of leading and trailing whitespace in text input fields
    * Description: To enhance data accuracy and user experience across the platform, implement a system-wide functionality that automatically trims leading and trailing whitespace from all text input fields, including but not limited to ticket titles, email addresses in password recovery, and other user-inputted text data. This will prevent invalid entries or misinterpretation of data due to inadvertent copying and pasting of extra spaces, ensuring consistent handling of information throughout the system."
1636,fp,303,34583,Group by parent project,"How do I export a list which includes the parent project name, or group by the parent project?",27,5325,Add Parent Task to 'Group Results By' drop down,"I just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.

To replicate go to a project and choose ""Issues"" from the top menu.  Choose the ""options"" section and then open up the drop down menu for ""group results by"".  I have attached a screenshot.


---------------------
server info
---------------------
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]
Rails 2.3.5
mysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1
redmine Revision: 3671
",0.5432752662890341,0.9,"Both tickets are related to enhancing the grouping functionality in Redmine to include parent entities—either projects or tasks. This indicates a common goal of improving hierarchical organization and reporting within the system. The difference lies in the specific level of grouping requested (parent project vs. parent task), but the underlying requirement to extend the ""Group Results By"" feature is shared.","* Subject: Enhance Grouping Functionality to Include Parent Entities
    * Description: Users need the ability to better organize and analyze their tasks and issues by incorporating parent entities into the ""Group Results By"" feature. This should include both the option to group by the parent project name, providing an overview of tasks across child projects, as well as the ability to group by parent tasks, allowing for detailed tracking of subtasks within a project. The enhancement will facilitate more efficient management and reporting on hierarchical data structures within Redmine."
1642,fp,303,34583,Group by parent project,"How do I export a list which includes the parent project name, or group by the parent project?",147,24942,"Additional ""Group by results"" option for parent task","The way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.

We then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.

To view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.

To improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.",0.5910527302965494,0.8,"Both tickets revolve around the idea of grouping or organizing items based on their parent entity—either a parent project or a parent task. Although the context slightly differs (one focusing on exporting with parent project information, the other on improving UI by grouping results by parent task), the underlying need for a hierarchical view of data is shared. Thus, they can be considered very similar with a focus on enhancing the grouping functionality to include parent elements.","* Subject: Enhanced Grouping Functionality for Parent Entities
    * Description: Improve the system's export and display capabilities to support grouping by both parent projects and parent tasks. Users should be able to generate lists that include parent entity names (project or task) and have the option to group search results hierarchically either by parent project or parent task. This will facilitate better organization and a more streamlined user experience when navigating through structured data, allowing for a summary view of all sub-items under their respective parent entities without the need for additional clicks or searches."
1645,fp,303,34583,Group by parent project,"How do I export a list which includes the parent project name, or group by the parent project?",251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,0.5922745569312508,0.9,"Both requirements revolve around the need to group items by their parent project or issue. Although the context slightly differs, with Ticket1 focusing on exporting a list with parent project names and Ticket2 specifically asking for a UI feature to group issues by their parent in a tab, the underlying intent is very similar. Therefore, it's recommended to consolidate these into a single requirement to avoid redundancy and streamline development efforts.","* Subject: Enhance Grouping Functionality by Parent Project/Issue
    * Description: Improve the system to enable users to both export lists and view sections/tabs with items grouped by their respective parent projects or issues. This will include adding the parent project name as an exportable field and introducing a ""Parent"" option within the grouping choices within the Issues section/tab for better organization and hierarchical visibility."
1727,tp,311,34766,Better error message when no API format is recognised,"At Planio sometimes see users trying to make API requests using the HTTP @Accept: application/json@ header but forgetting to add @.json@ at the end of the path. This currently leads to a @raise@ with a @500 Internal Server Error@.

We propose the following patch to correctly return a @406 Not Acceptable@ (this is the same HTTP status Rails uses when the passed @Accept@ HTTP header can not be served), log the error instead of @raise@-ing, and returning a helpful message in the HTTP response.


<pre><code class=""diff"">
diff --git a/lib/redmine/views/builders.rb b/lib/redmine/views/builders.rb
index 653c1bd6b..3c977df67 100644
--- a/lib/redmine/views/builders.rb
+++ b/lib/redmine/views/builders.rb
@@ -30,7 +30,9 @@ module Redmine
             when 'xml',  :xml  then Builders::Xml.new(request, response)
             when 'json', :json then Builders::Json.new(request, response)
             else
-              raise ""No builder for format #{format}""
+              Rails.logger.error ""No builder for format #{format.inspect}""
+              response.status = 406
+              return ""We couldn't handle your request, sorry. If you were trying to access the API, make sure to append .json or .xml to your request URL.\n""
             end
           if block_given?
             yield(builder)
</code></pre>",194,26709,Use correct http status codes,"1/ redmine ignores accept headers and jquery dataType attribute

The Accept request-header field can be used to specify certain media types which are acceptable for the response.

If no Accept header field is present, then it is assumed that the client accepts all media types. If an Accept header field is present, and if the server cannot send a response which is acceptable according to the combined Accept field value, then the server SHOULD send a 406 (not acceptable) response.

http://api.jquery.com/jQuery.ajax/

The type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback)

examples:
<pre>
curl -v -H http://demo.redmine.org/issues.json
-> 200 + json OK!

but
curl -v -H ""Accept: application/json"" http://demo.redmine.org/issues
-> 500 no builder for format

expected (with patch)
-> 200 + json output
</pre>

in some cases html is returned even if json was requested

2/ 406 error raises exception
<pre>
curl -v http://demo.redmine.org/issues.xxx
-> 406 + exception ActionController::UnknownFormat

expected (with patch)
-> 406 no exception
</pre>

3/ csrf protection - useful to avoid exceptions because of site-scanner bots
<pre>
curl -v -H ""Accept: text/javascript"" http://demo.redmine.org/issues/new
-> 422 + exception ActionController::InvalidCrossOriginRequest: Security warning: an embedded <script> tag on another site requested protected JavaScript.

expected
-> 400 - no exception
</pre>",0.6293196426014561,0.8,"Both tickets address issues related to HTTP status codes and improving error handling in the Redmine API. Ticket1 focuses on returning a more appropriate 406 status when the API format isn't recognized, while Ticket2 encompasses multiple points including the misuse of accept headers, incorrect handling of 406 errors, and CSRF protection. Although they aren't identical, they overlap significantly in the context of improving API response handling.","* Subject: Enhance API Error Handling and Response Codes
    * Description: Improve the Redmine API's error responses and adherence to proper HTTP status codes. This includes:
        1. Returning a `406 Not Acceptable` status code when the requested API format doesn't match any available formats, accompanied by a helpful error message suggesting the addition of `.json` or `.xml` to the URL.
        2. Ensuring the API respects the `Accept` header and jQuery's `dataType` attribute, providing the expected content type or a `406 Not Acceptable` if unable to fulfill the request.
        3. Preventing exceptions for non-existent endpoints by gracefully returning a `404 Not Found` without raising an internal server error.
        4. Implementing CSRF protection measures to return a `400 Bad Request` instead of raising exceptions when inappropriate `Accept` headers like `text/javascript` are used, enhancing security against potential site-scanner bot attacks."
1732,tp,312,34787,"Ability to set default value for  ""I don't want to be notified of changes that I make myself""","Hello,

I search many possibilites to change the default value of no_self_notified when creating a new user.
Actually default is true.

line 54 to 56 in /app/models/user_preference.rb

<pre><code class=""ruby"">
unless attributes && attributes.key?(:no_self_notified)
  self.no_self_notified = true
end
</code></pre>

might be :

<pre><code class=""ruby"">
unless attributes && attributes.key?(:no_self_notified)
  self.no_self_notified = Setting.default_users_no_self_notified
end
</code></pre>

and add in config/settings.yml

<pre><code class=""yaml"">
default_users_no_self_notified:
  default: true
</code></pre>

With this change, we can modify the default value without changing source code of Redmine.

this may be implemented in a future release ?

Regards, 

Pierre",136,24629,"Add option to decide default value for ""I don't want to be notified of changes that I make myself""","It looks to me that the option *""I don't want to be notified of changes that I make myself""* is set by default, and there is no way to revert this.

This is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.

Please add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script.",0.7226474005425584,0.9,"Both tickets essentially request the ability to customize the default setting for the ""I don't want to be notified of changes that I make myself"" option when creating new users. Ticket1 proposes modifying the codebase to use a setting from the configuration file, while Ticket2 suggests adding an option in the settings UI or as a parameter in the user creation script. The core intention behind both tickets is the same, hence they can be considered duplicates with a focus on implementing a more flexible default notification behavior for new users.","* Subject: Customize Default Notification Behavior for New Users
    * Description: Implement a feature that allows administrators to set the default value for the notification preference ""I don't want to be notified of changes that I make myself"" when new users are created. This should include:
        - An option in the Settings -> Authentication -> Default Values for New Users section to toggle this preference.
        - A configuration parameter in the `config/settings.yml` file named `default_users_no_self_notified` with a default value of `true`, allowing customization without modifying the source code directly.
        - Compatibility with automated user creation processes, such as integration with the `rdm-mailhandler.rb` script, ensuring the default setting is applied appropriately during automated user setup.
    This enhancement will provide administrators with greater control over user notification preferences and streamline the setup process for both manually and automatically created users."
1738,fp,313,34793,Filter OR / AND for issues and repeated columns in filter settings,"1. For what:
I can't do filter now about ""this version or that version"", ""this dates or that dates"", ""this version and status or that version and status""

2. What need to do:
In filter for task add:
* 2.1. Ability to use column many times
* 2.2. Blocks AND / OR

PS Cool, if i could filter tags with this logic",6,1140,Filtering using more than one instance of each field,"I would like to filter issues using more than one instance of each field.
Example:
issues with subject containing ""email"" but not containing ""server""...",0.6945810876247269,0.9,"Both tickets are requesting enhancements to the filtering system, specifically the ability to use multiple instances of the same filter field with logical operators (AND/OR) to create more complex queries. Ticket1 provides a more detailed explanation with examples, while Ticket2 is more concise but the core requirement matches. The similarity is high enough to suggest duplication.","* Subject: Enhanced Filter Logic with Multiple Field Instances and Logical Operators
    * Description: Enhance the filtering functionality to allow users to apply multiple instances of the same filter field within a single query, enabling advanced search combinations using logical AND/OR operators. This improvement will support complex search scenarios such as filtering tasks by ""this version or that version,"" ""this date or that date,"" and combining conditions like ""this version and status or that version and status."" Additionally, it will extend to filtering by tags and other fields, such as subjects that contain specific keywords while excluding others, thereby providing a more powerful and flexible filtering experience."
1739,tp,313,34793,Filter OR / AND for issues and repeated columns in filter settings,"1. For what:
I can't do filter now about ""this version or that version"", ""this dates or that dates"", ""this version and status or that version and status""

2. What need to do:
In filter for task add:
* 2.1. Ability to use column many times
* 2.2. Blocks AND / OR

PS Cool, if i could filter tags with this logic",25,4939,List of tasks filtered as OR and not AND,"Hello

Up to now in the list of task you can filter upon some values but the list of filters are 
List of tasks that has
filter1=value1 AND filter2=value2 AND filter3=value3

I think it could be interesting to have the possibility of
List of tasks that has
filter1=value1 OR filter2=value2 OR  filter3=value3

Do you think it is possible? thank you",0.7582884059380933,0.9,"Both tickets are requesting enhancements to the filtering system, specifically the ability to use logical operators (AND/OR) in the filter settings to better refine search results. Ticket1 provides a more comprehensive description, mentioning the need for repeating columns in filters and using OR/AND logic, while Ticket2 focuses solely on the need to switch from an AND to an OR operation in task filtering. The core issue overlap justifies considering them duplicates, with Ticket1 being more comprehensive.","* Subject: Enhanced Filter Logic with OR/AND Operators and Repeated Columns
    * Description: Improve the filter functionality to support advanced logical combinations when searching for tasks. This includes enabling users to:
        1. Utilize column filters multiple times within a single query for more nuanced searches.
        2. Apply both ""AND"" and ""OR"" logical operators between filters to find tasks meeting any combination of criteria (e.g., ""this version OR that version"", ""this date AND status OR that date AND status"").
        3. Extend this enhanced filtering capability to include tags, allowing for complex tag-based queries using OR/AND logic.
    This update aims to significantly enhance the flexibility and efficiency of task filtering within the platform."
1744,fp,313,34793,Filter OR / AND for issues and repeated columns in filter settings,"1. For what:
I can't do filter now about ""this version or that version"", ""this dates or that dates"", ""this version and status or that version and status""

2. What need to do:
In filter for task add:
* 2.1. Ability to use column many times
* 2.2. Blocks AND / OR

PS Cool, if i could filter tags with this logic",106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",0.771453938346088,0.95,"Both tickets essentially request the addition of advanced filtering options, specifically the inclusion of logical operators such as ""AND"" and ""OR"" to better refine search queries. Ticket1 provides a more detailed breakdown with examples and an additional ask for using columns multiple times in filters, while Ticket2 is more concise but conveys the same core requirement for logical operators in the issue filter menu. The overlap in the primary request justifies duplication, and the extra details from Ticket1 can be incorporated into a unified requirement.","* Subject: Enhanced Issue Filtering with Logical Operators and Repeated Columns
    * Description: Improve the issue filtering functionality by implementing logical operators (""AND"", ""OR"") in the filter settings to facilitate complex queries such as combining multiple versions, dates, statuses, or tags with either 'and' or 'or' logic. Additionally, enable the use of filter columns multiple times within a single filter to allow for more granular searches, enhancing the flexibility and precision of issue tracking and management."
1745,fp,313,34793,Filter OR / AND for issues and repeated columns in filter settings,"1. For what:
I can't do filter now about ""this version or that version"", ""this dates or that dates"", ""this version and status or that version and status""

2. What need to do:
In filter for task add:
* 2.1. Ability to use column many times
* 2.2. Blocks AND / OR

PS Cool, if i could filter tags with this logic",108,23216,"Issues List, Enhanced Filtering - Allowing Multiple Queries & ""OR""-type constraints","Some of our biggest ""problems"" that causes us to look elsewhere for a solution are:

* there is no way to use an ""OR"" clause.
* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).

-------

One proposed solution:
I think one of the ""more simple"" methods of adding this feature would be to add a way to define multiple sets of ""queries""/filters in one search:

Ex. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.
You define your first ""query""/filter by filtering for Tracker: ""A"" and Assigned to: ""Paul"". After that, you click a ""+"" icon below the filter/options that adds another set of filter/options and you can define your second ""query""/filter by setting Tracker: ""B"" and Assigned to: ""John"". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.

This could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.

----",0.6814502305794456,0.9,"Both tickets describe the need for an enhanced filtering system within an issue tracking system, with a particular emphasis on the ability to use ""AND"" and ""OR"" logic to combine multiple conditions across different fields (such as versions, dates, statuses, assignees, and tags). Ticket1 specifically asks for the repetition of columns in filter settings and direct implementation of AND/OR blocks, while Ticket2 proposes a more detailed mechanism for creating multiple filter sets that can be combined with OR logic. Given the substantial overlap in the core functionality requested, it's highly likely that addressing one ticket would satisfy the needs of the other.","* Subject: Enhanced Filter Logic with Multiple Conditions and AND/OR Operations
    * Description: Implement an advanced filtering system within the Issues List to allow users to create complex queries combining multiple conditions across various issue attributes. This will include:

        1. **Repetitive Column Usage**: Users can utilize the same filter column multiple times in a single query to set different criteria (e.g., filtering by multiple versions or assignees).
        
        2. **AND/OR Logic Blocks**: Introduce options to apply ""AND"" and ""OR"" operators between filter sets, enabling queries like ""Tracker A AND Status X OR Tracker B AND Status Y"".
        
        3. **Multiple Query Sets**: Add functionality to create and combine multiple distinct filter sets within a single search request. Users can define each set with its own combination of filters (e.g., Tracker A assigned to Paul) and then combine these sets using OR logic to retrieve a unified result set (e.g., adding another set for Tracker B assigned to John).
        
        4. **Combined Results Display**: The system will union the results from all applied query sets, presenting them in a cohesive list view, sharing common display columns for easy comparison between issues.

This consolidated requirement encapsulates the primary asks from both tickets, aiming to significantly enhance the filtering capabilities and flexibility for managing and analyzing issues."
1776,fp,316,34798,Show project tree instead of subprojects in the project selector when you create a new issue ,"In #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.

In this way, you will be able to select also a parent instead of only children.

",188,26639,Enabling creating issue within the project regarding the subproject,"Hey,

Im managing many projects, which do not have trackers as they are something general. 
Under each project I have a lot of subprojects, in which I do have trackers for issues creation. 
I would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject
Is it possible to create such option? I could not find any info regarding it. 

Thanks ",0.639588743266272,0.85,Both tickets revolve around the idea of improving the process of creating issues in relation to subprojects. Ticket1 suggests displaying the project tree in the project selector to facilitate selecting both parent and child projects. Ticket2 requests the ability to create issues directly from the parent project while ensuring those issues are associated with the correct subproject. The underlying intention of enhancing issue creation within the context of a project's substructure overlaps significantly.,"* Subject: Enhance Project Selector for Issue Creation with Subproject Support
    * Description: Improve the new issue creation interface to display a project tree hierarchy in the project selector. This enhancement will enable users to seamlessly choose both parent projects and their respective subprojects directly from the parent project view. Issues created from the parent level must be automatically affiliated with the selected subproject, streamlining the issue creation process for users managing multiple projects with nested subproject structures. This update will eliminate the need to navigate into each subproject individually for issue creation, thereby increasing efficiency for project managers overseeing general projects with tracker-enabled subprojects."
1808,tp,319,34845,Configuration of display of subtickets,"We use grouping of tickets a lot for semantic organization. That means that we have kind of group tickets that contain subtickets (e.g. a bug is a subticket of the feature group ticket it affects). The list of subtickets displayed may be quite large, scrolling is needed. Because of that we would like to get the possibility to configure the columns of the subticket listing.

Easy:
- Same columns as configured as default for ticket searches

Luxury:
- Configuration per project or even per ticket.",63,11969,Subtask display fields,"I would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.

Like estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.

So instead of
|\6.Issue hierarchy (Add a subtask) |
|Bug|#400:|\4.Parent Issue|
|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|>New|Bug|#402:|Child Issue 2|New||
|>New|Bug|#403:|Child Issue 3|New||
|>New|Bug|#404:|Child Issue 4|New||
|>New|Bug|#404:|Child Issue 5|New||
|>New|Bug|#404:|Child Issue 6|New||

You would see
|\8.Issue hierarchy (Add a subtask) |
|Bug|#400:|\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|
|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||
|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||
|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||
|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||
|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||",0.5337860099863978,0.9,"Both tickets are requesting customization of the display of sub-tickets within their respective issue tracking systems. While the descriptions vary slightly in detail and the specific fields mentioned, the core requirement is fundamentally the same: to allow users to configure which columns are visible in the sub-task or sub-ticket listings. Ticket1 discusses this in terms of general column configuration with a luxury option for project- or ticket-level settings, whereas Ticket2 focuses on displaying specific fields like estimated time, start date, and end date with a simpler global configuration approach. Given the substantial overlap in the desired outcome, it's recommended to consolidate these into a single requirement.","* Subject: Customizable Sub-Ticket Display Fields
    * Description: Enhance the issue tracking system to allow users to customize the display of sub-tickets within the issue hierarchy view. This enhancement will provide the flexibility to select which columns are visible, including but not limited to default ticket search configurations. Users should have the option to configure these fields globally with a simple checkbox interface for common fields such as Estimated Time, Start Date, End Date, and Status. Additionally, consider a more advanced setting that permits project-specific or even ticket-level configurations to cater to diverse organizational needs and semantic issue organization. This will improve clarity and efficiency when managing groups of tickets or subtickets associated with parent issues."
1813,fp,320,34857,"Add total estimated hours, spent hours, total spent hours for issues to issue list API","The issue index API currently does not return total estimated hours, spent hours and total spent hours, although the issue show API does show those fields.",97,21450,Totals for Total estimated time and Total spent time,"There are missing totals for _Total estimated time_ and _Total spent time_.

The totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details.",0.592663540947743,0.85,"Both requirements revolve around enhancing the API to include total estimated hours and spent hours. While Ticket1 specifically mentions the issue list API and Ticket2 refers to a more general need for totals in an unspecified context that could imply a summary view or enhancement to the existing APIs, the core intent overlaps significantly. The descriptions can be consolidated to address the common goal of providing comprehensive time tracking information across issues.","* Subject: Enhance APIs to Include Total Estimated & Spent Hours for Issues Overview
    * Description: Update the issue list API to include total estimated hours, spent hours, and total spent hours for each issue, enabling better project overviews. Additionally, introduce a feature to calculate and display aggregate totals for _Total Estimated Time_ and _Total Spent Time_ across selected or all issues, facilitating high-level summaries without requiring drilling down into individual issue details. This will enhance the API's capability to support project management activities by offering summarized time tracking data."
-1,fn-no-query,322,34881,Activity page block,"Hi all, 

I want to prevent users other than the administrator account from seeing the activity section? how can I do it?

regards...",15,2585,"Add Modules to hide/display Overview, Activity, Roadmap","When opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:

* Overview
* Activity
* Roadmap

Could tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..).",0.48577458756396036,-1,,
1829,fp,323,34912,Save ticket by pressing keyboard key,"From other systems like Mediawiki I know the feature that pressing ALT+S saves all changes. Unfortunately the more obvious CTRL+S is used by the browser itself. It would be very helpful to have the same in Redmine as an abreviation for scrolling down and pressing the button ""Anlegen"" (German version, Englisch ""Create""?).",1,449,Keyboard shortcuts,"It would be so convinient and productive if redMine supports keyboard shortcuts like Trac or some nifty web apps.
For example,  press Ctrl+R to preview, Ctrl+S to submit, Ctrl+/ to enter search text, ...

To support above, we would only need to add ""accesskey"" attribute to elements (like input, a).

Thanks,",0.705194556091997,0.9,"Both tickets request the implementation of keyboard shortcuts to improve efficiency when using the Redmine platform. Although Ticket1 specifically asks for the ALT+S (or potentially CTRL+S) shortcut to save changes, and Ticket2 mentions a broader range of shortcuts including CTRL+S to submit, the core intention of both tickets overlaps significantly. The implementation of one would likely address the needs of the other. Therefore, it's advisable to consolidate these into a single requirement.","* Subject: Implement Enhanced Keyboard Shortcuts for Efficiency
    * Description: Enhance Redmine's user experience by introducing a comprehensive set of keyboard shortcuts akin to those found in systems like Mediawiki and Trac. This should include, but not be limited to, shortcuts such as ALT+S or CTRL+S to save changes (depending on browser compatibility), CTRL+R to preview, CTRL+/ to initiate a search, and others. By adding ""accesskey"" attributes to relevant elements, this update will streamline workflow and increase productivity for users. Ensure the feature supports both English and German interfaces, with ""Anlegen"" (German for ""Create"") being the target action for saving new entries."
-1,fn-no-query,323,34912,Save ticket by pressing keyboard key,"From other systems like Mediawiki I know the feature that pressing ALT+S saves all changes. Unfortunately the more obvious CTRL+S is used by the browser itself. It would be very helpful to have the same in Redmine as an abreviation for scrolling down and pressing the button ""Anlegen"" (German version, Englisch ""Create""?).",248,29473,Submit a form with Ctrl+Enter / Command+Return,"While editing issue, Ctrl+Enter should invoke ""Submit""
While creating new issue Ctrl+Enter should invoke ""Create""",0.46550716814371373,-1,,
1850,fp,325,34932,"""Copy link"" feature for issues list","Added the feature to copy issue and journal links by #34703.
I think it would be convenient if that feature could also be used in the context menu.

If you have selected one issue:
* Copy to https://redmine-host/issues/:id

If you have selected multiple issue:
* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)
!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!",306,34703,"""Copy link"" feature for issue and issue journal","When you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.

I think it would be convenient to be able to copy a simple URL from the view.

* URL of the issue to be copied： @https://<your redmine>/issues/1@
* URL of the issue journal to be copied： @http://<your redmine>/issues/1#note-1@",0.8053485227487274,0.8,"The two tickets both revolve around improving the ""Copy link"" feature for issues within Redmine. While Ticket1 specifically addresses the need for this feature in the issues list, especially for copying multiple issue links, and suggests enhancing the context menu, Ticket2 focuses on simplifying the shared URL when copying an individual issue or issue journal link. The underlying intention of enhancing the user experience by improving the copy link functionality is shared between the two, making them quite similar. However, they aren't identical since they target slightly different use cases within the same feature.","** Subject: Enhanced ""Copy link"" functionality for issues and journals
    ** Description: Improve the ""Copy link"" feature across Redmine to enhance user experience and convenience. This update will include:

    - Adding the ability to copy issue links directly from the issues list with options in the context menu:
      - For a single selected issue: Copy link as ""https://redmine-host/issues/:id""
      - For multiple selected issues: Copy batch link as ""https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A""

    - Simplify copied URLs for both individual issues and issue journals by excluding unnecessary parameters, providing clean links such as:
      - Issue URL: ""https://<your redmine>/issues/1""
      - Issue journal URL: ""http://<your redmine>/issues/1#note-1""

This consolidated requirement ensures a unified and streamlined approach to copying links related to issues and their journals throughout Redmine."
1883,fn-queried,332,35032,Get allowed Issue statuses by Issues API,"If you want to edit issues using API, you need to know the issue statuses that you can available.",149,24976,Include new statuses allowed by workflow in Issues REST API,"Redmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. 

There a lot of posts from people which need this feature. 

Please plan to implement this enhancement for the Redmine API - thank you!",0.6263396593848939,0.6,"The two tickets are related to the Issue statuses in the Issues API but address slightly different aspects. The first ticket focuses on obtaining the allowed issue statuses for editing issues via the API, while the second ticket requests information about new statuses allowed by workflows, emphasizing the need for workflow-related information to determine the next allowed status for issues. Although they are closely related, they are not identical in their scope. A duplication might not be necessary, but a consolidation could be considered to broaden the improvement of the Issues REST API regarding status handling.","(Considering the probability is not > 70%, no new requirement is drafted. However, if consolidation were advised, it might look like this.)

**
Subject**: Enhance Issues REST API to Include Workflow-based Status Information

**Description**: Currently, the Issues API lacks comprehensive support for understanding the allowed issue statuses, especially in the context of workflows. Users require the functionality to both identify the issue statuses available for editing issues via the API and to obtain detailed information about workflow transitions, including the next allowed status for each issue based on the current workflow state. This enhancement would entail implementing endpoints to:

1. Retrieve a list of issue statuses that a user is allowed to set through the API.
2. Provide insights into the workflow for each issue type, detailing the possible status transitions and the criteria for moving to the next allowed status.

This feature would significantly improve the usability and efficiency of the Redmine API for managing project issues."
1903,tp,333,35063,Set values for reminder,Is it possible to include in reminder settings such feature as selection of necessary status for issue? In my case I need to exclude the resolved issues from reminder as it done for the closed issues.,232,28638,Filter by issue statuses on reminder task,"I need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.

The attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).
usage example:

<pre>
bundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' 
</pre>

I ask for a review of the patches and their implementation in Redmine code.",0.6173064178943739,0.95,"Both tickets essentially request the same feature, which is the ability to filter reminders based on issue statuses. The first ticket asks for the exclusion of a specific status (resolved issues) from reminders, similar to how closed issues are handled. The second ticket directly requests a filter for issue statuses in the reminder task to send notifications only for certain statuses. The attachment mentioned in Ticket2 seems to be a solution proposal or a patch implementation addressing the common need described in both tickets.","* Subject: Implement status filtering for issue reminders
    * Description: Enhance the reminder settings to allow users to select specific issue statuses for which they want to receive reminders. This will enable the exclusion of certain statuses, such as Resolved or Closed, from reminder notifications. Users should be able to input a comma-separated list of issue status IDs to customize their reminder preferences. The system should support this functionality when triggering reminders via the existing rake task or any other automated process."
1909,tp,337,35122,solar calendar,"Hi dears
I have been following the solar calendar for Redmine for a long time, but I didn't find any results,
People who have done this before are from older versions of Redmine.
Is it possible to create a plugin in this regard?",68,12889,Persian Solar Calendar is needed,"Hi,
There is a lack of Persian Solar Calendar (Hejri Shamsi or هجری شمسی). 
This calendar as the most accurate calendar in the world (http://en.wikipedia.org/wiki/Iranian_calendars) is used by more than 100 milion people and is really lacked here in this greate bug tracking software i.e. Redmine.
Thanks",0.6179846010689651,0.95,"Both tickets are requesting the implementation of a solar calendar in Redmine, with Ticket1 mentioning a general ""solar calendar"" and Ticket2 specifically asking for the ""Persian Solar Calendar (Hejri Shamsi)."" Given that the Persian Solar Calendar is a type of solar calendar and the descriptions overlap in terms of needing a plugin for Redmine, these tickets can be considered very similar and suggest a common need for calendar support tailored to the Persian system.","* Subject: Implement Persian Solar Calendar (Hejri Shamsi) Support in Redmine
    * Description: Develop a Redmine plugin to integrate the Persian Solar Calendar (Hejri Shamsi), widely recognized for its accuracy and used by over 100 million people, into the platform. This will address the current absence of this important calendar system in Redmine's feature set, enhancing its global usability and catering to the needs of users who follow the Iranian calendar system."
1914,tp,340,35216,Create/Update custom fields via API,"To maintain my custom fields I would like to update the values with a job using the API

<pre>
PUT http://redmine.org/custom_fields/8
</pre>

<pre>
        <id>8</id>
        <name>ApiTestField</name>
        <customized_type>issue</customized_type>
        <field_format>list</field_format>
        <regexp></regexp>
        <min_length/>
        <max_length/>
        <is_required>false</is_required>
        <is_filter>false</is_filter>
        <searchable>false</searchable>
        <multiple>false</multiple>
        <default_value></default_value>
        <visible>true</visible>
        <possible_values type=""array"">
            <possible_value>
                <value>1</value>
                <label>1</label>
            </possible_value>
            <possible_value>
                <value>2</value>
                <label>2</label>
            </possible_value>
            <possible_value>
                <value>3</value>
                <label>3</label>
            </possible_value>
            <possible_value>
                <value>4</value>
                <label>4</label>
            </possible_value>
            <possible_value>
                <value>5</value>
                <label>5</label>
            </possible_value>
            <possible_value>
                <value>5</value>
                <label>5</label>
            </possible_value>
            <possible_value>
                <value>6</value>
                <label>6</label>
            </possible_value>
        </possible_values>
        <trackers type=""array""></trackers>
        <roles type=""array""></roles>
</pre>",55,9664,"CRUD operations for ""custom field definitions"" (not setting custom fields on issues!)","my Redmine Java API tests check that a new Issue has some custom fields set.
to do that, I have to create those custom field definitions in Redmine manually first.

would be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.
Again, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.

I understand that this operation would probably require an admin permission - that's fine.",0.6567048654618968,0.9,"Both tickets essentially revolve around the need to manage custom fields via the API, with Ticket1 focusing on updating custom field values and Ticket2 extending this to include the creation and management (CRUD operations) of custom field definitions. Since Ticket2 encompasses Ticket1's request and extends it further, consolidating these into one ticket makes sense to address the broader API functionality for custom fields as a whole.","* Subject: Enhance API to support CRUD operations for custom fields and their definitions
    * Description: Extend Redmine's REST API to facilitate comprehensive management of custom fields, including both the creation, update, deletion, and retrieval of custom field definitions (not limited to setting values on issues) with necessary admin permissions. This enhancement will enable automated processes, such as jobs or external tests, to dynamically manage custom field configurations and their content, streamlining maintenance tasks and supporting integration tests that rely on specific custom field setups."
1933,fp,341,35228,Email notifications on specified filters,"Dear all,

is there a plugin working for latest redmine releases enabling us to create filters in 
redmine and then sending emails in case of new entries to these?


e.g. we have several custom fields we use. We create filters on these. 
If a new ticket falls into this filter, we'd like to receive email notifications. 

There has been the issue reminder plugin, but it seems it's not working in latest versions anymore,
so that we now search for a plugin filling our needs.

Thx
Rgds
Benjamin",232,28638,Filter by issue statuses on reminder task,"I need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.

The attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).
usage example:

<pre>
bundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' 
</pre>

I ask for a review of the patches and their implementation in Redmine code.",0.5740927525135405,0.8,"Both tickets revolve around enhancing email notifications based on specific filters in Redmine. Ticket1 requests a plugin to create custom filters including custom fields and receive email notifications when new tickets match those filters. Ticket2 proposes a specific enhancement to filter notifications by issue statuses, effectively customizing when notifications are sent. Given the overlap in the goal to customize email notifications through filtering, it's likely these tickets address aspects of the same feature request.","* Subject: Enhanced Email Notifications with Custom Filters and Status-Based Triggers
    * Description: Develop a feature or enhance an existing plugin within Redmine to support the creation of advanced filters combining both custom fields and issue statuses. Users should be able to define complex filter criteria including their custom field values and specific issue statuses. Upon the addition of new tickets meeting these filter conditions, automated email notifications will be dispatched to the concerned parties. This feature must be compatible with the latest Redmine releases and should include a user-friendly interface for configuring filters and notification settings. Additionally, incorporate a command-line utility or API endpoint to manually trigger notifications based on selected issue statuses for more granular control over the notification process."
1965,fp,347,35362,Issues list,"Is it possible the user to see the problem only members of the group? A user ""developer"" has seen the problem of all groups.
As part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. Тow there is only:
issues_visibility_all
issues_visibility_own
issues_visibility_public
",39,7867,"Add filters for ""Author's group"" and ""Author's role"" to issues list",Is it  possible to add group of auther for filtering of tasks?,0.7214153861930219,0.8,"Both tickets address the visibility and filtering of issues based on group membership, indicating a significant overlap in their objectives. While Ticket1 focuses on restricting issue visibility to a user's own group and preventing users from seeing tasks across different groups, Ticket2 specifically requests additional filter options for ""Author's group"" and ""Author's role"" in the issues list. The underlying intention behind both tickets seems to be improving the management of issue visibility according to organizational structure and roles.","* Subject: Enhance Issues Visibility & Filtering Based on Group and Role
    * Description: Implement enhanced visibility settings and filters in the issues list to ensure users can only view tasks belonging to their respective groups. This includes adding options to filter issues based on the ""Author's group"" and ""Author's role,"" thereby improving data privacy and organization-specific task management within the platform. The new visibility settings will replace the existing limited options (issues_visibility_all, issues_visibility_own, issues_visibility_public) with a more granular control that aligns with the project's multi-organizational structure."
1972,fp,347,35362,Issues list,"Is it possible the user to see the problem only members of the group? A user ""developer"" has seen the problem of all groups.
As part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. Тow there is only:
issues_visibility_all
issues_visibility_own
issues_visibility_public
",137,24636,All issues private - Setting by project,"We have some projects which require the issues to be private, and others where it is desirable to have the issues public.

Is this something we can configure currently?(Redmine 3.3.1.stable)?

If not, what's the best way to implement this?

Thanks!!
",0.5993863283704413,0.85,"Both tickets address the need for controlling the visibility of issues within a project based on user groups or project settings. While Ticket1 specifically asks for users to see problems only within their own group, Ticket2 requests the ability to set issue visibility as private or public on a per-project basis. The underlying requirement in both cases revolves around enhancing privacy and access control for issues. Given the similarity in the core requirement, it is recommended to consolidate these into a single ticket to address the broader need for flexible issue visibility settings across different groups and projects.","* Subject: Fine-grained Issue Visibility Control by User Group and Project
    * Description: Implement a more granular control system for issue visibility that allows project administrators to set issue visibility on a per-project basis, with options including private (visible only to members of the assigned group), public (visible to all users), and own (visible only to the issue creator). Additionally, enable the functionality for users to view issues exclusively from the groups they belong to, ensuring that information from other groups or projects remains confidential. This feature should enhance collaboration within organizations while maintaining necessary privacy barriers between different user groups and projects."
1993,fp,350,35420,API to archive/unarchive projects,nan,75,13725,Archive/close a project via API,"Hi!

It would be great to archive or close a project via the API",0.7850411612297309,0.9,"The two tickets are indeed very similar as they both request the functionality to manipulate the status of projects (archiving or unarchiving/closing) via an API. The difference is minimal, with Ticket1 explicitly mentioning both archive and unarchive actions, while Ticket2 implies closing as an alternative to archiving but does not directly mention unarchiving. Given the overlap in purpose and the likelihood that implementing one would necessitate the other, it's advisable to consolidate these into a single requirement.","** Subject: Enhance API to support project status management (Archive, Unarchive, Close)
    ** Description: Develop API endpoints to facilitate efficient management of project statuses, including the abilities to archive projects when they are no longer active, unarchive them for revisiting or continuation, and to close projects permanently. This will empower users to automate their project workflow through the API and maintain a clean, organized project list."
2046,fp,358,35507,API to close/reopen projects,"API to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.

This is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project.",75,13725,Archive/close a project via API,"Hi!

It would be great to archive or close a project via the API",0.6314088998573554,0.9,"The two tickets are indeed very similar as they both request for the functionality to manipulate the status of projects (close/reopen or archive/unarchive) via an API. The primary difference lies in the phrasing, but the intent overlaps significantly. Given that one ticket references the other's implementation (Redmine 5.0.0 update),合并 these tickets would streamline the process and avoid duplication of effort.","** Subject: Enhance API to Manage Project Status (Close/Reopen & Archive/Unarchive)
    ** Description: Extend the existing API functionality to comprehensively manage the status of projects. This includes implementing APIs to close and reopen projects alongside the already introduced capabilities to archive and unarchive projects (Redmine 5.0.0, #35420). The enhancement will empower administrators to efficiently administer projects based on evolving requirements, whether by archiving inactive projects or closing and reopening projects as needed."
2061,fp,358,35507,API to close/reopen projects,"API to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.

This is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project.",270,31377,"Updating project status, or archiving with REST","Hi Redminers,

I've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.
Our redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.

I would like to do a patch request with status=0 for example.

Is this a bug, existing but undocumented or a new feature?

Thanks a lot in advance!

( if it's currently not possible, could someone help me creating a patch for this? )

- Jonas
",0.7740929510475576,0.9,"Both tickets essentially request the functionality to manage the project status, specifically to close and reopen projects, via the Redmine API. Ticket1 refers to the existing API for archiving/unarchiving projects and suggests extending it to include closing/reopening. Ticket2 asks for the ability to update project status or archive projects using the REST API, providing a practical scenario where projects are getting closed in another system and need to reflect that change in Redmine. Given the significant overlap in their objectives, it's advisable to consolidate these tickets.","* Subject: Extend API to support project status changes (close/reopen/archive/unarchive)
    * Description: Enhance the Redmine API to facilitate the management of project statuses, including the abilities to close and reopen projects, in addition to the existing archive and unarchive functions. This will enable seamless integration with external systems, ensuring that project status updates performed outside of Redmine are reflected accurately within the platform. The API should support commands for transitioning a project's status, such as setting a status code (e.g., status=0 for closed) via REST requests, improving administrative control and maintaining data consistency across platforms."
2066,tp,359,35509,Description of issue statuses,I think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names.,14,2568,Description for issue statuses,"We have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.

Therefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket.",0.7654818977726863,0.95,"The two tickets are indeed very similar, both addressing the need for descriptions or documentation to clarify the meaning of issue statuses to users, with the suggestion of displaying this information as tooltips. The primary difference is in the phrasing, but the core idea is the same. Given the high level of similarity and the fact that they propose essentially the same enhancement, it's appropriate to consider them duplicates.","** Subject: Enhanced Description for Issue Statuses
    ** Description: To improve user understanding and ensure consistent use of issue statuses, implement an additional description field for each status. This field should allow administrators to provide clarity on the semantics and appropriate usage of each status, particularly custom ones. The descriptions entered should be displayed as tooltips when users hover over status options during ticket updates, thereby guiding them in selecting the correct status and enhancing overall workflow efficiency."
2143,fp,363,35589,issue assignee limitation to a group or a role,"I have a large population in my projects >200
The assignee dropdown menu is very long and make the proper person is made difficult and time consuming.

A good improvement would be:
in the project settings, having he possibility to define the ""assignee"" as follow:
- all -> the entire project members (default)
- group -> list of users within a designated group (could be more than one group selected)
- role -> list of users within a given role (could be more than one role selected) ie: my_exerts

This is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  

best regards

reference found not working with redmine 4.1/4.2 : 
https://www.redmine.org/issues/8313
https://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb",98,21662,Search in issue assigned dropdown list,"My team used redmine over one year，now there are about 100 people in one project。

Everytime I create a issue ，I must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.

sorry about my english,can  somebody tell me to do fix it? ",0.6812333026008618,0.85,"Both tickets address the issue of an overly long assignee dropdown list in Redmine due to a large number of project members, making it difficult and time-consuming to assign issues. While Ticket1 proposes a solution involving project settings to limit assignees by group or role, and acknowledges the limitation of not being able to dynamically adjust based on workflow position, Ticket2 simply requests a search functionality within the assignee dropdown list to ease the process. The underlying issue and the need for improvement are essentially the same; hence, they can be consolidated into a single requirement that encompasses both suggested solutions.","* Subject: Improve Assignee Selection Process for Large Projects
    * Description: In projects with a large number of members (>200), the current assignee dropdown list becomes excessively lengthy, posing challenges in efficiently assigning issues. To enhance the user experience and streamline the assignment process, implement the following improvements:

    - Introduce a searchable assignee dropdown list to quickly locate and select users, mitigating the inconvenience caused by the extensive list.
    
    - Allow project administrators to configure assignee limitations in project settings with flexibility:
        - All: Maintain the current behavior where the entire project members are selectable (default).
        - Group(s): Enable selection from a list of users belonging to one or more designated groups.
        - Role(s): Restrict assignees to users holding specific roles within the project, with the option to select multiple roles.

These enhancements will cater to diverse project structures and facilitate efficient issue assignment without compromising usability."
2256,fp,370,35658,Administration -> Role -> Users Visibility,"In the dropdown list menu, adding ""None users"" as an option. For some approaches, It would be really useful to be able to select this option to set up a role that can be part of a project but cannot see other members.

!RoleUserVisibility.png!",36,7224,Permission for seeing Members on Project Overview,"It would be nice to have permission options to set who can see the members assigned to a project (in project overview).
Ideally this isn't a on/off toggle but being able to select the roles.
Examples:
* project admins and project managers can see all members
* simple users only see the project admins
* non-members (on public projects) can't see any members.",0.6470020933229421,0.85,"Both tickets address the issue of controlling user visibility within projects, focusing on role-based permissions. Ticket1 specifically asks for a ""None users"" option in the user visibility settings for roles, while Ticket2 proposes a more generalized permission system to manage who can see members on a project overview based on roles. The core idea of enhancing visibility control in relation to roles and users is shared between the two, justifying a high similarity score.","** Subject: Enhanced Role-Based User Visibility Control
    ** Description: Implement an enhanced role-based user visibility control system that allows administrators to configure visibility of project members based on roles more granularly. This includes adding a ""None users"" option to exclude certain roles from viewing any members and extending the permission settings to permit customization such as:
        - Project admins and managers can view all members.
        - Regular members can be restricted to view only project admins or a specified subset of roles.
        - Non-members or public viewers, when applicable, can be prevented from seeing member lists altogether, ensuring privacy and security within projects."
2348,fp,379,35685,Support for MySQL > 5.7 or MariaDB,"Given that I cannot see anything on the roadmap I'd like to ask what the state of MySQL support is. As stated on the Install page the latest officially supported release is MySQL 5.6, which has been EOL since February of 2021. MySQL 5.7 seems to work just fine but is not yet officially supported (it's on the roadmap for the next major release after 5.0!) and has an EOL date of October 2023 (aka slightly over 2 years from today). At the current speed of development I fear that MySQL will be EOL long before it is officially supported by Redmine. MariaDB is not supported at all.

Any insight?",330,35014,Review and update supported database engines and versions ,"Supported database engines and versions were not been updated for a while and we should do it in Redmine version:""6.0.0"". 

|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\4=. Recommended Databases                      | 
                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | 
|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |
|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |
|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |
|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |",0.5339631353401431,0.9,"Both tickets are related to the support for database versions in Redmine. Ticket1 specifically requests support for MySQL > 5.7 and MariaDB, expressing concern over the outdated support status. Ticket2 proposes a review and update of the supported database engines and versions, which would inherently address the concerns raised in Ticket1. Since Ticket2's description already outlines a plan to address the database support for the upcoming version, it includes the essence of Ticket1's request.","** Subject: Update and Expand Database Support for Redmine 6.0.0
    ** Description: In light of evolving database technologies and user needs, this requirement tasks the development team with reviewing and updating the list of supported database engines and versions for the Redmine 6.0.0 release. This update includes officially extending support to MySQL 5.7 and later versions, as well as adding official support for MariaDB, reflecting its growing popularity and compatibility as a MySQL alternative. The review should ensure that all supported databases meet the long-term support criteria and are compatible with the latest Redmine features, optimizing performance and security. Additionally, the supported Ruby and Rails versions should be reconfirmed to align with the updated database compatibilities."
2353,tp,380,35686,Add configured theme and whether it includes JavaScript to Redmine::Info.,"Given that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.

Example:

!2021-08-05_01-36-12.png!

I'll leave a patch against current trunk.",279,32116,Add configured theme to Redmine::Info,"*Administration | Information* 

Displays various info about system, but doesn't display which theme is currently being used.


<pre>
Environment:
  Redmine version                3.4.10.stable
  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]
  Rails version                  4.2.11.1
  Environment                    production
  Database adapter               Mysql2
SCM:
  Subversion                     1.9.3
  Git                            2.7.4
  Filesystem                     
Redmine plugins:
</pre> 

It is important to know which theme is used, because there is many themes available on internet, 
and some themes don't show everything, or have bugs.",0.7606452843638277,0.85,"The two tickets are very similar as they both request adding information about the configured theme to Redmine::Info. The first ticket extends the request by also asking to include whether the theme includes JavaScript, which adds a slight difference but falls under the same overall enhancement. Given the core similarity, it's recommended to consider them duplicates with an emphasis on incorporating the additional detail from the first ticket into a single requirement.","* Subject: Enhance Redmine::Info to Display Configured Theme Details
    * Description: To better assist in diagnosing UI issues related to third-party themes, enhance the @Redmine::Info@ to include details about the currently configured theme. This should encompass not only the theme's name but also indicate whether it includes custom JavaScript. Having this information readily available in the ""Administration | Information"" section will facilitate troubleshooting by immediately providing insights into potential sources of compatibility or functionality problems, especially considering the variety of themes available and their varying levels of quality and compatibility with Redmine."
2445,fp,389,35762,"Add an optional, explicit Project#start_date and Project#due_date to projects","This can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180.",388,35761,Display Project#start_date and Project#due_date on project show view,It can be useful to display these values outside of the Gantt/Calendar too.,0.6942329825985266,0.9,"The two tickets are highly related as they both pertain to the addition and utilization of `Project#start_date` and `Project#due_date`. The first ticket proposes adding these fields to projects, while the second ticket suggests displaying these fields on the project's view. Since the implementation of the second ticket relies on the completion of the first, it makes sense to consider them duplicates or at least closely connected parts of the same feature request.","- **Subject**: Implement and Display Project Start & Due Dates
    - **Description**: Add optional, explicit `Project#start_date` and `Project#due_date` fields to projects, which can be utilized for projects without depending on issues or versions. These dates will provide clear timelines for project commencement and completion. Subsequently, ensure these dates are displayed on the project's show view, making them visible outside of additional tools like Gantt charts or calendars, enhancing overall project management visibility."
2447,tp,390,35764,"Multiple search terms in the ""contains"" operator of text filters","I extracted the attached patch from #35073#note-4. The patch posted by ""Jens Krämer"":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in ""contains"" operator of text filters. 

> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?

It seems that the patch has already been deployed to the production environment of Planio. See ""Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support"":https://support.plan.io/news/200
",291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",0.5655133903581785,0.8,"Both tickets revolve around enhancing the filtering capabilities within a system, specifically addressing the need to use multiple search terms in text filters. While Ticket1 focuses on modifying the ""contains"" operator to accommodate multiple terms across text filters, Ticket2 is more narrowly focused on enabling the selection of multiple subjects within the ""Subject"" filter. Given that both touch upon improving filter functionality with multi-term support, it's likely they stem from a common user need. However, they are not identical as they target slightly different aspects of the filtering system.","* Subject: Enhanced Multi-Term Filters for Text and Subject Criteria
    * Description: Improve the filter functionality to allow users to input and apply multiple search terms in both the ""contains"" operator of text filters and the ""Subject"" filter. This enhancement will enable users to create more sophisticated queries by supporting AND conditions when comma-separated terms are used in the filter criteria, akin to the functionality available in ticket searches. The system should intelligently break up the user's query string into tokens and construct a query combining multiple LIKE clauses to satisfy each term in the filter, ensuring comprehensive and precise search results across issues and their subjects."
2473,fp,395,35795,Settings for global and user default custom ProjectQuery,"A feature like this would be in line with #7360. It wouldn't need the project and user level defaults though. It would IMHO be a more complete (than r19505) solution to the need expressed in #32818.

With this feature, the @project_list_display_type@ setting added in r19505 can be removed.",37,7360,"Issue custom query: default query per instance, project and user","It would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list.",0.7100656926219838,0.85,"Both tickets revolve around the idea of setting default custom queries for projects and users to enhance the issue tracking experience. While Ticket1 focuses on global and user default ProjectQuery settings, with a mention of removing an older setting, Ticket2 specifically requests default custom query per instance, project, and user, aiming to streamline the process of viewing project issues. The overlap in the core requirement of setting defaults for custom queries justifies considering them highly similar.","** Subject: Default Custom Query Settings for Projects, Instances, and Users
    ** Description: Implement a feature that allows administrators to set default custom queries at the global, project, and user levels, enhancing the usability of the issue tracking system. This feature will enable automatic loading of preferred custom queries when accessing the issue list for any project, reducing the need for manual selection each time. It will also include the removal of outdated settings, such as @project_list_display_type@, to consolidate and streamline the configuration process. This comprehensive solution addresses the needs expressed in previous tickets #7360, #32818, and aims to provide a more efficient workflow for users navigating through different project instances."
2480,fp,395,35795,Settings for global and user default custom ProjectQuery,"A feature like this would be in line with #7360. It wouldn't need the project and user level defaults though. It would IMHO be a more complete (than r19505) solution to the need expressed in #32818.

With this feature, the @project_list_display_type@ setting added in r19505 can be removed.",201,27128,Ability to choose default sort by column for all projects,"Much like what's available when new saved query is created.

Preferably it should be shown in *admin | Settings | Issue tracking*

at *Default columns displayed on the issue list* section.

For example, from saved queries page:
!2017-10-05 13_10_30-RCOM.png!",0.6497368974251109,0.75,"The two tickets both revolve around the idea of setting default query or display preferences for projects, albeit focusing on slightly different aspects. Ticket1 discusses implementing global and user default custom ProjectQuery settings, aiming to enhance or replace an existing feature related to project list display types. Ticket2 specifically requests the ability to choose a default sort-by column for all projects, suggesting a setting in the admin interface. Given the overlap in theme and the fact that both aim to configure default viewing behaviors for project issues, there's a considerable similarity that suggests consolidation could be beneficial, provided the implementation can address both custom queries and default sorting preferences.","** Subject: Global and User Default Settings for Project Queries and Column Sorting
    ** Description: Develop a unified feature within the administration settings to allow configuration of both global and user-specific default custom ProjectQuery settings, including the ability to set default sort-by columns for issue lists across all projects. This enhancement should整合 the functionality proposed in #7360 and address the needs expressed in #32818 and #32824, superseding the current @project_list_display_type@ setting introduced in r19505. Users and administrators should have control over default query parameters and column displays, with these preferences being configurable from a centralized location such as *admin | Settings | Issue tracking*. A user-friendly interface will be designed to manage these defaults, resembling the experience of creating saved queries, ensuring consistent and personalized issue tracking experiences across the platform."
2536,fp,397,35797,Don't show issues without spent time on the issues list with 0.00/0:00 spent time values,"Currently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.
I think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values.",49,9090,Issue view does not show spent time if hours are zero,"If I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as ""Spent time: -"". 
It would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue.",0.7484141171944069,0.85,"Both tickets address the visual representation of issues with no spent time in the system. While the contexts are slightly different (Ticket1 refers to the issues list and Ticket2 to the issue view), the underlying issue is the same: improving the display of zero spent time. Given that resolving one ticket would likely necessitate a similar solution for the other, consolidating them makes sense.","** Subject: Consistent Display of Spent Time for Issues with Zero Entries
    ** Description: Enhance the display of spent time across both the issues list and individual issue views to consistently handle cases where no time has been logged. Instead of showing ""0.00/0:00"", ""-"", or other misleading values, issues without any spent time should either not display a spent time value at all in the list view, or show ""0 hours"" with the standard link to view logged time on the issue detail page. This will create a cleaner and more intuitive user experience by accurately representing the absence of logged time data."
2582,fp,398,35798,Add Total estimated/spent time issue query filters,"Total estimated/spent time columns are, along with the estimated/spent time columns, present on the issue list. Simultaneously are their equivalent filters missing as issue query filters available for filtering (on) the issue list.
I think it could be beneficial for users to have these two issue query filters added to the core by default.",128,24067,Total Estimated Time should be available on Totals options,"The _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.

This would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.
As a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.

Redmine 3.3.0 (bitnami install) here.",0.573782836588131,0.85,"Both tickets are related to enhancing the display and filtering capabilities of total estimated and spent time in issue tracking. Ticket1 focuses on adding these as query filters to the issue list, while Ticket2 specifically requests their inclusion in the 'Totals' options of query filters for better summarization, especially when dealing with subtasks. The overlap in the subject matter and the complementary nature of the enhancements suggested indicate a strong similarity.","* Subject: Enhance Total Estimated & Spent Time Query Filters and Totals Options
    * Description: To improve time management and reporting efficiency, enhance the issue tracking system by adding both _Total Estimated Time_ and _Total Spent Time_ as query filters to the issue list. This will enable users to filter issues based on these aggregate values. Additionally, include these totals in the _Totals_ options of query filters, allowing for summaries of these values, particularly beneficial when working with subtask groups (e.g., grouped by target version), to easily sum up the total estimated time across all subtasks without needing workarounds such as using the _Parent Task_ filter. These enhancements should be incorporated into the core functionality by default."
2657,fp,406,35877,We are not able to install plugin,"Hello Team,

We are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.
",405,35876,We are not able to install plugin,"Hello Team,

We are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.
",1.0,1.0,"The two tickets have identical subjects and descriptions, indicating that they are likely the same issue reported twice by mistake. There is no difference in the information provided, so they can be safely considered duplicates.","Not applicable since both tickets are identical and do not need to be combined into a new one; instead, they should just be marked as duplicates of each other."
2747,tp,418,35989,Plugin that Includes spent hours in issues REST API responses,"Hi there,

I wrote a plugin which extends original issues' REST API feature with following:

* include spent hours in records of responses to REST API request

If this UX is built in to original Redmine, I'm happy!

Built for Redmine 4.1.
",320,34857,"Add total estimated hours, spent hours, total spent hours for issues to issue list API","The issue index API currently does not return total estimated hours, spent hours and total spent hours, although the issue show API does show those fields.",0.576501126573689,0.85,"Both tickets request enhancements to the Redmine issue REST API regarding time tracking (spent hours). Ticket1 specifically asks for spent hours to be included in API responses, while Ticket2 requests the addition of total estimated hours, spent hours, and total spent hours to the issue list API. Since the core of both requests revolves around enriching the API with spent hours data, they are very similar and could be consolidated to avoid duplication of effort.","* Subject: Enhance Redmine Issue REST API with Comprehensive Time Tracking Information
    * Description: Modify the Redmine issue REST API to consistently provide detailed time tracking data across all relevant endpoints. This enhancement should include the addition of spent hours to both issue records in list API responses and ensure consistency with the information already available in the issue show API. Specifically, the updated API should return total estimated hours, spent hours, and total spent hours for issues, improving the API's usefulness for project management and reporting purposes. This update will cater to the needs expressed in both previous tickets and promote a more efficient development experience when integrating with Redmine's time tracking features."
2774,fp,419,35990,Sitewide news plugin,"Hi there,

I wrote a plugin which extends original news feature with following:

* notifies a news to every active users via e-mail on-demand and with the permission to do so

We are using this feature to distribute such as system suspension notice .

If this UX is built in to original Redmine, I'm happy!",341,35228,Email notifications on specified filters,"Dear all,

is there a plugin working for latest redmine releases enabling us to create filters in 
redmine and then sending emails in case of new entries to these?


e.g. we have several custom fields we use. We create filters on these. 
If a new ticket falls into this filter, we'd like to receive email notifications. 

There has been the issue reminder plugin, but it seems it's not working in latest versions anymore,
so that we now search for a plugin filling our needs.

Thx
Rgds
Benjamin",0.651500734990718,0.8,"Both requirements revolve around enhancing Redmine's notification system to send emails based on specific conditions or filters. Ticket1 introduces a custom plugin that notifies users site-wide via email when news is posted, with control over who can receive these notifications. Ticket2 seeks a similar functionality but focuses more on creating customizable filters for various aspects of Redmine (like tickets) and receiving email notifications when new data matches those filters. The overlap lies in the email notification aspect triggered by specific events or content within Redmine.","* Subject: Enhanced Email Notification System with Custom Filters
    * Description: Develop an integrated Redmine feature or plugin that expands the existing notification system to support both site-wide announcements and detailed, user-defined filters. This feature will allow administrators to notify all active users about important news or system updates via email, with granular permissions control. Additionally, users should be able to create custom filters based on project activities, ticket attributes, and custom fields. When new entries matching these filters occur, automatic email notifications will be dispatched to the subscribers of those filters, ensuring timely and relevant communication across the platform. This solution aims to consolidate the functionality of separate plugins into one comprehensive and up-to-date system compatible with the latest Redmine releases."
2838,fp,430,36183,"Dynamic decimal separator, according to country setting","Currently, glide ratios must be entered with a point as a decimal separator. However, this is not common worldwide, in Germany the comma is used for this and the point as a thousand separator.

It would be great if Redmine could take this into account according to the country / language setting ...",150,25012,"Allow both '.' and ',' decimal symbols for input of float custom fields","In Redmine, inputting decimal values such as ""3.15"" of ""3,15"" in either ""Estimated time"" or ""Spent time"" fields is correctly interpreted and converted back to the proper float format: 3.15 .

I think this behaviour should also be applied to float custom fields.",0.63848004910329,0.9,"Both tickets address the issue of decimal separators in different regional contexts within Redmine. Ticket1 specifically mentions the dynamic adjustment of the decimal separator based on country settings, focusing on glide ratios but implying a broader application. Ticket2 requests the acceptance of both '.' and ',' as decimal symbols for input in float custom fields, similar to the behavior already present in Estimated time and Spent time fields. The core issue—improving the system's适应性 to various decimal notation practices—is shared between the two tickets, suggesting they are very similar and could be consolidated.","* Subject: Enhance Decimal Separator Adaptability for Float Inputs According to User Locale
    * Description: To improve international user experience, Redmine should dynamically adapt the accepted decimal separator for all float inputs, including custom fields, based on the user's selected country or language settings. This enhancement will ensure consistency across the platform, allowing users to input decimal values using either a period (.) or a comma (,) as per their regional norms, as is already supported in ""Estimated time"" and ""Spent time"" fields. The system will automatically recognize and convert these inputs to the standard float format (using a period) for internal processing, thereby eliminating any confusion or errors associated with different notation practices worldwide."
-1,fn-no-query,432,36198,Set standard columns in the ticket listing options based on projects,"Currently this can only be set globally in the system configuration.

But since we have different types of projects, each with their own, user-defined fields, we cannot link these displays to the respective project.

So it would be great if the global setting option could be adapted in the individual project configurations",37,7360,"Issue custom query: default query per instance, project and user","It would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list.",0.45674783694004645,-1,,
2869,tp,435,36246,Multi project csv import,"Hi, now the issue import function is limited to a single project.
Why don't extend it to multiple project using his own column?",170,25808,Allow import issues and time entries on multiple projects (map Project field to a column from CSV),"When I use Import menu to create new issues, I found I could't import all issue in different project all same time.
I had to import one project at once, that feel not convenience.
So I wish redmine can support Project Feild dynamic mapping via csv file.",0.6539726588437842,0.95,Both tickets essentially request the same functionality: an improvement to the CSV import feature in Redmine to support importing issues into multiple projects simultaneously by using a dedicated column in the CSV file to specify the target project for each issue. The descriptions vary slightly in wording but convey the same core need.,"* Subject: Enhance CSV Import to Support Multi-Project Issue & Time Entry Import
    * Description: Enhance the existing CSV import functionality to facilitate the import of issues and time entries across multiple projects in a single operation. This enhancement will allow users to map a dedicated column within the CSV file to the 'Project' field, thereby specifying the target project for each entry during the import process. This improvement aims to streamline the import process, eliminating the current necessity to perform imports project by project."
3030,fp,454,36448,Option to group subtasks within task in issue list,"As one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.

Please add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)
",147,24942,"Additional ""Group by results"" option for parent task","The way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.

We then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.

To view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.

To improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.",0.7002491883544706,0.9,"Both tickets are requesting improvements in the visualization and organization of subtasks related to their parent tasks within the issue tracking system. Although the specific implementations suggested are slightly different, the underlying goal is the same: to better present and navigate through hierarchical task structures. Therefore, it's recommended to consider these tickets as duplicates with a focus on implementing a unified solution that addresses both concerns.","* Subject: Enhanced Subtask Grouping and Visualization within Parent Tasks
    * Description: To enhance the user experience when managing hierarchical tasks, implement an improved feature that automatically groups subtasks under their respective parent tasks in the issue list, providing a clear visual indication of the task hierarchy. This feature should include options to:
        - Sort and display subtasks consistently nested beneath their parent tasks, regardless of individual task IDs, as depicted in the provided example (redmine_2 screenshot).
        - Introduce a ""Group by Parent Task"" option in the search results to allow users to view all subtasks related to each parent task collectively without needing to open each parent task individually or perform separate searches. This will streamline the process of reviewing and managing releases or project features that encompass multiple subtasks."
3040,fp,454,36448,Option to group subtasks within task in issue list,"As one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.

Please add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)
",251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,0.6273604288951918,0.95,"Both requirements essentially ask for the same feature, which is the ability to group subtasks under their respective parent tasks in the issue list view. The first ticket provides a specific visual example and requests an option to enable this grouping, while the second ticket proposes adding the functionality to group issues by their parent as a choice in the grouping options. The core objective overlaps significantly, hence duplication is strongly recommended.","* Subject: Implement Subtask Grouping within Parent Tasks in Issue List
    * Description: Enhance the issue list view to include an option for users to group subtasks directly under their parent tasks, ensuring clear visualization and organization. This feature will allow users to choose 'Parent' as a grouping criterion, resulting in a display where all subtasks are nested beneath their respective parent tasks, similar to the example provided. The implementation should maintain sorting flexibility while ensuring subtasks are consistently associated with and visually indented beneath their parent tasks."
-1,fn-no-query,456,36504,PDF preview in attachment Page,"if u have enabled PDF Thumpnailsupport and click on a Thumnail u get redirected to the attachment Page, but there is no preview of the file itself, it should be also possible to show the PDF file.",100,22483,Show PDF attachments and repo entries instead of downloading them,"Following up on #22058, I would like to propose, that also PDF files are shown directly instead of forcing downloads.

This applies to two use cases:

h3. 1. Following a download link

When following a download link, image are sent with @content-disposition: inline@, while all other files are sent with @attachment@. Since the some browsers is able to render PDF files directly (Firefox, Chrome, Safari, IE with Adobe Reader installed) and people are probably used to it, I think that extending this exception to PDF files is a reasonable change. If native PDF rendering within the browser is not supported, then a download will be initiated by the browser anyway.

h3. 2. Displaying a PDF file in repository browser

When accessing ""View"" within the file view in the repository browsers, Redmine currently forces a download of the PDF. Instead an iframe could be rendered which displays the PDF within the Redmine UI. Browser support for this use case is similar to No. 1.


-------

The patch series is based on current trunk (r15332) plus the changes of #22482. If desired, I could isolate the changes further, to make them work without #22482.

h3. @0004-Don-t-force-download-of-PDFs-but-show-in-browser-pre.patch@

The change updates @AttachmentsController@ and @RepositoryController@ to send PDF files with @content-disposition: inline@. (See first use case.)

h3. @0005-Show-pdf-preview-for-repository-files-and-attachment.patch@

The change adds @attachments/pdf@ and @common/_pdf@ views to render PDF files in an iframe/object construct. (See second use case.)

Since we cannot easily know the PDF’s dimensions, the frame size follows the following rules:

* it is as wide as possible (100%)
* in general it is as high as it is wide
* it is never higher than 80 % of the viewport (80vh), since we want to make sure, that there is always a bit of Redmine UI visible to avoid getting “trapped” within the frame

Using a nested object/iframe structure was taken from http://pdfobject.com/static.html",0.48697951209598284,-1,,
3306,fp,478,36805,Update Rails to 7,nan,442,36320,Migrate to Rails 7.2,nan,0.8556040762604167,0.9,"Both tickets essentially request an upgrade to a newer version of Rails, with Ticket1 asking for an update to Rails 7 and Ticket2 specifying Rails 7.2. Since Rails 7.2 is a more recent version within the same major release line, these tickets can be considered as duplicates with the intention to perform the latest upgrade.","- Subject: Migrate to Rails 7.2
    - Description: Proceed with the migration from the current version of Rails to the latest stable version, which is Rails 7.2. This includes updating dependencies, ensuring compatibility with existing codebase, and applying necessary changes to leverage new features and improvements introduced in Rails 7.2."
3327,fp,479,36823,Allow to import time entries for issues in different projects,"As it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.

The attached patch that was extracted from ""Planio"":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.

This is somewhat related to #25808.",435,36246,Multi project csv import,"Hi, now the issue import function is limited to a single project.
Why don't extend it to multiple project using his own column?",0.5709558767014768,0.9,"Both tickets address the limitation of the current import functionality being confined to a single project. While Ticket1 specifically focuses on time entries across different projects and Ticket2 mentions issue import, the underlying desire for both is to enhance the import process to support multiple projects. The attachment mentioned in Ticket1 suggests a technical solution that could potentially be adapted to serve the purpose of Ticket2 as well. Given the substantial overlap in the intent to improve project scope in imports, these tickets can be considered very similar and candidates for consolidation, especially if the system's import architecture handles both issues and time entries under a unified or similar逻辑.","* Subject: Enhance Import Functionality to Support Multiple Projects
    * Description: Currently, the import feature for both issues and time entries is limited to a single pre-selected project. This new requirement aims to expand the capability of the import process, allowing users to import data for issues and time entries across multiple projects within a single import operation. The enhancement will involve modifying the import mechanism to recognize a dedicated project column for each entry, thereby dynamically assigning the correct project based on the provided data. This update will not only facilitate the import of time logs associated with issues in various projects (as addressed in Ticket1) but also extend the issue import to encompass multiple projects as suggested in Ticket2. The implementation should ensure that existing validations, such as verifying the existence of issues and appropriate permissions, are maintained across all included projects."
3474,fp,489,36931, Option to search active projects only,"If you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.

I think it would be a nice improvement if Redmine will have an option to search for active projects only, like ""Open issues only"" option implemented by #10734.",246,29449,Filter out issues from closed projects in My Page blocks,"Users see issues assigned to them on My Page, even when the project is closed.
So it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.
I think that the best solution is NOT to display issues of closed projects on the user's My Page.",0.5173197878278548,0.8,"Both tickets address the issue of closed projects cluttering search results and user interfaces in Redmine. While Ticket1 specifically asks for a search filter to exclude closed projects, Ticket2 focuses on removing closed project issues from the ""My Page"" blocks. The underlying desire in both tickets is to limit the visibility of closed project issues, making them quite similar. However, they refer to different areas of the application (search vs. personal dashboard), which is why the similarity isn't rated at 100%.","* Subject: Enhanced Filtering: Exclude Closed Projects from Search & My Page Blocks
    * Description: To enhance the user experience and reduce clutter, implement an option to exclude issues from closed projects across Redmine. This should include:
        1. A searchable option, akin to ""Open issues only,"" to restrict search results to active projects only.
        2. An update to the ""My Page"" to automatically filter out any issues belonging to closed projects from being displayed in assignment blocks or summaries. This will alleviate the need for administrators to manually re-open and manage closed projects just to handle issue assignments.

This combined requirement encapsulates the core of both original requests, aiming to streamline the interface by hiding irrelevant (closed project) issues consistently throughout the platform."
-1,fn-no-query,492,36942,Admin status messages on every page,"Due to the current situation, I wish there was a way to display a message at the top of every page you visit, so that everyone knows that we are currently having a technical problem ;)",429,36182,Show notifications for all Redmine users,"This patch adds the feature to display text throughout the site once it has been set in Settings > Administration.

!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!
!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!

There is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner
This patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design.",0.4772687804507442,-1,,
3656,tp,504,37133,Add solar date to Redmine,"Redmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.
Please add the *solar date feature* to the project if possible.",68,12889,Persian Solar Calendar is needed,"Hi,
There is a lack of Persian Solar Calendar (Hejri Shamsi or هجری شمسی). 
This calendar as the most accurate calendar in the world (http://en.wikipedia.org/wiki/Iranian_calendars) is used by more than 100 milion people and is really lacked here in this greate bug tracking software i.e. Redmine.
Thanks",0.6519705161172433,0.95,"Both requirements are essentially asking for the same feature, which is the integration of a solar calendar into Redmine. Although Ticket1 refers to it as ""solar date"" and Ticket2 specifically mentions the ""Persian Solar Calendar (Hejri Shamsi),"" the underlying need is identical. The Persian Solar Calendar is indeed a solar calendar and is widely used, making these requests highly similar and deserving of consolidation.","* Subject: Implement Persian Solar Calendar Support in Redmine
    * Description: Enhance Redmine's project management capabilities by integrating the Persian Solar Calendar (Hejri Shamsi), used by over 100 million people globally. This addition will address the current deficiency and cater to users who rely on this highly accurate calendar system, improving usability and inclusivity for a broader audience."
3660,fp,504,37133,Add solar date to Redmine,"Redmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.
Please add the *solar date feature* to the project if possible.",337,35122,solar calendar,"Hi dears
I have been following the solar calendar for Redmine for a long time, but I didn't find any results,
People who have done this before are from older versions of Redmine.
Is it possible to create a plugin in this regard?",0.737370379080097,0.95,"Both tickets are requesting the addition of a solar date feature to Redmine, indicating a strong similarity in their purpose. The first ticket specifically asks for the ""solar date feature"" to be added, while the second one inquires about the possibility of creating a plugin for a solar calendar in Redmine, which aligns with the same need. Given the overlap in subject matter and the shared objective, it's highly likely that these tickets address the same user need and can be considered duplicates.","** Subject: Implement Solar Calendar Functionality in Redmine
    ** Description: To enhance Redmine's usability for a broader range of users, particularly those following the solar calendar system, integrate a solar date feature into the platform. This would involve developing a plugin or updating the existing system to display and manage dates according to the solar calendar alongside the Gregorian calendar. Users should be able to switch between the two calendar systems effortlessly and have all project-related dates accurately reflected in their preferred calendar view."
3706,fp,509,37176,Mutli language public queries,"I can't find any reference for this feature so I am making a request for one.

Public queries should display in user's language, perhaps one table called translations in database in key-value style can be used for translations.

So that saved queries can have reference to translation and based on user's language proper translation or default value is displayed...  ",20,3972,Translation for field values,"It would be very nice when the values of fields can be translated in different languages. For example:
1st user has choose language english -> So he see the ticket status ""new"" to choose
2nd user has choose language german -> So he see the ticket status ""neu"" to choose",0.6202049871321769,0.85,"Both requirements focus on enabling multi-language support within the system, ensuring that users see content in their preferred language. Ticket1 addresses this need for public queries, suggesting a translations table in the database to manage translations. Ticket2 is more specific to translating field values, like ticket statuses, but the underlying goal of multilingual functionality is the same. Given the significant overlap in objectives, it is recommended to consolidate these into a single requirement.","* Subject: Multilingual Support for Queries and Field Values
    * Description: Implement a comprehensive multilingual feature to enhance user experience by allowing content, including public queries and field values, to be displayed in the user's selected language. This will involve creating a translations database table with a key-value structure to store and manage translations. System elements such as saved queries and form fields (e.g., ticket statuses) should dynamically adapt their display text based on the user's preferred language setting, fetching the appropriate translation from the database or defaulting to a predefined value if no translation exists."
3745,fp,513,37362,CSV export of issues report,"CSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.

!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!",16,3097,Add CSV export to Gantt,Then it can be converted to Excel file for further reporting to clients,0.6257692477950153,0.8,"Both requirements revolve around adding the functionality to export data to CSV format for external processing and reporting purposes. Although one refers specifically to an ""Issues Report"" and the other to the ""Gantt"" view, the underlying need for exporting data in a common, spreadsheet-compatible format is shared. Thus, they could likely be addressed by a unified feature that allows CSV export from multiple report types, including both Issues and Gantt views.","* **Subject:** Unified CSV Export Functionality for Issues Report and Gantt View
    * **Description:** Develop a unified CSV export feature to facilitate data extraction from both the Issues Report and the Gantt view. This enhancement will empower project managers to generate comprehensive documentation and perform further analysis in spreadsheet applications like Excel, streamlining client reporting and project status tracking across different aspects of project management."
3747,fp,513,37362,CSV export of issues report,"CSV export of the Issues Report would help project managers create documentation on the status of their projects using spreadsheets and other applications.

!{width: 935px; border: 1px solid grey;}.csv-export-of-issues-report.png!",189,26641,Display and export project information,"can we have report display all project information as  table  including custom fields  and can be exported to excel

",0.603141167103763,0.8,"Both requirements revolve around exporting project data, with Ticket1 specifically asking for a CSV export of the Issues Report and Ticket2 requesting a display and export of all project information, including custom fields, to Excel. The core functionality desired in both tickets is similar, hence a duplication could be considered. However, Ticket2 has a broader scope including the display aspect within the project management tool.","* Subject: Enhanced Project Data Export Functionality
    * Description: Develop a unified feature that allows project managers to both display and export comprehensive project information, encompassing all standard fields and custom fields, in a tabular format. This feature should support exporting the data to both CSV and Excel formats, facilitating the creation of detailed project status reports and documentation using spreadsheet applications."
3771,tp,515,37365,Allow users to choose textile or markdown formatting,"Currently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.

Additionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).
So there is no reasonable way to convert from textile to markdown. 
Even then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).

Please add the possibility to choose the formatting at user/issue/project base.
Without the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown).",42,8095,Allow overriding the default text formatting in each project,"It would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users.",0.6784659853705896,0.9,"Both tickets essentially request the ability to choose between textile or markdown formatting on a more granular level than the current global setting. Ticket1 emphasizes the need for user, issue, or project-based selection to facilitate transitions between formats and accommodate user preferences. Ticket2 focuses specifically on allowing the override at the project level for larger, diverse user bases. The core issue in both tickets overlaps significantly, making duplication advisable.","** Subject: Implement granular text formatting selection per user, issue, or project
    ** Description: To enhance flexibility and support diverse user preferences, enable the selection of textile or markdown formatting on a granular basis. Users should be able to choose their preferred formatting individually, while project administrators gain the capability to set the default formatting per project, overriding the global default. This will facilitate seamless transitions between textile and markdown without disruption, accommodating long-term users who may prefer textile and new users who might favor markdown. Additionally, this feature will assist in managing potential conversion issues by allowing older content to maintain its original formatting while new content can adopt a different format if desired."
3778,fp,516,37366,"Redmine Docker - Easy deploy upgrade, administer","Good Day All,

I want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.

With this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.

Hopefully, with this my DB stays intact, and also my color scream/templates remain intact.

It would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.

This would make Redmine the easiest to install and work with.

This is my pipe dream at the moment.

And add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure.",48,9020,Auto upgrade of redmine and plugins making it much easier to manage the versions,"Can we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. 
Please install jenkins and look at these areas they have, you need this stuff badly.",0.6704520925824201,0.85,"Both tickets revolve around improving the ease of upgrading and managing Redmine and its plugins. Ticket1 focuses on deploying Redmine via Docker with persistent storage for upgrades and plugin management, while Ticket2 specifically asks for a feature akin to Jenkins' update mechanism for Redmine and a dedicated plugins management area. The core intent of simplifying updates and management overlaps significantly.","** Subject: Simplified Deployment, Upgrade & Plugin Management for Redmine
    ** Description: Develop a streamlined solution for deploying, upgrading, and administering Redmine. This includes creating a Docker-based deployment method with MySQL support, persistent storage for database and customizations (like color schemes/templates), and an intuitive interface within Redmine for managing version upgrades and plugin installations. Users should be able to effortlessly pull the latest Redmine image and trigger upgrades without impacting their database or custom settings. Additionally, incorporate a ""Plugin Manager"" feature, allowing users to browse, install, update, and remove plugins directly from the Redmine administration interface with a single action, akin to Jenkins' update mechanism. Lastly, integrate SSL/certificate management capabilities within the Redmine admin console to enhance security easily. This comprehensive approach will significantly enhance the user experience and reduce maintenance overhead for Redmine instances."
3801,fp,517,37461,custom field sorting,"Hi everyone;
I would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.
(administration section - custom fields - list of custom fields)
Are there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.
Thanks everyone for contributing to Redmine.
Martina

our current environment please see jpg",440,36295,Tracker based field ordering.,"Currently you can define only order of custom fields only. Standard fields are non sortable and always top of list.
It would be nice to be able to sort these fields separately for each trackers.
",0.685034060342698,0.8,"Both tickets are related to improving the sorting functionality of fields in Redmine. Ticket1 requests a better overview and sorting mechanism for custom fields, potentially including the ability to group fields by project. Ticket2 specifically asks for tracker-based ordering of both standard and custom fields. Since they both aim to enhance field organization and sorting, they are quite similar in scope.","* Subject: Enhanced Field Sorting and Organization
    * Description: Improve the administration interface for field management by introducing advanced sorting options for both custom and standard fields. This enhancement should allow administrators to:

        1. Sort fields not only up and down but also enable grouping by project, making it easier to manage a large number of custom fields.
        2. Implement tracker-based field ordering, allowing separate sorting configurations for each tracker to tailor the fields' display according to specific workflow needs.
        3. Provide a more intuitive overview of all fields in use, ensuring administrators have a clear understanding of field utilization across different projects and trackers.

This combined requirement addresses the core issues raised in both tickets, offering a comprehensive solution for better field organization and customization within Redmine."
3810,fp,518,37467,Option to add project when adding users via csv file,"I think it would be useful to add an option to choose the project to which the user is added to as well as their role when adding multiple users with a csv file. Right now, we can add users but if you want to add them to a specific project, you have to go one by one and add them manually.",435,36246,Multi project csv import,"Hi, now the issue import function is limited to a single project.
Why don't extend it to multiple project using his own column?",0.568359699608838,0.85,"Both tickets revolve around enhancing the CSV import functionality to support assigning users or issues to multiple projects simultaneously. While Ticket1 specifically mentions adding users with a choice of project and role, Ticket2 discusses importing issues but implies a similar need for project assignment via CSV. Given the overlap in intent to expand CSV functionality for multi-project handling, these tickets can be considered very similar and合并 to address a broader improvement in the CSV import process to accommodate multiple projects.","* Subject: Enhance CSV Import for Multi-Project User & Issue Assignment
    * Description: Improve the existing CSV import feature to allow both users and issues to be assigned to multiple projects in a single import operation. This enhancement should include options to specify the target project(s) and, for users, their roles within those projects, directly through dedicated columns in the CSV file. This will streamline the process of bulk user and issue management across multiple projects, eliminating the need for manual post-import adjustments."
3819,fp,521,37487,dependent custom fields,"Hi!

Is it possible to make dependent custom fields or table(choose)?
I need to link 2 fields: skill and level 

Is it even possible?",163,25651,How to make specified item of two custom fileds can be linked.,"Hi all,

I got another request that need all you help,please refer to details as below,
For example,
1.Create two custom fields.One with item A,B,C and another one with item E,F,G,H,I,J.
2.If we choose item A in one custom field,we expect that only item E and F can show up 
in another custom field,how to implement it?",0.6140090624731668,0.95,"Both tickets are requesting functionality for creating dependent custom fields where the selection in one field influences the available options in another field. The use cases provided in both descriptions align closely, indicating a strong similarity and suggesting that the underlying requirement is the same.","* Subject: Implementation of Dependent Custom Fields for Enhanced Linking
    * Description: The requirement is to implement a system for dependent custom fields to enable dynamic linking between field options. Users should be able to establish relationships between different custom fields such that selecting a value in one field (e.g., ""Skill"") dynamically updates and filters the available options in another related field (e.g., ""Level""). For instance, when ""Skill A"" is chosen, only relevant levels (""Level E"", ""Level F"") should appear as options in the second field, streamlining data entry and ensuring data consistency across interconnected fields. This feature will enhance the platform's usability by accommodating contextual dependencies between data points."
3964,fp,534,37623,Add Parent task filter and column to Spent time,"Please, add column ""Parent Task"" to report ""Spent Time"".

Devs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report

!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!",27,5325,Add Parent Task to 'Group Results By' drop down,"I just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.

To replicate go to a project and choose ""Issues"" from the top menu.  Choose the ""options"" section and then open up the drop down menu for ""group results by"".  I have attached a screenshot.


---------------------
server info
---------------------
ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]
Rails 2.3.5
mysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1
redmine Revision: 3671
",0.5190932898404212,0.9,"Both tickets request enhancements related to including the ""Parent Task"" in different aspects of task management within an issue tracking system, presumably Redmine. The first ticket asks for a ""Parent Task"" column to be added to the ""Spent Time"" report, while the second ticket seeks to include ""Parent Task"" as an option in the ""Group Results By"" dropdown, allowing for better organization and analysis of tasks at a project level. Since both tickets aim to improve visibility and reporting around parent tasks, consolidating them would streamline the process of addressing user needs related to parent task handling.","* Subject: Enhance Parent Task Visibility in Reporting and Grouping
    * Description: To facilitate comprehensive tracking and analysis, enhance the system to include ""Parent Task"" as a new column in the ""Spent Time"" report and as an additional option in the ""Group Results By"" dropdown across projects. This will enable users to directly view and analyze time spent on tasks in relation to their parent stories, improving project oversight and understanding of work distribution without the need to manually open individual task records."
3972,fp,534,37623,Add Parent task filter and column to Spent time,"Please, add column ""Parent Task"" to report ""Spent Time"".

Devs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report

!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!",147,24942,"Additional ""Group by results"" option for parent task","The way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.

We then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.

To view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.

To improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.",0.5504226591103741,0.85,"Both tickets revolve around enhancing the visibility and usability of parent tasks in relation to spent time and organization. Ticket1 requests the addition of a ""Parent Task"" column in the ""Spent Time"" report to better track efforts on stories through their分解 tasks. Ticket2 seeks an ""Additional Group by results"" option for the parent task to improve the viewing experience of subtasks associated with features. The overlap lies in the need to better manage and visualize the parent-child task relationship.","* Subject: Enhance Parent Task Visibility in Time Tracking and Organization
    * Description: To facilitate more efficient tracking and organization of work efforts, enhance the system to include both a ""Parent Task"" column within the ""Spent Time"" report, allowing users to directly see the parent task associated with tracked time on tasks. Additionally, introduce an ""Group by Parent Task"" option in the results view to enable users to quickly整理 and view all subtasks grouped under their respective parent tasks, thereby streamlining the process of understanding the time spent on features or releases without the need for additional searches or opening individual tasks."
-1,fn-no-query,537,37674,Upgrade Admin/Users list to use the query system,"This patch series that was extracted from ""Planio"":https://plan.io/redmine-hosting introduces a UserQuery
and upgrades the Admin/Users list with corresponding filter, sort and (CSV) export capabilities.
Also introduced are a context menu and an option to delete multiple users at once. The third patch just
adds flash messages to the (single) user deletion operation, for symmetry with the messages rendered by the bulk delete.

This relates to issues #4295, #18193, #21055 (probably there are more I didn't find).",464,36659,"Add ""auth_source_id"" to GET request for Endpoint /users.:format","In our Redmine installation we have both local users and users from our LDAP service. It would be very helpful for our user management if we could filter for ""auth_source_id"" in a GET request for the endpoint /users.:format. 

Example:
GET /users.json?limit=100&auth_source_id=1

",0.40956671069986833,-1,,
4108,fp,542,37712,Tree view for issues list,"Dear all, please introduce tree view in issue list where it will be possible to expand/collapse subtask list. It will increase readability of issues list. 
In my case there are a lot of tasks with lot of subtasks and it is very hard to use it this way.",251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,0.6562342903104129,0.9,"Both requirements aim to improve the organization and readability of issues lists by incorporating hierarchical or nested structures. Ticket1 explicitly requests a tree view for expanding and collapsing subtasks, while Ticket2 suggests grouping issues by their parent issue, which would inherently create a similar structured view. The core objective of enhancing issue list navigation and visualization is shared between the two tickets, making them very similar and candidates for duplication.","* Subject: Enhanced Hierarchical View for Issues List
    * Description: Implement an enhanced hierarchical (tree) view in the issues list, allowing users to effortlessly expand and collapse subtasks under their respective parent issues. This feature will include an option in the group by functionality to select parent issues, thereby organizing the issues list into a clear, nested structure for improved readability and navigation, especially beneficial when managing projects with extensive task hierarchies."
4117,fp,542,37712,Tree view for issues list,"Dear all, please introduce tree view in issue list where it will be possible to expand/collapse subtask list. It will increase readability of issues list. 
In my case there are a lot of tasks with lot of subtasks and it is very hard to use it this way.",443,36328,Issue Tab - View Issue and all its descendants,"Hello,
I need to see an Issue with all its descendants.

Until now the nearest solution I found is filtering by:

""Parent task"" ""contains"" ""<root-issue-id>""

However this does not displays (by design) the parent task itself. 

Anyone knows a way to reach this goal?

Thank you.",0.6630648460670497,0.9,"Both requirements revolve around improving the visualization of issues and their subtasks within a project management or task tracking system. Ticket1 requests a tree view functionality to better manage and navigate through a hierarchy of issues and subtasks, emphasizing on improving readability. Ticket2 seeks a view that displays an issue along with all its descendant subtasks, which is essentially another way of describing a tree-like structure where one can see the full hierarchy from a parent issue down to its lowest subtask. The difference lies mainly in the specific user action (collapsing/expanding vs. filtering) but the underlying need for hierarchical visualization is the same.","* Subject: Enhanced Hierarchy View for Issues and Subtasks
    * Description: Implement an enhanced hierarchy view within the Issues List to improve visibility and navigation of issues and their associated subtasks. This feature should include both a tree view interface, allowing users to expand and collapse subtask lists for better readability, and a dedicated view option to display a selected issue along with all its descendants in a clear, structured layout. Users should be able to quickly switch between these views without the need for complex filters, enhancing the overall usability and efficiency when managing hierarchical tasks."
4118,fp,542,37712,Tree view for issues list,"Dear all, please introduce tree view in issue list where it will be possible to expand/collapse subtask list. It will increase readability of issues list. 
In my case there are a lot of tasks with lot of subtasks and it is very hard to use it this way.",454,36448,Option to group subtasks within task in issue list,"As one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.

Please add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)
",0.7015786339694227,0.9,"Both requirements aim to improve the organization and readability of the issue list, specifically focusing on better visual representation and handling of subtasks. Ticket1 requests a tree view to expand and collapse subtasks, while Ticket2 suggests an option to group subtasks within their parent task consistently, addressing an issue with sorting. The underlying goal of both tickets is closely aligned, hence a high probability of duplication.","* Subject: Enhanced Visualization & Grouping of Subtasks in Issue List
    * Description: To enhance the usability and readability of the issue list, implement an improved view that allows users to both expand and collapse subtasks in a tree structure and ensures consistent grouping of subtasks under their respective parent tasks, regardless of the sorting order applied. This feature will provide a clear hierarchical overview, facilitating easier navigation and management, especially in cases with numerous tasks and subtasks."
4121,tp,544,37717,"""Show completed versions"" by default","It would be useful not only to be able to show completed versions by default, but to separate _closed_ versions from _completed_ versions.
In my case, we put out versions at irregular intervals so we can have a version that's completed, but won't come out for a few weeks. In the meantime, I have to click ""Show completed versions"" everytime I want to see it, and I get _all_ versions, including the closed ones.",74,13670,Configure display of completed versions by default,"is there any method to show completed version in roadmap by default ?
",0.5998304853569719,0.9,"Both tickets essentially request the ability to display completed versions by default in a roadmap or similar view. The first ticket further suggests a distinction between closed and completed versions, which adds a slight variation but does not fundamentally change the core requirement. Given the significant overlap in the primary request, it's advisable to merge these tickets to avoid redundancy and ensure a unified development focus.","** Subject: Default Display of Completed Versions with Optional Closed Version Filtering
    ** Description: Enhance the system to show completed versions by default in the roadmap view. Additionally, provide an option to separately filter or exclude closed versions from the display, allowing users to focus on either completed versions awaiting release or those that are actively relevant without manual toggling each time the view is accessed."
4123,fp,544,37717,"""Show completed versions"" by default","It would be useful not only to be able to show completed versions by default, but to separate _closed_ versions from _completed_ versions.
In my case, we put out versions at irregular intervals so we can have a version that's completed, but won't come out for a few weeks. In the meantime, I have to click ""Show completed versions"" everytime I want to see it, and I get _all_ versions, including the closed ones.",125,23855,Target version filter should get an entry 'All open versions',"_This is my request #10412-20 as an own issue:_

The filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.",0.6049835485759876,0.85,"Both tickets are related to improving the visibility and filtering of versions in a project management or issue tracking system, with a focus on distinguishing between completed and open versions. Although the specific functionalities suggested are slightly different—one ticket requests showing completed versions by default and separating them from closed ones, while the other asks for a filter option for all open versions—the underlying intent to better manage and view version statuses overlaps significantly. Combining these tickets into a single enhancement request would streamline the process and address the comprehensive need for more efficient version control.","** Subject: Enhanced Version Filtering and Visibility Options
    ** Description: Improve the version management interface to provide users with more intuitive and customizable visibility options by default and within filters. This includes (1) an option to show completed versions by default with a clear distinction between completed and closed versions, allowing users to easily view upcoming releases that are completed but not yet released; and (2) introduce a new filter entry, 'All open versions,' enabling users to quickly select and view all versions that are still active or in progress. These enhancements will facilitate efficient query saving and overall project management by streamlining the process of accessing and differentiating version statuses."
4196,fp,555,37941,Add non-members as watchers,"It's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.

Redmine version                4.2.1.stable
",45,8629,Allow assigning issues and/or watcher status to authenticated non members,"This feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.

Our redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.

Since we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.

But while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.

As a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.

This work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.

While this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.

 


",0.6954577997315937,0.9,"Both tickets essentially request the ability to involve users who are not members of a project in issue tracking by assigning them tasks or adding them as watchers. Although the descriptions provide different use-case contexts and one ticket (Ticket2) includes additional suggestions for interface improvements (sorting, grouping, expanding/collapsing lists), the core requirement overlaps significantly. The secondary suggestions in Ticket2 can be considered enhancements to the primary feature requested in both tickets.","** Subject: Enhance Collaboration with Non-Member Assignment and Watching
    ** Description: To facilitate collaboration across projects without the need for full membership, implement functionality allowing authenticated non-members to be assigned issues and added as watchers. This will include improvements to the user interface by sorting assignee and watcher lists by role with expandable/collapsible sections for easier management, enhancing the efficiency of involving external parties in issue tracking processes."
4215,fp,555,37941,Add non-members as watchers,"It's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.

Redmine version                4.2.1.stable
",231,28614,Issue Watcher view Issue when not in project group,"Hi, 

is there a way to let watcher view issues that they are not assigned to the projekt. 

best",0.646008854777233,0.95,"Both tickets essentially request the same functionality, which is to allow users who are not members of a project to be added as watchers for issues within that project and have the necessary visibility to view those issues. The first ticket emphasizes the process of adding non-members as watchers without the need to include them in the project, while the second ticket focuses on enabling watchers to view issues even if they are not part of the project group. These are two sides of the same feature request.","* Subject: Enhance Watcher Functionality for Non-Project Members
    * Description: Implement a feature that enables adding any user within the organization as a watcher to an issue, regardless of their membership status in the associated project. This enhancement will grant these non-project member watchers the necessary permissions to view and receive updates about the issues they are watching, without the need to formally add them to the project. This will facilitate better collaboration and information sharing across the organization, especially in large setups where not all stakeholders need full project access."
4285,fp,558,37973,Enable to display watches count on issues list,nan,482,36848,"API  allow display ""watchers""  when listing several issues","Hello
 
The Redmine API  allow listing ""watchers"" when returning an issue(""/issues/{id}.json?include[]=watchers""),
but not when listing several issues(""/issues.json?include[]=watchers"").
We propose this feature in this PR (https://github.com/redmine/redmine/pull/136).
Thank you for your help.",0.659762741033918,0.9,"Both requirements revolve around displaying the ""watchers"" or ""watches count"" on issues lists, with Ticket1 focusing on the user interface aspect and Ticket2 specifying the need for this functionality via the Redmine API when listing multiple issues. Since the core intent is the same - enhancing visibility of watchers on issues lists - these tickets can be considered very similar and merged.","* Subject: Enhance Watchers Visibility in Issues List and API Responses
    * Description: Improve the system to display the number of watchers on the issues list within the user interface and enable the Redmine API to include watcher information when retrieving a list of issues, not just when fetching a single issue. This update will ensure consistent visibility of watchers across the platform and through API endpoints, facilitating better project management and collaboration. A proposed solution has been initiated in this PR (https://github.com/redmine/redmine/pull/136) and requires integration."
4291,fp,559,37978,New email notification option - Only for things I watch,"Currently there is no way to stop receiving notifications on an issue I'm no longer have interest in. Because I'm always involved, the owner or assigned to.
With this option I would receive notifications only for issues I'm activelly watching.
",208,27677,New notfication settings value in role setting ,"it's possible to implement a fourth value for notifications type in role setting -> issue visibility -> ""issue created by or assigned to the user or user is watcher"" ? 

In a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?

Thanks and best regards, 
Heiko

",0.6045910994569308,0.85,"Both tickets are related to enhancing email notification options for users, specifically focusing on receiving notifications only for issues they are actively watching or involved in. Although the descriptions approach the request from slightly different angles, the core intention behind both tickets is very similar. Ticket1 emphasizes personal notification preferences, while Ticket2 suggests a system-level change to notification settings to achieve a similar outcome. Given the overlap in desired functionality, it's recommended to consolidate these into a single ticket.","* Subject: Enhanced Email Notification Option for Watched Issues
    * Description: Implement a new email notification setting that allows users to receive notifications exclusively for issues they are actively watching or are directly involved in (as creator, assignee, or explicitly added watcher). This will include adding a fourth value in role settings under issue visibility, labeled ""Issues created by, assigned to, or watched by the user,"" enabling users to stay updated on relevant issues without receiving unnecessary notifications for other matters they no longer wish to follow."
4301,fp,561,38026,Set custom field value on specific state,"Dear all,
is it possible to set a custom field value on reaching specific state.
E.g. Reset a custom field if ticket status is reassigned to ""New""
Thank you very much
Best Regards",545,37724,Set custom fields on state,"Dear all,
is it possible to set a custom field value on reaching specific state.
E.g.
Reset a custom field if ticket status is reassigned to ""New""
Thank you very much
Best Regards",0.9849992366020235,0.95,"The two tickets have nearly identical subjects and descriptions, both asking about setting a custom field value based on a specific state change (reassigning a ticket to ""New""). The only difference is a minor wording variation in the subject. Since the core request is the same, it's highly likely that these tickets are duplicates.","* Subject: Set Custom Field Value upon State Change to ""New""
    * Description: 
        Dear Support,
        We would like to automate the process of setting a custom field value when a ticket's status is changed to ""New"". Specifically, we need a mechanism to reset or update a custom field automatically whenever a ticket is reassigned to the ""New"" state. Could you please assist us in implementing this functionality?
        Many thanks and kind regards."
4316,fp,563,38065,permissions in custom fields for time entries,"Hello

For fields and custom fields in issues you can assign permissions, e.g. some roles can only read fields, not edit them.
Is there a way to have this functionality also in custom fields for time entries?

I can set the visibility of the time entry fields for different roles, but all should be able to see it, only not all should be allowed to edit.

kind regards
Irmgard",164,25746,Spent time - CUSTOM fields - permissions,"Dears,

first of all thanks a lot for all the effort!

We really appreciate ""Issue custom fields permissions"" possibility settings.

Could you please implement the same feature/approach for ""Spent time custom fields""? I believe this could help a lot for many redmine users and the approach/code could be reused.

We need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.

Do you understand our needs? Any questions please? Can I help you somehow with this?

Thanks a lot
Kind regards
jb",0.6136614152151137,0.95,"Both tickets are requesting similar functionality, specifically the implementation of permission controls for custom fields related to time entries. They mention the desire to have permissions akin to those available for issue custom fields, allowing restriction of editing and/or visibility of certain custom fields based on user roles. Given the substantial overlap in subject matter and the nearly identical feature request, it is highly recommended to treat these as duplicates.","* Subject: Custom Field Permissions for Time Entries
    * Description: Implement customizable permission settings for time entry custom fields, mirroring the existing functionality for issue custom fields. This will allow administrators to define granular permissions controlling which user roles can view and/or edit specific time entry custom fields. Additionally, enable the option to make certain fields mandatory based on the issue's stage/status and the user's permissions, further enhancing workflow management and data control within the system."
4320,fp,563,38065,permissions in custom fields for time entries,"Hello

For fields and custom fields in issues you can assign permissions, e.g. some roles can only read fields, not edit them.
Is there a way to have this functionality also in custom fields for time entries?

I can set the visibility of the time entry fields for different roles, but all should be able to see it, only not all should be allowed to edit.

kind regards
Irmgard",276,31859,Per role visibility settings for spent time custom fields,"Based on the work made by Jens Krämer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).

",0.7000018144904986,0.85,"Both tickets revolve around the concept of custom fields for time entries and controlling permissions or visibility based on user roles. The first ticket is a request for the functionality to assign permissions to these fields, while the second ticket appears to be a development update or contribution addressing the visibility of spent time custom fields per role. Given the substantial overlap in subject matter and the direct relation between the request and the solution proposed, it's highly likely that these tickets address the same core issue.","** Subject: Enhanced Role-Based Permissions for Time Entry Custom Fields
    ** Description: Implement a feature that extends the current permission system to include custom fields for time entries, allowing administrators to set specific roles with read-only or edit access to these fields. This will ensure granular control over who can view and modify time-related custom field data, enhancing data security and workflow management within the system. The functionality should be consistent with existing permissions for regular issue fields and include options to configure visibility and editability independently for a seamless user experience."
4330,fp,564,38099,Add Ruby 3.2 support,nan,328,34992,Ruby 3.0 support,"Ruby 3.0.0 has been released on 25 Dec 2020.
https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/
",0.62920485162141,0.8,"The two requirements are related to adding support for different versions of Ruby. Since both tickets concern updating the system to accommodate newer Ruby versions, they can be considered similar in nature. However, it's important to note that Ticket1 specifically mentions Ruby 3.2, while Ticket2 refers to Ruby 3.0. Given the sequential nature of software versions and the likelihood that supporting a newer version (3.2) would implicitly include supporting the older one (3.0), these tickets could potentially be combined with a focus on a broader range of support or a more general approach to keeping the software up-to-date with Ruby releases.","* Subject: Update to Support Ruby 3.x Series
    * Description: Enhance the system to officially support the latest Ruby 3.x series, including but not limited to versions 3.0.0 and 3.2. This update will ensure compatibility with the newest features, performance improvements, and security enhancements introduced in the Ruby 3.x release cycle, starting from Ruby 3.0 released on 25 Dec 2020 and continuing through subsequent minor versions."
4332,fp,564,38099,Add Ruby 3.2 support,nan,434,36205,Ruby 3.1 support,"net/* libraries were gemified, see https://bugs.ruby-lang.org/issues/5481

<pre><code class=""diff"">
diff --git a/Gemfile b/Gemfile
index 949fe86d2..624d40216 100644
--- a/Gemfile
+++ b/Gemfile
@@ -26,6 +26,12 @@ gem 'tzinfo-data', platforms: [:mingw, :x64_mingw, :mswin]
 gem 'rotp'
 gem 'rqrcode'
 
+unless Gem.ruby_version < Gem::Version.new('3.1.0')
+  gem 'net-smtp', '~> 0.3.0'
+  gem 'net-imap', '~> 0.2.2'
+  gem 'net-pop', '~> 0.1.1'
+end
+
 # Optional gem for LDAP authentication
 group :ldap do
   gem 'net-ldap', '~> 0.17.0'
</code></pre>",0.5658356607425595,0.9,"The two tickets are related to adding support for different versions of Ruby. Ticket1 asks for Ruby 3.2 support, while Ticket2 specifically addresses additions made for Ruby 3.1, particularly focusing on changes to the `net/*` libraries which were gemified. Since the underlying theme of both tickets is updating the system to be compatible with newer Ruby versions and their respective changes, they are very similar in nature. It would be efficient to consolidate them into a single requirement that encompasses support for both Ruby 3.1 and 3.2, acknowledging the necessary adjustments like the gemification of `net/*` libraries as part of the upgrade process.","** Subject: Add Ruby 3.1 and 3.2 Support
    ** Description: Update the application to ensure compatibility and full support for both Ruby 3.1 and 3.2. This includes incorporating necessary adjustments such as the gemification of `net/*` libraries (e.g., `net-smtp`, `net-imap`, `net-pop`) as introduced in Ruby 3.1 to align with the updated standards and functionalities of these Ruby versions."
4376,fp,569,38173,"Increase limit of entries in json/xml and, preferably, make it configurable","Currently there is a limit on how many entries could be returned by JSON/XML API in one batch - 100 entries. This limit is hardcoded in Redmine core. Such a low limit makes requests to Redmine to be affected by RTT + it could put more load on DB. 

The question is why this limit it not set to at least 500 (the default value for number of entries exported via CSV export API). Could this limit be made configurable just like for CSV?",89,16069,Allow configuration of API limit instead of hardcoding at 100,"The below tested patch makes the previously harcoded limit of 100 items in a RESTful API response configurable in the Administration GUI. The default value is still 100. This is based on 2.4.1.stable.

This is quite useful since it is nice and simple to just get the full response in a single page rather than having to traverse pagination, and a limit of a bit more than 100 is still very performant for many sites -- the limit beyond which performance starts to degrade really depends on the particular site's usage, so should be controllable by the local administrator.

<pre><code class=""diff"">
Index: app/controllers/application_controller.rb
===================================================================
--- app/controllers/application_controller.rb       (.../trunk/app) (revision 13385)
+++ app/controllers/application_controller.rb       (.../branches/code-8112/app)    (revision 13389)
@@ -519,8 +519,8 @@
     limit = options[:limit].to_i
     if limit < 1
       limit = 25
-    elsif limit > 100
-      limit = 100
+    elsif limit > Setting.api_limit.to_i
+      limit = Setting.api_limit.to_i
     end
     if offset.nil? && options[:page].present?
       offset = (options[:page].to_i - 1) * limit
Index: app/views/settings/_general.html.erb
===================================================================
--- app/views/settings/_general.html.erb    (.../trunk/app) (revision 13385)
+++ app/views/settings/_general.html.erb    (.../branches/code-8112/app)    (revision 13389)
@@ -24,6 +24,8 @@
 
 <p><%= setting_select :wiki_compression, [['Gzip', 'gzip']], :blank => :label_none %></p>
 
+<p><%= setting_text_field :api_limit, :size => 6 %></p>
+
 <p><%= setting_text_field :feeds_limit, :size => 6 %></p>
 
 <p><%= setting_text_field :file_max_size_displayed, :size => 6 %> <%= l(:""number.human.storage_units.units.kb"") %></p>
Index: config/settings.yml
===================================================================
--- config/settings.yml        (revision 13387)
+++ config/settings.yml        (revision 13389)
@@ -73,6 +73,9 @@
   default: localhost:3000
 protocol:
   default: http
+api_limit:
+  format: int
+  default: 100
 feeds_limit:
   format: int
   default: 15
Index: config/locales/en.yml
===================================================================
--- config/locales/en.yml      (revision 13387)
+++ config/locales/en.yml      (revision 13389)
@@ -352,6 +352,7 @@
   setting_host_name: Host name and path
   setting_text_formatting: Text formatting
   setting_wiki_compression: Wiki history compression
+  setting_api_limit: Maximum number of items returned in a JSON/XML API response
   setting_feeds_limit: Maximum number of items in Atom feeds
   setting_default_projects_public: New projects are public by default
   setting_autofetch_changesets: Fetch commits automatically

</code></pre>",0.6314487810026771,0.95,"Both tickets essentially request the same feature, which is to make the limit of entries returned by the JSON/XML API configurable instead of being hardcoded. Ticket1 proposes increasing the limit and making it configurable, while Ticket2 provides a specific implementation example for this change. Since the core issue and desired outcome are identical, these tickets should be considered duplicates.","** Subject: Make API response limit configurable
    ** Description: Currently, the JSON/XML API has a hardcoded limit of 100 entries per response, which can lead to increased latency and database load due to the need for pagination. This requirement proposes enhancing the system by allowing the API response limit to be configurable through the Administration GUI. By introducing a configurable setting, administrators will be able to set a limit that is suitable for their specific site's performance capabilities, thus improving efficiency and usability. The default value for this new setting should be 100 to maintain current functionality, but it should allow for adjustment to accommodate needs for larger data batches while considering individual site performance."
4378,fp,569,38173,"Increase limit of entries in json/xml and, preferably, make it configurable","Currently there is a limit on how many entries could be returned by JSON/XML API in one batch - 100 entries. This limit is hardcoded in Redmine core. Such a low limit makes requests to Redmine to be affected by RTT + it could put more load on DB. 

The question is why this limit it not set to at least 500 (the default value for number of entries exported via CSV export API). Could this limit be made configurable just like for CSV?",295,33526,Add possibility to configure limit used to retrieve objects for an API response,"In file app/controllers/application_controller.rb:
<pre>
  # Returns offset and limit used to retrieve objects
  # for an API response based on offset, limit and page parameters
  def api_offset_and_limit(options=params)
    if options[:offset].present?
      offset = options[:offset].to_i
      if offset < 0
        offset = 0
      end
    end
    limit = options[:limit].to_i
    if limit < 1
      limit = 25
    elsif limit > 100
      limit = 100
    end
    if offset.nil? && options[:page].present?
      offset = (options[:page].to_i - 1) * limit
      offset = 0 if offset < 0
    end
    offset ||= 0
    [offset, limit]
  end
</pre>
The value of the limit is hardcoded to 100.
It's very long to get for example 20000 objects - 200 requests in ~3 minutes. But it's faster with hardcoded limit 10000 - ~20 seconds only.

Please, add possibility to configure limit used to retrieve objects for an API response.

Thanks!",0.5467671986531716,0.95,"Both tickets essentially request the same feature: making the limit on the number of entries returned by the JSON/XML API configurable. Ticket1 specifically mentions the existing hardcoded limit of 100 entries and suggests increasing it, preferably to a configurable value. Ticket2 also points out the hardcoded limit issue and asks for the ability to configure this limit. The descriptions differ slightly in their examples and details, but the core requirement is identical.","* Subject: Make API response entry limit configurable
    * Description: Currently, the JSON/XML API has a hardcoded limit of 100 entries per batch response, which can lead to increased latency and unnecessary database load due to the need for multiple requests. To improve efficiency and flexibility, implement a configuration option that allows users to set the limit for the number of entries returned in a single API response. This new configuration should override the existing hardcoded limit and provide a more versatile user experience, accommodating different use cases that may require larger batches of data to be retrieved efficiently. The default limit should be reconsidered as well to better align with other export formats like CSV, which defaults to 500 entries."
4384,fp,571,38200,Percent completed on a specific date,"s it possible to display the percentage of readiness for a specific date?
For example: in the list of tasks, display the percentage at the beginning of the month (week) and the current percentage of completion. This function would be convenient for analyzing the progress of work on a task.",554,37935,Can Gantt chart shows the done rate by week?,"for example : a job is scheduled for two weeks,week1 I have done 40%,week2 I have done 60%.
Can gantt chart shows the done rate by week? not just show the whole done rate (100%) in the end",0.520141786289289,0.9,"Both requirements revolve around displaying the progress or completion rate of tasks over a specific period (weekly or at a given date). While Ticket1 focuses on presenting the percentage of readiness at the start and current status of a task within a week or month, Ticket2 specifically asks for the done rate by week in a Gantt chart context. The underlying need for progress tracking on a weekly basis is shared, hence they can be consolidated to address the common goal more efficiently.","* Subject: Display Progress Percentage by Week in Task List and Gantt Chart
    * Description: Implement a feature that visually represents the progress or completion percentage of tasks on a weekly basis both within the task list and on the Gantt chart. Users should be able to see the initial percentage of readiness at the start of each week and the updated percentage at the end or during the week, facilitating a granular analysis of work progress over time. This will allow for better monitoring and understanding of task advancements compared to planned schedules."
4386,fp,575,38238,Auto watch issues on issue creation,"Similar to #4347 we propose adding an option to watch issues the user created. This would allow users to more finely control which issues they want to be notified about rather than having to select the ""only owner"" or ""only my events"" and receiving notifications for all the issues the user created. This will also allow in the future to replace the mail notification options with only having auto watching options.",10,1737,autowatch issues,"i'd very much like to have a feature similar to Patch #222. that is, a per-user option to:

* ""auto-watch issues i've modified"" (i.e., autowatch if i create or modify an issue)
* ""auto-watch issues assigned to me""

Unlike Balazs (author of Patch #222), i'd want users to be able to choose their own ""autowatch"" policy.

Other than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?",0.7166361267098152,0.9,"Both requirements revolve around the concept of automatically watching issues under certain conditions related to user actions. Ticket1 focuses on watching issues the user has created, while Ticket2 extends this idea by including issues the user has modified or been assigned to, with a personalized preference setting for each user. The core intention of enhancing user control over issue notifications is shared between the two, making them very similar in nature.","* Subject: Implement User-configurable Auto-watch for Issues
    * Description: Develop a feature enabling users to set individual preferences for automatically watching issues based on their involvement. This should include options to:
        - Automatically watch issues upon creation by the user.
        - Automatically watch issues when the user modifies them.
        - Automatically watch issues assigned to the user.
    Users should have granular control over these settings, allowing them to select which of these actions will trigger the auto-watch functionality. This enhancement aims to streamline notification preferences and ensure users are kept informed about relevant updates without unnecessary notifications, potentially replacing outdated mail notification configurations with a more dynamic auto-watch system."
4428,tp,576,38255,Filter free and paid plugins in the plugin directory,"Hi all,

there are numerous plugins in the plugin directory that are either demo or trial versions or otherwise limited, pushing the users to buy the full (paid) version of the plugins.
I have no grudge against them as these are also great and well supported software, but finding open-source and free plugins really gets cumbersome because of them.

My proposal: create tags and/or categories (or similar) for all the plugins and create filtering based on this information. (maybe like the compatible Redmine version dropdown)

Thank you for considering my proposal, please feel free to comment, and if I can help in any way, I'll try. (although I  have a very limited understanding of the technical workings of this system).
If I've opened my issue at the wrong spot, feel free to point me in the right direction. 

Thank you,
Vendel",90,17689,De-List or cleraly mark commercial plugins,"I keep getting complaints by mail about easyredmine non-free plugins in our directory and there are similar complaints on the forums (message#37931).

The issues at hand are with plugnis that
* are not free (as in beer)
* are not free (as in freedom)
* just don't work with vanilla redmine and only work in some kind of fork

There are entries in our plugin index that are nothing more than free advertising space for companies, including but not limited to

* http://www.redmine.org/plugins/redmine_luxury_buttons (*paid*)
* http://www.redmine.org/plugins/redmine_kpi (*paid*)
* virtually _all_ plugins by Petr Pospisil / EasyRedmine (example: http://www.redmine.org/plugins/virtuemart-integration) (*paid*, *incompatible*)

I'd like a statement from the team regarding these proposals:
* Remove all plugins that only work in some kind of fork
* Mark all commercial plugins with a very, very big ""$"" sign - or remove them from the index

-- jan

PS: In contrast to those commercial-only plugins are those like this one by Kirill Bezrukov:
http://www.redmine.org/plugins/redmine_agile

It's a paid plugin, but a ""light"" version available, IMHO that's the way to and those should explicitly _not_ be removed.
",0.6795087552387241,0.85,"Both tickets address the issue of distinguishing between free and paid plugins within the plugin directory. While Ticket1 suggests implementing a tagging or categorization system to filter plugins based on their payment model and features, Ticket2 focuses more on de-listing or clearly marking commercial plugins, especially those incompatible with vanilla Redmine or functioning as mere advertisements. Despite the slight difference in approach, the core issue overlaps significantly, hence a合并 recommendation.","* Subject: Enhance Plugin Directory with Clear Categorization & Marking of Free/Paid Plugins
    * Description: To improve user experience and transparency in the plugin directory, implement a unified system that categorizes and visually marks plugins according to their licensing and compatibility status. This would involve:

        1. Creating tags and categories for plugins indicating whether they are free, offer a free version with additional paid features, or are completely paid.
        2. Introducing a prominent visual indicator (e.g., ""$"" symbol) for commercial plugins, distinguishing them from fully open-source and free alternatives.
        3. Filtering functionality to allow users to easily find plugins based on their free/paid status and compatibility with vanilla Redmine.
        4. Reviewing and potentially removing plugins that exclusively function with forks of Redmine or serve solely as advertisement platforms without providing tangible value within the Redmine ecosystem.

This approach ensures a balanced ecosystem where both free and paid plugins coexist transparently, facilitating informed decisions for users while maintaining the directory's integrity and usefulness."
4473,fp,581,38298,Refresh before edit,"When a ticket has been open for some time in a browser tab, it is often the case that the ticket has been changed since the last refresh.
It would be nice if there were a check and refresh before entering the edit: this would avoid the merge/resolution dialog at the end of the edit in many cases.
This would also avoid a much worse case: if the connection had been timed-out beforehand, the edit still takes place, but the data entered are then lost.
So an automatic refresh beforehand would be a very nice feature...",342,35229,SSE refresh,"Hi,
I tried quite long time to developed solution how automatically refresh issue's notes without refreshing whole page.

I tested soulution via AJAX or JS with refreshing only DIV ""history"" using timer. For example:
<pre>
$(document).ready(function(){
setInterval(function(){
      $( ""#history"" ).load(window.location.href + "" #history."");
      /*$( ""#tab-content-history"").load(window.location.href + "" #tab-content-history.tab-content"");*/
}, 30000);
});
</pre> 
It doesn't work how I expacted. Page is refreshed, but notes don't show. 
I tested for example plugin redmine_refresh.

But I think it exists better way how it solved. I'm aiming on Server-Sent Event. gem ld-evensource

How I imagine it can works - focused on issue-detail page:
On server running ""services"" who listen changes on issues (create issue, update issue, ...). 

If issue is new, then work as normal (like now).
If issue is updated, then check attributes which was changed and journal has no notes, then reload div #history, show tab History and Changes
If issue is updated, then check attributes which was changed and journal has note, then reload div #history, show tabs History, Notes and Changes and show note.

Maybe I forgot some stuff.

I would like to create discussion about this problem, so come to talk about it. I appreciate it. :-) Redmine is great, but this feature will send him on Olymp... :-)

Feel free for question. 

With best regards 
David
  ",0.6091902202895033,0.85,"Both tickets address the issue of refreshing ticket information to ensure users are working with the most up-to-date data. While Ticket1 focuses on preventing conflicts during editing by suggesting a pre-edit check and refresh, Ticket2 proposes implementing Server-Sent Events (SSE) for real-time updates specifically on the issue notes section. The underlying goal of both tickets—improving the user experience by providing current data before making edits—is the same. Thus, they can be combined into a single requirement that encompasses both the edit process and real-time updates on the issue detail page.","* Subject: Real-time Data Refresh for Ticket Editing & Notes
    * Description: Implement a system-wide mechanism to ensure users are working with the latest ticket information, minimizing data conflicts and loss during editing. This will involve:

    - Automatically checking for and refreshing ticket details before entering the edit mode to prevent merge/conflict resolutions and loss of input due to timeouts.
    - Utilizing Server-Sent Events (SSE) technology to enable real-time updates of the issue notes section on the issue detail page, eliminating the need for manual page refreshes.
    - Enhancing the refresh functionality to intelligently display relevant tabs (History, Notes, Changes) when updates occur, based on whether notes have been added or just issue attributes have changed.

This combined approach will significantly improve the user experience by ensuring seamless collaboration and reducing the chances of losing work due to outdated information."
4633,fp,587,38353,Custom templates for email notifications,"Currently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.
I want to have possibility to create filters in my mail client to sort different notifications using different rulles.

It will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:

* I added some templates in localization file looking like:

<pre>
  # project - project name
  # tracker - tracker name
  # id      - issue id
  # status  - issue status
  # subj    - issue title
  # from    - user made changes
  # to      - assigned to
  mail_subject_issue_new: 'ISSUE NEW: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'
  mail_subject_issue_update: 'ISSUE UPDATE: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'

  # no args
  mail_subject_test: 'Remine test message'
</pre>

* Changed code in ""Redmine\app\models\mailer.rb"" to use them like this:

<pre>
    s = l( ""mail_subject_issue_new"", 
           project:    issue.project.name, 
           tracker:    issue.tracker.name, 
           id:         issue.id, 
           status:     issue.status.name, 
           subj:       issue.subject,
           from:       issue.author.name,
           to:         issue.assigned_to.name )

    mail :to => user,
      :subject => s
</pre>

Now I have possibility to easy change subject templates as I need.

May be you found this way to implement this feature easy enought to add such changes.

In attachments both changed files.
All based on current trunk version and works on:

<pre>
 Redmine version                5.0.5.stable
  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]
  Rails version                  6.1.7.2
  Environment                    production
  Database adapter               Mysql2
  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter
  Mailer delivery                sendmail
</pre>

",80,13981,Abilty to configure subject of email,"It would be nice to be able to configure the subject of an email.

Sequence now: [""Project"" - ""Tracker"" #""Number""](""Status"")""Subject""

=> the whole sequence should be configurable, f.e.: [""Project"" - ""Subject""] #""Number""

",0.6852564939175498,0.9,"Both tickets essentially request customization of email notification subjects to improve organization and automation capabilities. The first ticket provides a detailed implementation example for customizing both the subject and body, whereas the second ticket specifically focuses on configuring the email subject. Given the significant overlap in the desired outcome, it's advisable to consolidate these tickets to address the broader demand for customizable email templates, including the subject line.","* Subject: Customizable Email Notification Templates
    * Description: Users require the ability to customize email notification templates, including both the subject and body, to enhance the intuitiveness, usability, and automation compatibility. This feature should allow for configurable subject formatting, such as adjusting the sequence to include ""Project,"" ""Tracker,"" ""Number,"" ""Status,"" and ""Subject"" as per individual needs. Additionally, users should be able to define custom mail templates within the localization files or a dedicated settings interface, enabling easy modification and personalization of email content for better sorting and filtering using mail client rules."
4641,fp,587,38353,Custom templates for email notifications,"Currently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.
I want to have possibility to create filters in my mail client to sort different notifications using different rulles.

It will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:

* I added some templates in localization file looking like:

<pre>
  # project - project name
  # tracker - tracker name
  # id      - issue id
  # status  - issue status
  # subj    - issue title
  # from    - user made changes
  # to      - assigned to
  mail_subject_issue_new: 'ISSUE NEW: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'
  mail_subject_issue_update: 'ISSUE UPDATE: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'

  # no args
  mail_subject_test: 'Remine test message'
</pre>

* Changed code in ""Redmine\app\models\mailer.rb"" to use them like this:

<pre>
    s = l( ""mail_subject_issue_new"", 
           project:    issue.project.name, 
           tracker:    issue.tracker.name, 
           id:         issue.id, 
           status:     issue.status.name, 
           subj:       issue.subject,
           from:       issue.author.name,
           to:         issue.assigned_to.name )

    mail :to => user,
      :subject => s
</pre>

Now I have possibility to easy change subject templates as I need.

May be you found this way to implement this feature easy enought to add such changes.

In attachments both changed files.
All based on current trunk version and works on:

<pre>
 Redmine version                5.0.5.stable
  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]
  Rails version                  6.1.7.2
  Environment                    production
  Database adapter               Mysql2
  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter
  Mailer delivery                sendmail
</pre>

",209,27680,Changing Subject Line in email notification when an issue is created or updated,"Currently the format is as follows:

<pre>
[ProjectName - Task #4983] (Closed) Email Notification Test1
</pre>

For email security reasons, we would like to add '#' at the beginning of the subject line:

<pre>
#[ProjectName - Task #4983] (Closed) Email Notification Test1
</pre>

Is it possible?  If so, then how?

Thanks,
Shakeel Masood
MegaChips Technology America,
San Jose, CA 95134, USA.

",0.6048935737682115,0.8,"Both tickets concern the customization of email notification subjects. While Ticket1 asks for more extensive customizability through templates, Ticket2 specifically requests a minor adjustment to the subject line format. The underlying theme of modifying email subject lines to meet specific needs is shared between the two tickets, suggesting that addressing Ticket1's request would inherently resolve Ticket2's concern as well.","* Subject: Enhanced Customization for Email Notification Subjects
    * Description: Users require greater flexibility in customizing the subject lines of email notifications to accommodate various needs, including improved automation sorting and enhanced email security measures. This feature should allow for the creation of customizable mail templates that can modify not only the format of the subject line but also accommodate specific requirements such as adding prefixes (e.g., '#') or changing the positioning of issue details. The system must provide an interface for administrators to easily manage these templates without direct code modification, ensuring compatibility across different notification types (issue creation, update, etc.) and maintaining compatibility with the current Redmine version and its standard database adapters and mailer configurations."
4664,fp,587,38353,Custom templates for email notifications,"Currently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.
I want to have possibility to create filters in my mail client to sort different notifications using different rulles.

It will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:

* I added some templates in localization file looking like:

<pre>
  # project - project name
  # tracker - tracker name
  # id      - issue id
  # status  - issue status
  # subj    - issue title
  # from    - user made changes
  # to      - assigned to
  mail_subject_issue_new: 'ISSUE NEW: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'
  mail_subject_issue_update: 'ISSUE UPDATE: by ""%{from}"" for ""%{to}"" %{status} in ""%{project}"": %{subj}'

  # no args
  mail_subject_test: 'Remine test message'
</pre>

* Changed code in ""Redmine\app\models\mailer.rb"" to use them like this:

<pre>
    s = l( ""mail_subject_issue_new"", 
           project:    issue.project.name, 
           tracker:    issue.tracker.name, 
           id:         issue.id, 
           status:     issue.status.name, 
           subj:       issue.subject,
           from:       issue.author.name,
           to:         issue.assigned_to.name )

    mail :to => user,
      :subject => s
</pre>

Now I have possibility to easy change subject templates as I need.

May be you found this way to implement this feature easy enought to add such changes.

In attachments both changed files.
All based on current trunk version and works on:

<pre>
 Redmine version                5.0.5.stable
  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]
  Rails version                  6.1.7.2
  Environment                    production
  Database adapter               Mysql2
  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter
  Mailer delivery                sendmail
</pre>

",551,37873,How to modify an email template,"The email notification about an issue update contains two parts:
# 1.information from journal what have changed
# 2.issue overview 

Sometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:
How to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?

Redmine version: 4.0.2-1
",0.6845570790725066,0.8,"Both tickets revolve around the customization of email notification templates in Redmine, indicating a strong similarity in their core objective. Ticket1 provides a detailed example of how the user has manually adjusted the system to incorporate custom mail templates, while Ticket2 seeks guidance on modifying the email template, particularly focusing on removing a section and potentially adding custom content. Given that the underlying desire for customization is the same, it would be beneficial to consolidate these tickets to address the broader need for enhanced email template customization options.","* Subject: Enhanced Customization Options for Email Notification Templates
    * Description: Users have expressed a desire for more flexibility in customizing email notifications within Redmine. This includes the ability to:

        1. Create and apply custom templates for both the subject and body of email notifications, allowing for personalization and improved automation support.
        2. Modify the existing email structure by adding/removing sections such as issue overview, details of changes, etc., to cater to varying informational needs.
        3. Implement these customizations without requiring direct code modifications to ensure ease of use and maintainability across different Redmine installations and versions.

The implementation should consider a user-friendly interface for managing these templates and ensure compatibility with Redmine versions starting from 4.0.2 onwards, accounting for differences in the underlying Rails and Ruby environments."
4681,tp,589,38357, Request for limitation of byte number to custom field,"Currently, custom fields have limitation only for number of characters.
We would like you to add limitation of byte number for operation of redmine with our production system.

Japanese has full-width characters(2bytes) and half-width characters(1byte).

Thank you for your cooperation in advance.",588,38355,カスタムフィールドにbyte数制限追加  Request for limitation of byte number to custom field,"現在カスタムフィールドには文字数制限が可能ですが、byte数制限をかけたく、ご検討お願いいたします。目的としては、社内の生産システムとの連携になります。

Currently, custom fields have limitation only for number of characters.
We would like you to add limitation of byte number for operation of redmine with our production system.

Japanese has full-width characters(2bytes) and half-width characters(1byte).

Thank you for your cooperation in advance.",0.9462464030276848,1.0,"The two tickets are identical in both subject and description, with the only difference being that the second ticket's subject is partially in Japanese. They both request the same feature—a limitation on the byte number for custom fields to accommodate full-width and half-width characters used in the Japanese language for integration with their production system. Therefore, these tickets should be considered duplicates.","Since the tickets are duplicates, there's no need to create a new requirement. However, for consistency, here's a unified version:

**Subject**: Request for Byte Number Limitation on Custom Fields for Enhanced Japanese Character Support

**Description**: Currently, custom fields in our system only have limitations based on the number of characters. We kindly request the addition of a byte number limitation feature to better support operations involving Japanese text, which includes both full-width (2 bytes) and half-width (1 byte) characters. This enhancement will facilitate seamless integration with our production system and ensure compatibility with our internal processes. Thank you for considering this improvement."
4690,fp,591,38368,WebP images support in PDF output,"WebP image support has been implemented in RBPDF 1.21.1 gem.
This is a patch to support WebP images in Redmine's PDF output.",568,38168,WebP images support,"""WebP image format"":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).

The attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.

* Inline image
* Thumbnail of the attached image
* Inserting markup for an image uploaded by drag and drop",0.7610275864560417,0.85,"Both tickets are related to adding support for WebP images in Redmine, with Ticket1 specifically focusing on PDF output and Ticket2 covering inline images, thumbnails, and drag-and-drop uploads. Since the underlying goal of both tickets is to improve WebP compatibility within Redmine, they are indeed very similar and could potentially be merged to avoid duplication of effort in implementing WebP support across different features of Redmine.","** Subject: Comprehensive WebP Image Support Integration
    ** Description: This requirement encompasses the implementation of comprehensive support for WebP images across various functionalities within Redmine. It includes:
        - Integrating WebP image handling in RBPDF for PDF output, leveraging the updates available since RBPDF 1.21.1.
        - Enabling support for displaying WebP images inline within Redmine's content editor.
        - Generating thumbnails for attached WebP images in a manner that is compatible with most modern browsers.
        - Facilitating the easy insertion of WebP images through markup when using the drag-and-drop upload feature.
    This update will ensure that Redmine is fully compatible with the efficient WebP image format, enhancing user experience and potentially improving page load times."
4696,fp,592,38372,Use Commonmarker instead of Redcarpet by default when rendering Markdown attachments,"markdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.
For example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').

Since RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?",501,37119,Drop redcarpet dependency for common_mark formatter,"Redmine fails to start when it's installed without markdown group (#36892).

We should fix this and drop the redcarpet dependency for common_mark.",0.6377128599732239,0.9,"Both tickets aim to address the deprecation and redundancy of using Redcarpet for Markdown processing, especially in light of its depreciation noted in ticket references. While Ticket1 focuses on adjusting the behavior of `markdown_formatter` to prefer Commonmarker over Redcarpet based on the text formatting setting, Ticket2 directly calls for removing the Redcarpet dependency for the common_mark formatter due to startup issues when Redcarpet is not installed. The underlying goal of both tickets is to transition fully to Commonmarker and away from Redcarpet, making them highly related and suggesting that addressing one issue should inherently solve the other.","** Subject: Migrate Default Markdown Rendering to Commonmarker and Remove Redcarpet Dependency
    ** Description: To ensure compatibility and future-proofing of our Markdown rendering capabilities, we will update the `markdown_formatter` logic to default to using Commonmarker unless explicitly set to use 'markdown', thereby phasing out Redcarpet usage. This includes handling cases where text_formatting is not specified as common_mark but ensuring a smooth transition for all users. Additionally, we will remove the Redcarpet dependency for CommonMark formatting to resolve startup issues encountered when Redcarpet is not installed (issue #36892), thereby streamlining our dependencies and enhancing the overall stability of the application."
4826,fp,595,38416,Ability to disable the priority field,"Redmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.

I have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.

After applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.

!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!",396,35796,Allow subject and priority issue attributes (i.e. tracker fields) to be disablable,"I see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.

I think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).

Use-case examples:
* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)
* (software) license management
* inventory management
* contact management
* vacation-/presence management
* appointment management
* etc.

In the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable.",0.8207164888068154,0.9,"Both tickets essentially request the enhancement of allowing administrators to disable certain core fields within Redmine's tracker configuration. Ticket1 specifically targets the disablement of the priority field, while Ticket2 broadens the scope to include both the subject and priority fields, suggesting a more generalized approach to disabling tracker fields. The underlying motivation for customization and flexibility to cater to diverse use cases is shared between the two. Given the substantial overlap and the expanded, yet aligned, objective in Ticket2, consolidating these requirements is advisable to streamline development efforts and user experience.","* **Subject**: Enhance Tracker Field Customization: Disable Core Fields Including Priority and Subject
    * **Description**: To enhance Redmine's adaptability to various use cases, this requirement proposes the expansion of tracker field management capabilities. Administrators should be able to disable not only the priority field but also the subject field, along with potentially other core fields in the future, directly from the tracker's settings. This enhancement enables users to tailor issue tracking to their precise needs, whether for resource management, license tracking, or alternative issue tracking scenarios that may not require conventional issue attributes like priority or subject. By implementing this feature, Redmine can better serve as a versatile platform accommodating diverse project and non-project management tasks, without necessitating custom workarounds for field exclusions. Disabling fields would also permit setting default values for new issues and adjusting read-only statuses through workflow field permissions to further refine the data input process."
4861,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",25,4939,List of tasks filtered as OR and not AND,"Hello

Up to now in the list of task you can filter upon some values but the list of filters are 
List of tasks that has
filter1=value1 AND filter2=value2 AND filter3=value3

I think it could be interesting to have the possibility of
List of tasks that has
filter1=value1 OR filter2=value2 OR  filter3=value3

Do you think it is possible? thank you",0.5815813353577666,0.95,"Both tickets are requesting an enhancement to the filtering functionality in what appears to be a project management tool like Redmine. They seek to enable users to perform an 'OR' search across multiple terms within a single filter, rather than the default 'AND' logic which requires all conditions within a filter to be met. This would allow for more flexible and inclusive data retrieval. The descriptions align closely, with Ticket1 providing a specific implementation example with code changes, while Ticket2 describes the desired functionality from a user perspective without technical details. Given the substantial overlap in the intended outcome, it's highly likely these tickets address the same core feature request.","* Subject: Implement ""OR"" filter option for flexible task querying
    * Description: Enhance the task filtering capability to include an ""OR"" operator alongside the existing ""AND."" This will enable users to retrieve tasks meeting any one of multiple criteria within a single filter, increasing the efficiency and versatility of data searches. For instance, users should be able to filter tasks based on conditions such as ""Tag contains 'Urgent' OR 'Priority'"" or ""Status is 'In Progress' OR 'Waiting for Review'"", thereby displaying tasks that fulfill at least one of the provided conditions. This update complements the AND search logic already present since Redmine 5.0, further empowering users to tailor their workflow and information retrieval processes."
4863,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",106,23211,"Issue filter menu should have different logical operators like ""AND"", ""OR"", ...","Filtering issues would be more helpful if the filter menu had different logical operators like ""AND"", ""OR"", ...",0.6005387401374654,0.9,"Both tickets aim to improve the filtering functionality in an issue tracking system by introducing more advanced logical operators to combine search terms. Ticket1 specifically proposes adding an ""contains any of"" operator for text filters to facilitate OR searches, while Ticket2 generically requests the inclusion of different logical operators such as ""AND"", ""OR"", etc., in the issue filter menu. Given that Ticket1 is a concrete implementation of the broader suggestion made in Ticket2, merging these requirements makes sense to consolidate efforts towards enhancing the query system with comprehensive logical search capabilities.","* Subject: Enhanced Logical Operators for Text Filters
    * Description: Enhance the issue filtering system by implementing a range of logical operators within the filter menu, including but not limited to ""AND"", ""OR"". Specifically, introduce the ""contains any of"" operator for string/text filters, allowing users to perform OR searches with multiple terms in a single filter. For instance, this would enable displaying issues that contain any specified terms across fields like ""Subject,"" making the query system more versatile and powerful. Users will be able to construct complex queries combining both ""AND"" for conjunctions and ""OR"" for alternatives, among other logical operators, to refine their search results effectively."
4865,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",204,27365,Filtering by two or more values for parameters without choosable options,"Hi!
Is there an opportunity to insert for parameter ""Subject"" several values for filtering?
For example, I want to exclude issues which contain two or more values (as I can do with ""Tracker"" or ""Status"" parameters)",0.581206206396679,0.9,"Both tickets are requesting an enhancement to the filtering system in what seems to be the Redmine project management tool. They aim to enable users to filter issues based on multiple terms within a single filter field, effectively performing an OR operation. The first ticket provides a patch that introduces the ""contains any of"" operator explicitly for text-based filters, while the second ticket is a user inquiry asking for the ability to input multiple values for the ""Subject"" parameter, which currently lacks such a feature. Given the substantial overlap in intent, these tickets can be considered very similar and suggest a common need for enhancing filter functionality to support multiple terms in text fields.","* Subject: Enhanced Text Filter Operator for Multiple Terms
    * Description: Implement a new filter operator, ""contains any of,"" for text-based filters including ""Subject"" and ""Any searchable text,"" enabling users to input multiple values to perform an OR search. This feature will extend the current query system, allowing issues to be filtered when they match any one of several specified terms across selected text fields, thereby improving the flexibility and efficiency of issue tracking and management within the platform."
4867,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",291,33286,"Multiple search terms in ""Subject"" filter","at custom query
I can select single in subject 
I can select multiple in issue 

I'd like to select mulutiple likely issue

ーーJa　startーー
カスタムクエリーの題名において
含む、および含まないの条件にも
カンマを入れた場合、アンド条件としてほしい

チケットと同じようにお願いします
ーーJa　endーー",0.5958711660872267,0.9,"Both tickets are requesting an enhancement to the text filtering feature in what appears to be a ticketing or issue tracking system (like Redmine). Ticket1 explicitly proposes adding an ""contains any of"" operator to perform OR searches across multiple terms within a single filter, providing a clear example with the ""Subject"" filter. Ticket2, while less technically explicit, also seeks the ability to use multiple search terms in the ""Subject"" filter, implying a desire for similar OR logic albeit expressed in a different way and with a request originating from a custom query perspective. The underlying intention of enhancing the search capability with multiple terms is shared between the two tickets.","* Subject: Enhanced ""Subject"" filter with support for multiple search terms
    * Description: This requirement aims to enhance the ""Subject"" filter functionality by introducing support for searching with multiple terms using both AND and OR logical operators. Users will be able to input several keywords separated by a delimiter (e.g., comma) to perform complex queries. When using OR logic (""contains any of""), issues whose subjects match any of the provided terms will be returned. Conversely, an AND mode will return issues where the subject must contain all specified terms. This update will align the ""Subject"" filter's capabilities with user expectations from other filters and improve overall query flexibility in the system."
4870,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",313,34793,Filter OR / AND for issues and repeated columns in filter settings,"1. For what:
I can't do filter now about ""this version or that version"", ""this dates or that dates"", ""this version and status or that version and status""

2. What need to do:
In filter for task add:
* 2.1. Ability to use column many times
* 2.2. Blocks AND / OR

PS Cool, if i could filter tags with this logic",0.6271515502992939,0.8,"The two tickets both address enhancing the filtering capabilities within an issue tracking system, specifically focusing on enabling more complex search logic with OR and AND operators. While Ticket1 specifically targets text filters to allow for OR searches among multiple terms, Ticket2 is broader, asking for OR and AND operations across various fields (versions, dates, statuses) and also requests the ability to use a column multiple times in a filter, which indirectly supports more complex logic. Given the overlap in intent to improve the query system's power with advanced logical operations, these tickets are quite similar and could potentially be merged with a slight adjustment to Ticket1's scope to encompass the broader improvements suggested in Ticket2.","* Subject: Enhanced Filter Logic with OR / AND Operators and Repeated Columns
    * Description: This enhancement aims to augment the issue filtering system to support more sophisticated search queries by introducing the following features:

    1. **OR / AND Operators for Multiple Fields**: Users should be able to apply both ""OR"" and ""AND"" logic between different filter criteria, allowing for searches such as ""this version or that version,"" ""this date or that date,"" and combinations of conditions like ""this version and status or that version and status.""
    
    2. **Repeated Columns with Different Logic**: Enable the use of a filter column multiple times within a single query, each instance with its own operator setting, to construct complex search scenarios without being limited to a single instance of a field.

    3. **Extended ""Contains Any Of"" Operator**: Expand upon the existing ""contains any of"" operator for text filters to align with the new logical structure, allowing for OR searches across multiple terms not just in the subject but across all searchable text fields, enhancing the system's flexibility as described in Ticket1.

By implementing these enhancements, the query system will become significantly more versatile, accommodating a wider range of user needs for targeted issue retrieval and analysis."
4873,fp,598,38435,"""contains any of"" operator for text filters to perform OR search of multiple terms","The attached patch adds a new operator ""contains any of"" for string/text filters and ""Any searchable text"" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.

For example, if you choose the ""Subject"" filter and specify the ""contains any of"" operator and give ""close block"" as the value, issues containing either ""close"" or ""block"" in the subject will be displayed.

I believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.

!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!
",390,35764,"Multiple search terms in the ""contains"" operator of text filters","I extracted the attached patch from #35073#note-4. The patch posted by ""Jens Krämer"":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in ""contains"" operator of text filters. 

> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?

It seems that the patch has already been deployed to the production environment of Planio. See ""Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support"":https://support.plan.io/news/200
",0.6860262162645618,0.9,"Both tickets propose enhancements to text filtering capabilities in what appears to be the same software, Redmine. Ticket1 introduces a new operator ""contains any of"" to facilitate OR searches across multiple terms within a single filter. Conversely, Ticket2 discusses a modification to the existing ""contains"" operator to accept multiple search terms, which is also aimed at achieving similar functionality though the internal implementation might differ. Given that the end goal of both tickets is to improve the search functionality to accommodate multiple terms in a more flexible manner, they are very similar and could likely be consolidated to avoid duplication of efforts.","** Subject: Enhanced Text Filter Operators for OR and AND Searches
    ** Description: This requirement aims to augment Redmine's text filtering system by introducing enhanced operators to facilitate both OR and AND searches within a single filter. Users will be able to input multiple search terms for more sophisticated queries. The system will support:
        - A new ""contains any of"" operator, enabling users to display results that include any one of the specified terms across selected text fields (e.g., issues with ""close"" or ""block"" in the subject).
        - An updated ""contains"" operator, modified to interpret multiple terms as an AND operation by default but with an option to switch to OR logic, thereby accommodating both search methodologies without creating additional filters. This update will ensure comprehensive query construction within Redmine's query system, further enhancing its usability and power."
4896,fp,599,38446,Support multiple multi-word phrases in the search engine,"Currently, the search engine does not support multiple multi-word phrases.

For example, we cannot search objects that contain two phrases ""closed issue"" and ""closed version"". If you give a search string @""closed issue"" ""closed version""@, the search engine search for objects containing three strings ""closed issue"", ""closed"", and ""version"". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.

<pre><code class=""ruby"">
Redmine::Search::Tokenizer.new(%q|""closed issue"" ""closed version""|).tokens
=> [""closed issue"", ""closed"", ""version""]
</code></pre>

If the Tokenizer returns two tokens, ""closed issue"" and ""closed version"" for the same input, it will be possible to search for multiple multi-word phrases.

",390,35764,"Multiple search terms in the ""contains"" operator of text filters","I extracted the attached patch from #35073#note-4. The patch posted by ""Jens Krämer"":https://www.redmine.org/users/40856 from Planio allows you to use multiple search terms in ""contains"" operator of text filters. 

> The alternative I am experimenting with right now is breaking up the user's query string into tokens like the global search does, and use these to build a query with multiple LIKE clauses that are combined with AND. I'm attaching a preliminary patch that implements this for the Issue.like scope (used by the autocompleter) and the Query#sql_contains method (which should cover all query filters). Do you think that's a viable approach?

It seems that the patch has already been deployed to the production environment of Planio. See ""Planio filters just got more powerful - Planio Support &#40;english&#41; - Planio Support"":https://support.plan.io/news/200
",0.5807258310576698,0.8,"Both tickets address improvements to the search functionality, specifically regarding the handling of multiple search terms or phrases. Ticket1 focuses on enabling the search engine to support searching for multiple multi-word phrases, while Ticket2 discusses improving the ""contains"" operator in text filters to accommodate multiple search terms. Given that the underlying issue in both tickets pertains to enhancing the search capability to deal with compound queries more effectively, they are indeed very similar and could potentially be addressed under a unified improvement effort.","* Subject: Enhance Search Functionality to Support Multiple Phrases and Terms
    * Description: Improve the search engine to better handle complex queries by allowing users to input multiple multi-word phrases and individual terms simultaneously in both the global search and within text filter conditions. This enhancement will involve adjusting the tokenization process to correctly identify and combine these phrases and terms (e.g., ""closed issue"" AND ""closed version"") without breaking them down unnecessarily. Additionally, the ""contains"" operator in text filters will be updated to support this advanced search logic, thereby unifying the search experience across the platform and increasing the precision and flexibility of search results."
5095,fp,609,38526,"Subversion support for ""View annotation prior to this change""","The ""View annotation prior to this change"" feature added in #35432 currently only supports Git. This issue is for implementing the feature for Subversion as well.",351,35432,Git: View annotation prior to the change,"The ""Blame"" view of GitHub and Gitlab has a feature called ""View blame prior to this change"". With the feature, you can easily jump to an older change of the line.

I think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the ""Annotate"" view of Redmine.

!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!
",0.5562061625249369,0.8,"The two tickets are related in that they both concern the functionality of viewing annotations or blame prior to a specific change in version control systems. However, they differ in the context of the version control system they mention - Ticket1 is about adding this feature for Subversion, while Ticket2 seems to be a request for a similar feature but explicitly mentions Git, possibly inspired by GitHub and GitLab interfaces. Given the overlap in the feature request and the user's intention to enhance Redmine's functionality akin to what is available in popular Git platforms, it's likely that addressing one ticket would resolve the core requirement for both, especially if a solution is implemented in a VCS-agnostic manner. Hence, a moderate probability of duplication is assigned, acknowledging the need for clarification and potential unification of efforts.","* Subject: Unified Version Control Support: View Annotation/Prior Blame Across Changes
    * Description: Enhance Redmine's version control integration to include the feature ""View Annotation/Prior Blame"" across both Git and Subversion repositories, emulating the convenience provided by platforms like GitHub and GitLab. This feature will allow users to easily navigate to and inspect the state of a file or line before a specific change occurred, streamlining the process of understanding code history and evolution. The implementation should ensure a consistent user experience regardless of the underlying version control system used in the project."
5129,tp,611,38541,Automatic deletion of unactivated accounts,"Hi

in the context of #38511 I noticed that even after one week my unactivated account @henk_test was not deleted but still waited for me to click the confirmation link.

I see a similar issue with my own redmine instance where registrations require administrator approval: I have to delete a lot of accounts registered by bots.

It would be great to have redmine expire unconfirmed/unactivated accounts after a configurable amount of time.",263,30998,Add an rake task to prune registered users after a certain number of days,"Hello,

Unfortunately I'm not enough skilled in ruby to propose a patch.

Like many other people, I'm affected by spammers that half-register themselves but do not complete inscriptions due their fake emails. So I constantly have a pile of half-registered users that pollute my database.

It could be nice if there was an option to automatically delete accounts that were not successfully registered after a given amount of time (example, 1 day by default or something like that).

What do you think?",0.5820186031646208,0.9,"Both tickets describe a similar need to automatically remove inactive or unconfirmed user accounts from the system after a certain period of time to address the issue of bot registrations and database pollution. While Ticket1 focuses on automatic deletion of unactivated accounts with a强调 on the context of unclicked confirmation links, and Ticket2 proposes an addition of a rake task specifically to handle this pruning process, the core requirement is essentially the same. The implementation details can be consolidated to address both concerns.","** Subject: Implement automated pruning of unconfirmed user accounts
    ** Description: Develop a feature that automatically prunes unconfirmed or partially registered user accounts from the system after a configurable period of inactivity. This feature should address both cases where accounts are awaiting email confirmation and those stuck in a pending state due to bot activities. An admin-configurable time threshold will determine when an unactivated account should be deleted. Additionally, include a rake task to manually trigger the pruning process on demand, providing administrators with flexibility in managing database cleanliness."
5130,fn-queried,612,38542,Better username completion in the editor,"Hi

in #38511 someone tried to highlight me but since my name is ""Hendrik Jäger"" and only this part is actually displayed, they chose the obvious but wrong highlight (at)Hendrik, which is not me but ""Hendrik Adam"" (I’m (at)henk).

It would be nice to have better completion for this. The mechanism for completing ticket numbers with the popup would be well suited but it would have to search for both login-names and real-names.

Thanks for considering!",79,13919,Mention user on issues and wiki pages using @user with autocomplete,"https://github.com/dwarburt/redmine-mention-plugin is ok, but I think would be awesome to have something like Github where it has an inline autocomplete for users etc. I think this should be built into the core plugins maybe?

for reference check this out https://github.com/tactivos/jquery-sew",0.5247766413455219,0.6,"The two tickets are related to improving the user mention functionality within the system, with a focus on better autocompletion. However, they differ in scope. Ticket1 specifically addresses enhancing username completion in the editor, emphasizing the need to differentiate between similar usernames by considering both login names and real names. Ticket2, on the other hand, suggests a broader implementation akin to GitHub's mention feature, applicable across issues and wiki pages, and mentions a potential plugin as a reference. While there is overlap, the difference in context (editor vs. broader application areas) and the specific details provided suggest they address slightly different aspects of the same feature.","Not applicable since the probability is less than 70%. However, if they were to be combined due to their similarity, a suggestion could be:

** Subject: Enhanced User Mention Autocompletion Across Platform

** Description: Implement an enhanced user mention feature integrated into the core system, similar to GitHub's functionality, which provides intelligent autocomplete suggestions for usernames in both the text editor and across all interaction points such as issues and wiki pages. This improvement should recognize and differentiate between usernames and real names (e.g., handling cases like ""Hendrik Jäger"" vs. ""Hendrik Adam"") to ensure accurate mentions. Consider utilizing a mechanism akin to the existing ticket number completion popup for consistency and ease of use. Explore integration or inspiration from existing solutions like the redmine-mention-plugin and jquery-sew for efficient development."
5165,fp,614,38567,Enable to display notes count on issues list,"I have added the query column to display the Journal Note count in the issues list and made it sortable.
This feature allows you to easily find issue with a high number of notes directly from the issues list.

!{width:800px}enable_to_display_notes_count_on_issues_list.png!",4,684,Add journal count on issues list,"I think that viewing journal count is better than nothing.
Because it is easy to understand issues's activity.
so I make this patch.",0.8514982008804985,0.95,"Both tickets are requesting to enhance the issues list by adding a count of either ""notes"" or ""journals."" The functionality described is virtually identical, with the primary difference being the terminology used (""notes"" vs. ""journals""). Given that both seem to refer to附加信息或活动记录 on issues, it's likely they are seeking the same feature. Thus, duplication is highly recommended to avoid redundancy in development work.","* **Subject:** Display Note/Journal Count on Issues List
    * **Description:** Enhance the issues list to include a column that displays the count of notes/journals associated with each issue, making it sortable. This feature will facilitate the quick identification of issues with a high level of activity or communication directly from the issues list, improving overall workflow efficiency and insight into issue engagement."
5170,fp,614,38567,Enable to display notes count on issues list,"I have added the query column to display the Journal Note count in the issues list and made it sortable.
This feature allows you to easily find issue with a high number of notes directly from the issues list.

!{width:800px}enable_to_display_notes_count_on_issues_list.png!",207,27541,New optional column for issue list: number of comments/updates,Just to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown.,0.6103931619765866,0.9,"Both requirements aim to enhance the issues list by adding a new column that displays the count of interactions (notes or comments/updates) on each issue. This addition helps users quickly assess the level of discussion on an issue without opening it. The difference lies in the specific term used (""notes"" vs ""comments/updates"") and a minor detail about displaying an empty string for issues with no interaction in Ticket2. However, these differences are minor, and the core functionality requested is essentially the same.","* Subject: Add互动计数列于问题列表 (Add Interaction Count Column to Issues List)
    * Description: Enhance the issues list by introducing a new, optional column that displays the total count of notes, comments, or updates on each issue, facilitating a swift understanding of the level of engagement per ticket directly from the list view. The column will be sortable, allowing users to easily identify issues with high or low interaction volumes. For tickets未经任何评论或更新，显示为空字符串而非'0'，提供更为直观的用户体验。(For tickets with no comments or updates, an empty string will be displayed instead of '0', providing a more intuitive user experience.)"
5272,fp,617,38585,Drop Ruby 2.7 and 3.0 support,"Ruby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)
Since Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL...",505,37159,Drop Ruby 2.5 support,"Recently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.

I think it is time to drop Ruby 2.5 support.",0.8244801798157521,0.8,"Both tickets propose dropping support for specific versions of Ruby, indicating a common goal of updating supported Ruby versions for compatibility and maintenance purposes. Although the specific versions differ, the underlying rationale aligns, suggesting a combined effort to streamline supported Ruby versions could be beneficial.","** Subject: Update Supported Ruby Versions
    ** Description: Due to the end-of-life status of Ruby 2.7 and the increasing incompatibility issues with Ruby 2.5 as more dependencies drop support for it, this ticket proposes to discontinue support for both Ruby 2.7 and 2.5 in our application. This measure will simplify the maintenance of the Gemfile, ensure compatibility with the latest dependencies, and align with the Ruby community's progression, considering Ruby 2.7 has reached its end-of-life according to the official Ruby website (https://www.ruby-lang.org/en/downloads/branches/). By doing so, we can focus on providing a stable and up-to-date environment for our users with Redmine 4.2 and beyond."
5279,fp,617,38585,Drop Ruby 2.7 and 3.0 support,"Ruby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)
Since Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL...",565,38134,Drop Ruby 2.6 support,"The normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.

Redmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara.",0.8348539189523237,0.8,"Both tickets propose dropping support for specific versions of Ruby, citing end-of-life (EOL) status and compatibility issues with gems. Although they mention different Ruby versions, the underlying rationale is very similar—aligning with the EOL of Ruby versions and facilitating updates to dependent gems. Given this similarity, it's reasonable to consider them as addressing a common issue of updating Redmine's supported Ruby versions.","* Subject: Update Supported Ruby Versions
    * Description: Due to the end-of-life (EOL) status of Ruby 2.6, 2.7, and 3.0, and considering compatibility constraints with newer gems like Rouge and Capybara, Redmine needs to update its supported Ruby versions. This change will involve dropping support for Ruby 2.6, 2.7, and 3.0 to ensure smooth integration with the latest gems, enhance security, and maintain compatibility with the active Ruby community standards. Users will be required to migrate to a more recent version of Ruby to continue receiving updates and support for Redmine."
-1,fn-no-query,622,38682,Disable option to upload files in tickets,"I've installed the DMSF plugin and want this as the only module to handle files. So I disabled the files and documents module for every project. 
!clipboard-202306081822-tbavg.png!
But people are still able to upload files using the standard file upload. 
!clipboard-202306081822-a048c.png!
That's a bit confusing for the users and pretty hard to handle for me as an admin. In some projects I want to disable the possibility to upload files for a reason.
From my point of view if the modules are disabled users shouldn't be able to upload files. At least administrators should have the option to disable the ""classic"" file upload via administration center and/or per project.",43,8168,Allow to disable feature attachment,"Attachment max. size
should be as
Attachment max. size (zero for disabling feature)
",0.46071940033214,-1,,
5430,fp,628,38839,A developer or project manager can update an issue (submit a note) without editing the issue first,A person ought to be able to make a status update without the extra click (and visual noise) of editing the ticket first.,459,36537,"Diferentiate between ""comment"" and ""edit"", Issues.","Currently when one wants to edit description of an issue you need to make 2 movements:
1. click to edit to open issue editions interface it self, and then
2. click in description editions specific button.
Which is quite unproductive, and given redmine is a software to increase productivity this should be improved :). 

but more importantly this is unintuitive, confusing, as well as being ambigious,
because when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the ""edit description"" feauture is a little bit not obvious.

SOLUTION
Separate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:
editing -> refering to editions on description
commenting -> refering to further editions on ""notes"" section bellow issue report

I understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.",0.5745669818454855,0.85,"Both tickets address the issue of improving the user experience when adding comments or updates to an issue without having to go through the full edit process. While Ticket1 focuses on reducing the steps for submitting a note, and Ticket2 emphasizes the distinction between ""commenting"" and ""editing"" within issues, their underlying goal is the same: to streamline the process of updating issues without unnecessary clicks or confusion. Thus, they can be considered very similar and合并 to address the broader issue of efficient issue tracking interactions.","* Subject: Streamline Issue Updates: Simplify Commenting & Distinguish from Editing
    * Description: Enhance the issue tracking system to facilitate quick updates by allowing developers and project managers to submit notes or status updates directly without requiring the initial step of editing the issue. This improvement will involve introducing a clear distinction between ""commenting,"" which pertains to adding notes or updates below the issue report, and ""editing,"" which refers specifically to modifying the issue's description or metadata. By implementing a separate feature or button for commenting and clarifying the editing process, the system will promote productivity, intuitiveness, and reduce user confusion, ensuring that all users, regardless of their role, can efficiently contribute to issue discussions."
5563,fp,635,38948,Add user status to users list API,"Allow for returning all users, and return the status of the user in the response.",278,32090,REST API: users: add support for status=*,"Currently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):

<pre>
curl -H 'Content-Type: application/json' \
  -G -K redmine-admin.auth \
  'https://redmine.example.com/users.json?name=firstname.lastname'
</pre>

it will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(
	
I would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.",0.6834182540590586,0.9,"Both tickets are requesting enhancements to the users list API to include user status information more effectively. Ticket1 asks for the addition of user status to the API's response, while Ticket2 specifically asks for support of a `status=*` parameter to retrieve all user statuses, including inactive ones. The underlying intention of both tickets is to improve the API's capability to handle user status queries comprehensively.","** Subject: Enhance users list API to include all user statuses
    ** Description: Modify the users list API to allow retrieval of all user statuses by introducing a new optional parameter `status` that supports `*` as a value. When `status=*` is used, the API should return all users regardless of their status (active, locked, etc.), improving the efficiency of user searches and providing a complete user status overview in a single API call. This enhancement will align the users API behavior with similar functionality found in the Rest Issues API."
5583,fp,636,38951,Enable journaling on projects,"It's so usefull to have history of project field and custom fields changes.
Also it's desirable about project settings changes.",411,35906,Project Activity Log,"Would like a log of project-level activities, such as when someone closes or reopens a project. 

Without a log, there is no way to see who is doing project level changes, and no way to investigate problems.",0.6936289764254193,0.9,"Both requirements revolve around the need for an activity log at the project level, capturing changes made to projects and their settings. While Ticket1 specifically mentions journaling for project fields, custom fields, and project settings changes, Ticket2 asks for a project activity log that includes actions like closing or reopening projects. The underlying intent is the same - to enhance accountability and enable the tracking of changes within projects.","* Subject: Enhanced Project Journal and Activity Logging
    * Description: Implement an enhanced project journal and activity logging system to track all changes made at the project level, including modifications to project fields, custom fields, and project settings, as well as high-level actions such as project closure and reopening. This will provide a comprehensive audit trail, improving accountability and facilitating investigation and resolution of any issues or discrepancies in project management processes."
5589,fp,642,39025,two performers for one task.,"Colleagues, please tell me. Is it possible to assign two performers to one task at the same time.",0,408,Assign a task to multiple users,"It would be great if it was possible to assign a task to multiple users; And have another state, ""being solved"",
where a task is locked and ""assigned"" to a specific one.

Why: 

In some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign
a task to several workers, and the first who gets available would then grab the task, setting the ""being solved""
to himself.
",0.6039758568119262,0.9,"Both tickets essentially request the functionality to assign a single task to multiple users. The primary difference lies in the additional detail provided in Ticket2, which suggests introducing a new task state, ""being solved,"" to indicate when a task is actively being worked on by one of the assigned users. Despite this extra detail, the core requirement of assigning tasks to multiple users is shared, hence a high probability of duplication.","* Subject: Assign and Manage Tasks for Multiple Users Simultaneously
    * Description: Enhance the task management system to allow assignment of a single task to multiple users. This feature should include a mechanism to track task progress collaboratively, with an additional task state, ""Being Solved,"" which locks the task for editing by a specific user once they begin working on it. This will facilitate efficient teamwork where multiple team members are capable of addressing a task, and the system automatically facilitates task claiming and tracking based on user availability."
-1,fn-no-query,642,39025,two performers for one task.,"Colleagues, please tell me. Is it possible to assign two performers to one task at the same time.",66,12579,Ability to assign issues to multiple users,"+*Dear All:*+

+Kindly I need to make *""Assignee""* Combo box allow *""Multi-Selection""* because of:+
 

* Sometimes , Groups don't help me while assigning a specific issue to more than one member.
This happened in case where the assignees are not gathered in a group. (This happened frequently)
(*Note that:* There is an Infinite combination of users!!)
So , I need the *""Assignee""* field to be a *List Box* which allow +*""Multi-Selection""*+.",0.4091700846821395,-1,,
5598,tp,644,39047,Add description field for issue queries,"It would be nice to have an issue query description field since sometimes it is difficult to name the description so that other users are able to fully understand it.

The text filed in the new query form could be provided with wikitoolbar and the possibility to reference or include a wiki page or other macros.   

The description could be rendered right below the query name and should also be available on gantt and calendar page.

---

!clipboard-202309081141-e5hz5.png!
",52,9309,Add description field to custom queries,"Especially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for.",0.7387032541453079,0.9,"Both tickets request the addition of a description field to enhance the clarity and understanding of issue queries. While Ticket1 specifically mentions ""issue queries"" and provides details about implementation such as the use of wikitoolbar and inclusion on various pages, Ticket2 refers to ""custom queries"" with a focus on the benefit for public queries. The core idea of adding a descriptive element to aid comprehension is shared between both tickets, suggesting a high degree of similarity and potential duplication.","** Subject: Add Description Field to Queries for Enhanced Understanding
    ** Description: Implement a versatile description field for both issue and custom queries to improve their readability and purpose clarity. This feature should include a user-friendly text editor equipped with a wikitoolbar, allowing for rich formatting and the ability to reference or embed external resources such as wiki pages and macros. The description will be visibly rendered beneath the query name and accessible on overview pages like Gantt charts and calendars, ensuring consistent context across all query uses, particularly benefiting public queries where explaining the displayed information and intended use is crucial."
5614,fp,644,39047,Add description field for issue queries,"It would be nice to have an issue query description field since sometimes it is difficult to name the description so that other users are able to fully understand it.

The text filed in the new query form could be provided with wikitoolbar and the possibility to reference or include a wiki page or other macros.   

The description could be rendered right below the query name and should also be available on gantt and calendar page.

---

!clipboard-202309081141-e5hz5.png!
",230,28533,Add a description in a custom queries,"I have more than 40 different querys and it would be practical to be able to add to each one, a description of the results that it brings.",0.6722096123580692,0.9,"Both tickets are requesting the addition of a description field for issue queries/custom queries to better explain the purpose or the results returned by the query. The descriptions provided in both tickets align closely, indicating a strong similarity in the requirement. The only minor difference is the emphasis in Ticket2 on having descriptions for custom queries and mentioning a personal use case with over 40 queries, but this does not change the core requirement.","** Subject: Add Description Field for Issue & Custom Queries
    ** Description: Enhance the query creation process by introducing a description field to both standard and custom issue queries. This will facilitate a clearer understanding of query intent and results for all users. The description field shall be equipped with a rich text editor, including a wikitoolbar, with support for referencing or embedding wiki pages and other macros. The rendered description will be displayed beneath the query name and made accessible on overview pages such as Gantt charts and calendars, ensuring consistent context across platforms. This addition aims to address scenarios where naming the query alone may not convey sufficient information about its purpose or outcomes, especially for users managing numerous queries."
5646,fp,645,39069,New permission to edit log time during a configurable number of days. ,"It would be nice to have a new permission that would allow users to edit their own log time but only for a configurable number of days. 

As an example if the configuration is set to 7 days, users can modify their logs during one week (in the past). 

if the configuration is set to one day , they can modify their timesheets up to yesterday",69,13244,Restrict log time for old days,"For example any user have to log his spent time today or tomorrow.
If he try to log time for period more than yesterday - it should be not possible.
There are kind of users that sometimes log their time for period weeks ago and this is bad.
Is there any suggestion how to prevent such things.",0.6612054067306108,0.9,"Both tickets address the need to restrict the editing of logged time to a certain number of days in the past, focusing on controlling when users can modify their timesheets. The primary difference lies in the emphasis—Ticket1 presents it as a new permission feature with configurability, while Ticket2 describes it as a restriction to prevent logging time for older days without explicit mention of different permission levels. However, the underlying intention to manage the timeframe for editing log time aligns closely, suggesting that these tickets could be merged under a unified requirement.","* Subject: Configurable Permission to Edit Log Time within Recent Days
    * Description: Implement a configurable permission setting that enables users to edit their logged time, but restricts this ability to a specified number of days in the past. This setting would prevent users from modifying timesheets beyond a certain timeframe, ensuring accuracy and timeliness of recorded work hours. For instance, if the configuration is set to 7 days, users would only be able to edit their logged time up until 7 days prior to the current date. This feature aims to discourage late logging of work hours and maintains data integrity by limiting modifications to recent entries."
5778,fp,653,39160,"Add ""Statuses"" filter when creating new ""Issue"" custom fields","Custom fields on issues can be associated with specific Trackers, so a custom field that is associated with ""Bug"" will be hidden on issues of other types.  However, if that custom field is ""required"" then it is required for every status of that issue throughout its workflow.  

In many workflows, specific pieces of information are added to an issue throughout its workflow and not all at the beginning, so it would be most useful if custom fields could reflect this.  For example, in the workflow of a ""Bug"" when the tester sets the status to ""Verified"" that tester should note the version number that they tested and the environment that they tested it in.  If a user sets the bug to ""Rejected"" they should provide an explanation for why it is rejected.

Currently, we keep all of this information in ""Notes"" and it is the responsibility of each user to remember what needs to be added based on the status they're switching from/to.  However, if we could keep this in custom fields that are selectively shown at specific points in the workflow this would both better enforce compliance and would store that information in a more structured way that we could leverage better in custom queries and reports.",545,37724,Set custom fields on state,"Dear all,
is it possible to set a custom field value on reaching specific state.
E.g.
Reset a custom field if ticket status is reassigned to ""New""
Thank you very much
Best Regards",0.5199741621664485,0.9,"Both tickets essentially request the ability to dynamically control the visibility or values of custom fields based on the status or state of an issue. While Ticket1 focuses on adding a filter for statuses when creating custom fields to support different stages in the workflow, Ticket2 specifically asks for setting a custom field value when a particular state is reached. The underlying need for both tickets is to make custom fields more adaptive to the issue's progression in its workflow, which indicates a strong similarity.","** Subject: Dynamic Custom Fields based on Issue Status/State
    ** Description: Enhance the platform to allow custom fields to be dynamically shown, hidden, or updated based on the status transitions of an issue. This feature will permit administrators to configure custom fields to appear or require input only at specific stages of an issue's workflow. For instance, when a ""Bug"" issue status changes to ""Verified,"" relevant custom fields such as ""Tested Version"" and ""Test Environment"" will be prompted for completion. Similarly, enable the automatic updating or resetting of custom field values upon reaching certain states, like resetting a custom field to default when an issue is reassigned to ""New."" This enhancement will enforce process compliance, facilitate structured data entry, and improve the utility of custom queries and reporting capabilities."
5779,fp,653,39160,"Add ""Statuses"" filter when creating new ""Issue"" custom fields","Custom fields on issues can be associated with specific Trackers, so a custom field that is associated with ""Bug"" will be hidden on issues of other types.  However, if that custom field is ""required"" then it is required for every status of that issue throughout its workflow.  

In many workflows, specific pieces of information are added to an issue throughout its workflow and not all at the beginning, so it would be most useful if custom fields could reflect this.  For example, in the workflow of a ""Bug"" when the tester sets the status to ""Verified"" that tester should note the version number that they tested and the environment that they tested it in.  If a user sets the bug to ""Rejected"" they should provide an explanation for why it is rejected.

Currently, we keep all of this information in ""Notes"" and it is the responsibility of each user to remember what needs to be added based on the status they're switching from/to.  However, if we could keep this in custom fields that are selectively shown at specific points in the workflow this would both better enforce compliance and would store that information in a more structured way that we could leverage better in custom queries and reports.",561,38026,Set custom field value on specific state,"Dear all,
is it possible to set a custom field value on reaching specific state.
E.g. Reset a custom field if ticket status is reassigned to ""New""
Thank you very much
Best Regards",0.506699939836625,0.85,"Both tickets essentially request the ability to dynamically control the visibility or value of custom fields based on the status or state of an issue within a workflow. While Ticket1 focuses on adding a filter for statuses when creating custom fields to better accommodate workflow-specific information needs, and Ticket2 specifically asks about setting a custom field value when reaching a certain state, the underlying need for conditional handling of custom fields in different statuses is shared. Therefore, it's recommended to consolidate these into a single ticket to address the broader functionality of custom field behavior tied to workflow states.","* Subject: Enhance Custom Fields Behavior Based on Issue Status in Workflow
    * Description: Develop a feature to dynamically manage custom fields in issues according to their status within the workflow. This includes the ability to (1) display or hide certain custom fields based on the issue's current status, facilitating the capture of status-specific information like version numbers or rejection reasons only when relevant, and (2) automatically set or reset custom field values upon reaching specific statuses, such as resetting a field to default when an issue is moved back to ""New"". This enhancement will streamline data entry, enforce process compliance, and enable more structured data for advanced querying and reporting."
5784,fp,654,39178,Issue visibility,"_*Hi everyone,*_
I have a scenario with Issue permission like this:
I have a Project A to store issues (Aa, Ab, Ac) but some issues is sensitive and can only show to some specific users (U1, U2, U3, U4, U5) and cannot show to other members in the project (each issues have their own privacy).

- *In issue Aa* (related to U1, U2): I set to Private then, change ' *Issues visibility* ' of U1, U2 to ' _All Issue_ '. Then U1, U2 can see Aa;
- After 3 days, another admin create Issue *Ab* and *Ac* with ' _Private_ ' activated and only want to show to U3, U4 so he have to change ' *Issues visibility* ' of U3, U4 to ' _All Issue_ '.

+*Now this is a disater*+  : U3, U4 can freely view Issue Aa which I don't want to show them vice versa with Issue Ab, Ac now show to U1, U2. U1, U2, U3, U4 now peeps others Issue and lead to Internal Fraud which I do not want from the beginning.

Hope you guys can understand the scenario above and have a solution.

_*Thank you, Have a nice day!*_",44,8488,Create an 'Involve' mechanism to private issues,"As requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by ""default rules"". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.

I asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).

So my request is:
Create a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.",0.5897252845867742,0.8,"Both tickets address the issue of controlling visibility and access to private issues within a project management context, with a focus on granting specific individuals permissions beyond the default settings. While Ticket1 describes a problematic scenario where the current system fails to maintain issue privacy among different user groups, Ticket2 proposes a solution in the form of an ""Involve"" mechanism to grant selective access. The underlying theme of both tickets revolves around enhancing permissions management for issues, making them very similar in nature.","* Subject: Enhanced Issue Visibility Control with Involve Mechanism
    * Description:
    Currently, managing visibility of private issues poses challenges in ensuring appropriate access levels for different users. This new requirement aims to introduce an ""Involve"" feature that addresses the concerns raised in both tickets, allowing for more granular control over issue visibility while mitigating the risk of unauthorized access or information leakage.

The proposed feature will enable project administrators and designated roles to selectively grant access to private issues on a per-user basis, overriding the default visibility rules. This ""Involve"" mechanism will function as follows:

1. **User-Specific Access**: Users who are not typically granted visibility into certain private issues can be ""involved,"" giving them temporary or permanent access as needed, without altering their global issue visibility settings or exposing other private issues.

2. **Role-Based Permissions**: Define roles (e.g., Issue Manager, Customer Support) that have the privilege to involve additional users in private issues, ensuring controlled administration of this feature.

3. **Auditing and Notifications**: Maintain an audit trail of when users are involved in an issue and notify the involved users about their access rights to the specific issue, promoting transparency and accountability.

4. **Expiry and Review**: Allow setting expiration dates for involved user access, prompting a review of continued access needs and automatically revoking access if necessary.

By implementing this enhanced visibility control mechanism, we can better accommodate scenarios where specific individuals outside the standard permission groups need access to private issues, preventing the privacy breaches and internal fraud concerns highlighted in Ticket1, while also addressing the collaborative needs expressed in Ticket2."
5797,fp,654,39178,Issue visibility,"_*Hi everyone,*_
I have a scenario with Issue permission like this:
I have a Project A to store issues (Aa, Ab, Ac) but some issues is sensitive and can only show to some specific users (U1, U2, U3, U4, U5) and cannot show to other members in the project (each issues have their own privacy).

- *In issue Aa* (related to U1, U2): I set to Private then, change ' *Issues visibility* ' of U1, U2 to ' _All Issue_ '. Then U1, U2 can see Aa;
- After 3 days, another admin create Issue *Ab* and *Ac* with ' _Private_ ' activated and only want to show to U3, U4 so he have to change ' *Issues visibility* ' of U3, U4 to ' _All Issue_ '.

+*Now this is a disater*+  : U3, U4 can freely view Issue Aa which I don't want to show them vice versa with Issue Ab, Ac now show to U1, U2. U1, U2, U3, U4 now peeps others Issue and lead to Internal Fraud which I do not want from the beginning.

Hope you guys can understand the scenario above and have a solution.

_*Thank you, Have a nice day!*_",347,35362,Issues list,"Is it possible the user to see the problem only members of the group? A user ""developer"" has seen the problem of all groups.
As part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. Тow there is only:
issues_visibility_all
issues_visibility_own
issues_visibility_public
",0.6838657982103894,0.9,"Both tickets describe a similar issue regarding the visibility of issues within a project and the need for more granular control over who can view specific issues. They highlight the limitation of the current visibility settings and the potential for security or privacy breaches due to the lack of customization in restricting access to issues on a per-user or per-group basis. The primary difference is the context provided in Ticket1 with a detailed scenario, while Ticket2 is more concise but still conveys the same core requirement for enhanced issue privacy.","- Subject: Enhanced Issue Visibility Control Based on User and Group Permissions
    - Description:
        _Hello Team,_
        
        We've encountered scenarios where the current issue visibility settings—limited to ""All Issues,"" ""Own Issues,"" and ""Public Issues""—are insufficient for managing permissions in multi-organizational or sensitive project environments. There's an urgent need to prevent unauthorized access to certain issues and maintain data confidentiality between different user groups or organizations.

        **Requirement:**
        Develop an enhanced issue visibility feature that allows administrators to set custom visibility permissions on a per-issue basis, enabling them to restrict access to specific users or user groups only. This should address the following concerns:

        1. **Granular User Control:** Each issue should support assignment of visibility permissions to individual users beyond the project's default settings, ensuring that only intended recipients like U1, U2 for Issue Aa, and U3, U4 for Issue Ab and Ac, can view those respective issues.

        2. **Group-Based Visibility:** Extend visibility settings to accommodate group memberships, allowing issues to be visible only to members of specific groups associated with different organizations. This ensures developers from one organization do not inadvertently access issues belonging to another organization or group.

        3. **Prevent Unauthorized Access:** Ensure changes in visibility settings for one issue do not inadvertently grant or revoke access to other issues, thus mitigating the risk of internal fraud and maintaining the integrity of information barriers.

        By implementing these enhancements, we aim to improve project management efficiency while safeguarding sensitive information and respecting organizational boundaries.

        _Thank you for considering this improvement. Let's work together to enhance our platform's security and usability._"
-1,fn-no-query,656,39218,Send 2FA security notifications asynchronously,"Given what Jean-Philippe Lang wrote in #38388#note-2:
> In Redmine 4.2, security notifications seem to be sent synchronously, unlike other notifications that are sent later. It triggers a timeout when sending the notification from redmine.org.

It might be better if Redmine would send security notifications asynchronously too.",421,36005,Adopt 2FA emails to new Mailer interface,"The 2FA mechanism stills uses the superseded `Mailer.security_notification().deliver` interface, this patch changes the 2FA mechanism to the new interface.",0.410505107972224,-1,,
5922,tp,660,39500,"Change the default notification option for users to ""Only for things I watch or I am assigned to""","Currently, the default notification option for a new user is *""Only for things I watch or I'm involved in""* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.

* The issue/object is *watched* by the user
* The issue is *created* by the user
* The issue is *assigned* to the user

I think the default option should now be *""Only for things I watch or I am assigned to""* (internal name: only_assigned) which sends notifications when any of the following conditions are met.

* The issue/object is *watched* by the user
* The issue is *assigned* to the user

This is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.

Consider the following scenario:

# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events
# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher
# The user receives notifications about the issue
# The user decides they do not want to receive notifications anymore and unwatches the issue
# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue

If the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:

# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned
# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher
# The user receives notifications about the issue
# The user decides they do not want to receive notifications anymore and unwatches the issue
# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher

As illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned.",586,38343,"Change the default notification option to ""Only for things I watch or I am assigned to""","Currently, the default notification option of a user is ""Only for things I watch or I'm involved in"". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to ""Only for things I watch or I am assigned to"". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.

* ""Only for things I watch or I'm involved in"" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher
* ""Only for things I watch or I am assigned to"" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher

In Redmine 5.1, we will have ""Auto watch issues on issue creation"" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to ""only_assigned"". Whether the setting is ""only_my_events"" or ""only_assigned"", the type of notifications received will be the same.

Given that ""only_my_events"" and ""only_assigned"" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from ""only_my_events"" to ""only_assigned"" because of the following reasons:

* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135
* The behavior is confusing if ""Auto watch issues on issue creation"" is enabled and the notification setting is ""only my events"". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is ""only_my_events"".


",0.9580901441016441,0.95,"Both tickets describe nearly identical requests to change the default notification option for users from ""Only for things I watch or I'm involved in"" to ""Only for things I watch or I am assigned to."" They both provide similar justifications related to reducing confusion caused by the interaction between the default auto-watch feature in Redmine 5.1.0 and the current default notification setting. The descriptions vary slightly in detail and structure but convey the same essential need for modification.","** Subject: Update Default User Notification Setting for Enhanced Clarity
    ** Description: To improve user experience and clarity regarding notification preferences, particularly with the introduction of automatic issue watching in Redmine 5.1.0, the default email notification option for new users should be revised. The current default setting, ""Only for things I watch or I'm involved in"" (internal_name: only_my_events), which includes notifications for issues the user authors, assigns, or watches, often leads to unintended notification scenarios due to auto-watching.

The proposed adjustment is to change the default setting to ""Only for things I watch or I am assigned to"" (internal_name: only_assigned). This new default will ensure users only receive notifications when they are directly assigned to an issue or have manually chosen to watch it. Consequently, it remedies potential confusion by allowing users to effectively manage their notifications by unwatching issues without conflicting with the system's auto-watch functionality. This update aligns with user expectations and addresses concerns raised in feature requests #6914 and #27135 for more controlled notification management."
5930,tp,661,39504,REST API need created_by field in the API,"While creating an issue using REST API in similar to 'assigned_to_id' for an issue assigned to a user, need a 'created_by_id' while creating a issue ",56,9812,set or change author of a issue (via rest api),"We would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)

Projects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. 
The users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is ""this line"":
/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140

The only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.
",0.6616344472404966,0.9,"Both tickets revolve around the need to control the 'created_by' or 'author' field when creating or updating issues via the REST API in Redmine. Although the descriptions differ slightly, the core requirement is the same: enabling the attribution of issue creation to a specific user through the API. Ticket1 explicitly asks for a 'created_by_id' field similar to 'assigned_to_id', while Ticket2 focuses on the ability to set or change the author of an issue via the REST API, also hinting at permission adjustments necessary for this functionality. Given the substantial overlap in the desired outcome, it's recommended to consolidate these tickets.","* Subject: Enhance REST API to Support Setting Created By / Author Field for Issues
    * Description: To facilitate seamless integration with external systems and web applications utilizing the same LDAP user base, enhance the REST API to allow for setting the 'created_by' or 'author' field when creating or updating issues. This enhancement will include introducing a 'created_by_id' parameter, akin to 'assigned_to_id', enabling external systems to attribute issue creation to the correct user account. Additionally, permissions will be adjusted to permit authorized users or roles to modify the author of an issue via the API, ensuring accurate representation of issue submission within Redmine. This will require implementing checks to validate the authenticity of the API caller and enforcing necessary rights to prevent unauthorized changes to issue metadata."
6041,fp,665,39529,Add tooltips for clarifying non-notifiable user mentions,"Currently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.

In issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.
Yet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.",664,39528,Change mention link color for users without access to view issues,"I propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.

To improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. ",0.8452922032163402,0.9,"The two tickets are indeed very similar as they both address the issue of clarifying mentions for users who do not have permission to view an issue. While Ticket1 suggests adding tooltips to explain the non-notifiability of such mentions, Ticket2 proposes changing the mention link color for these users. Combining these ideas would create a comprehensive solution to enhance understanding in the system.","- Subject: Enhance Visual Cues & Tooltip Information for Non-Notifiable User Mentions
    - Description: To improve clarity on mention notifications with respect to user permissions, implement both a distinct visual indicator and tooltip information for mentions of users who cannot view an issue. This will involve:
        - Changing the background color of mention links for these users to differentiate them visually from notifiable mentions, indicating that due to permission restrictions, a notification email will not be sent.
        - Implementing tooltips on these modified mention links to display a message clarifying the non-notifiable status of the mention, providing explicit context to users when they hover over the link. This enhancement will ensure that the system effectively communicates mention notification limitations based on user permissions."
6059,fp,667,39579,"Drop official support for MySQL 5.5, 5.6 and 5.7","In Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:

|_.Version|_.Release Date|_.End of life|
|MySQL 8.0|April 19, 2018|April, 2026|
|MySQL 5.7|October 21, 2015  |October 21, 2023|
|MySQL 5.6|February 5, 2013  |February 5, 2021|
|MySQL 5.5|December 3, 2010 | December 3, 2018|

Cloud providers also drops support for MySQL 5.7.
		
		",330,35014,Review and update supported database engines and versions ,"Supported database engines and versions were not been updated for a while and we should do it in Redmine version:""6.0.0"". 

|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\4=. Recommended Databases                      | 
                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | 
|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |
|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |
|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |
|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |",0.6497732934364215,0.85,"Both tickets are related to updating the supported database versions for Redmine, with a focus on MySQL versions. Ticket1 specifically addresses dropping support for older MySQL versions and displaying a warning for those using unsupported versions in Redmine 6.0.0. Ticket2 is more general, aiming to review and update all supported database engines and versions, which would inherently include the action proposed in Ticket1. Since Ticket2 encompasses Ticket1's objective and extends to other database engines as well, they can be considered very similar and combined under a broader scope.","* Subject: Update and harmonize supported database engines and versions for Redmine 6.0.0
    * Description: In preparation for the Redmine version 6.0.0 release, conduct a comprehensive review and update of the supported database engines and their versions to reflect current technology standings and end-of-life schedules. This includes officially dropping support for MySQL 5.5, 5.6, and displaying a warning when Redmine detects usage of MySQL versions below 8.0, in alignment with its end-of-life announced for October 21, 2023. Additionally, ensure that all supported versions of PostgreSQL, MSSQL, and SQLite are up-to-date according to their respective release and support timelines, considering compatibility with the Rails version 6.1 and recommended Ruby versions (2.7, 3.0, 3.1, 3.2). The update should provide clear guidance to users on the recommended database configurations to ensure optimal performance and security."
6063,fp,667,39579,"Drop official support for MySQL 5.5, 5.6 and 5.7","In Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:

|_.Version|_.Release Date|_.End of life|
|MySQL 8.0|April 19, 2018|April, 2026|
|MySQL 5.7|October 21, 2015  |October 21, 2023|
|MySQL 5.6|February 5, 2013  |February 5, 2021|
|MySQL 5.5|December 3, 2010 | December 3, 2018|

Cloud providers also drops support for MySQL 5.7.
		
		",379,35685,Support for MySQL > 5.7 or MariaDB,"Given that I cannot see anything on the roadmap I'd like to ask what the state of MySQL support is. As stated on the Install page the latest officially supported release is MySQL 5.6, which has been EOL since February of 2021. MySQL 5.7 seems to work just fine but is not yet officially supported (it's on the roadmap for the next major release after 5.0!) and has an EOL date of October 2023 (aka slightly over 2 years from today). At the current speed of development I fear that MySQL will be EOL long before it is officially supported by Redmine. MariaDB is not supported at all.

Any insight?",0.7782702453419983,0.9,"Both tickets concern the support for MySQL versions in Redmine. Ticket1 proposes to drop support for MySQL 5.5, 5.6, and 5.7 in Redmine version 6.0.0 and display warnings for using versions lower than 8.0. Ticket2 asks about the support status for MySQL versions greater than 5.7 and mentions MariaDB support, indicating dissatisfaction with the current support for MySQL 5.6 and the unofficial compatibility with MySQL 5.7. Since both tickets revolve around updating MySQL support, they can be combined to address the overall support policy for MySQL and inclusion of MariaDB.","* **Subject:** Update Database Support Policy for MySQL and Introduce MariaDB Compatibility
    * **Description:** In the upcoming Redmine version 6.0.0, officially drop support for outdated MySQL versions (5.5, 5.6, and 5.7) due to their end-of-life status and encourage upgrades to MySQL 8.0 or later, considering MySQL 5.7's end-of-life by October 2023. Implement a system warning to notify administrators during Redmine startup or on the Administration panel if an unsupported MySQL version is detected. Additionally, extend official support to include MariaDB as an alternative database option, addressing user demands for diversified database compatibility, and ensuring continued functionality with modern database systems."
6137,tp,673,39761,Ruby 3.3 support,"Ruby 3.3.0 is going to be released on December 25th, 2023.",564,38099,Add Ruby 3.2 support,nan,0.5832814075871351,0.8,"The two tickets are related to adding support for different versions of Ruby. Since both are about updating support for Ruby versions, they share a common theme. However, Ticket1 specifically mentions Ruby 3.3 while Ticket2 mentions Ruby 3.2. Given the proximity in versions and the nature of the requests, it's likely that the underlying work required for supporting these versions could be similar or done simultaneously. Thus, a moderate to high probability of duplication is suggested, with room for adjustment based on the specifics of the implementation details which are not fully provided.","* Subject: Add Ruby 3.2 and 3.3 Support
    * Description: With Ruby 3.3.0 scheduled for release on December 25th, 2023, and considering the need to maintain compatibility with the recent Ruby ecosystem, this task involves implementing support for both Ruby 3.2 and Ruby 3.3 within our application. This includes ensuring all features work seamlessly, updating any dependencies as necessary, and conducting thorough testing to verify compatibility with both versions."
6155,fp,674,39763,Option to disable Issue Navigation or URL Parameters,"We request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.

While the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.

A streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).

A user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.",306,34703,"""Copy link"" feature for issue and issue journal","When you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.

I think it would be convenient to be able to copy a simple URL from the view.

* URL of the issue to be copied： @https://<your redmine>/issues/1@
* URL of the issue journal to be copied： @http://<your redmine>/issues/1#note-1@",0.6273572411521788,0.85,"Both tickets address the issue of lengthy URLs containing unnecessary parameters when sharing issue links in Redmine. While Ticket1 focuses on disabling the issue navigation feature or removing the URL parameters it generates, potentially on a user-preference basis or through a system setting, Ticket2 specifically requests a ""Copy link"" feature to easily share simplified URLs for both issues and issue journals. The core problem—unnecessarily complex URLs when sharing issues—is common to both tickets, indicating a strong similarity. A combined solution could offer both global configuration options and a direct ""Copy simple link"" functionality to satisfy both requirements.","* Subject: Simplify & Provide Direct Copy Link Options for Issues and Issue Journals
    * Description: Develop a feature to simplify URLs for issues and issue journals by excluding unnecessary parameters (e.g., issue_count, issue_position, next_issue_id, prev_issue_id) and implement a ""Copy simple link"" button directly within the UI for easy sharing. This should include:
        - A global setting to toggle between the default behavior and the simplified URL format for all users.
        - Optionally, a user-specific preference to choose between the two URL formats, if feasible.
        - A ""Copy link"" button on the issue view page that copies the simplified URL (@https://redmine.com/issues/1234@).
        - An additional ""Copy link"" option beside each issue journal entry to copy its simplified URL (@http://<your redmine>/issues/1#note-1@).
    This solution aims to enhance user experience by offering more control over URL complexity and facilitating efficient sharing of issue links."
6179,fp,675,39774,Add logging for issue deletion,"The attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.

My clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with ""DELETE /issues/"". From the following log, for instance, shows that ""admin"" deleted issue @#1@ at 2023-12-04 21:30:11.

<pre>
Started DELETE ""/issues/1"" for 127.0.0.1 at 2023-12-04 21:30:11 +0900
Processing by IssuesController#destroy as HTML
  Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg"", ""ids""=>[""1""], ""todo""=>""destroy"", ""reassign_to_id""=>"""", ""commit""=>""Apply"", ""id""=>""1""}
  Current user: admin (id=1)
Redirected to http://localhost:3000/projects/ecookbook/issues
Completed 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)
</pre>

However, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.

To address this, the attached patch ensures that a ""Deleted issue: ..."" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.

<pre>
Started DELETE ""/issues/1"" for 127.0.0.1 at 2023-12-04 21:45:17 +0900
Processing by IssuesController#destroy as HTML
  Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug"", ""ids""=>[""1""], ""todo""=>""destroy"", ""reassign_to_id""=>"""", ""commit""=>""Apply"", ""id""=>""1""}
  Current user: admin (id=1)
Deleted issue: 'Feature request #15: Add a great feature' by Redmine Admin
Deleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin
Deleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin
Redirected to http://localhost:3000/projects/ecookbook/issues
Completed 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)
</pre>",167,25779,cannot know who delete issue,"we don't know who delete issue, can we add a notification mail to the project manager notify him that user ""x"" delete an issue  from the project at ""date""+"" time""
 ",0.6152615389340991,0.8,"Both tickets address the issue of tracking who deletes issues within a system. While Ticket1 focuses on enhancing the logging mechanism to record issue deletions comprehensively, including subtasks, Ticket2 proposes sending a notification email to the project manager to inform them about issue deletions. The underlying need in both tickets is to improve accountability and auditability regarding issue deletions. Given the similarity in their intent, it would be beneficial to consolidate these into a single requirement that encompasses both logging and notification functionalities.","* **Subject**: Enhance Audit Trails for Issue Deletions with Logging and Notifications
    * **Description**: Implement a feature that robustly logs and notifies about issue deletion activities to improve audit trails and accountability. This will include:

    - Modifying the Issue model to log every issue deletion comprehensively in the production.log, ensuring that deletions of both main issues and their associated subtasks are individually recorded with details such as ""Deleted issue: 'Issue Type #ID: Issue Summary' by User.""
    
    - Introducing a notification system that sends an email to the project manager immediately after an issue is deleted, providing information on the user (""x"") who performed the deletion, the issue details, and the exact date and time of the deletion.

This combined approach will not only facilitate post-event investigation through detailed logs but also offer real-time alerts to maintain oversight and control over issue management activities."
6214,fp,676,39783,Email notification settings,"Hi 

It would be great if we had more flexibility in email setup for non registered users - I hope you can help?

Would it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?

Also at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.

These two options combined would make the workflow of ticket handling for non registered users a lot slicker.


I found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847
https://www.redmine.org/boards/2/topics/2476


Thanks in advance for your time and keep up the great work 

Donald",531,37571,Custom email sender per project,"I need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:

https://github.com/Warecorp/redmine_project_specific_email_sender
https://github.com/eashman/redmine_author_notification_emails

My current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:

<pre>
678a679,686
>     # CE: project specific mail from address
>     if @issue
>       new_mail = @issue.project.custom_field_values[0].value
>       if !new_mail.nil?
>         headers.merge!('From' => new_mail)
>       end
>     end
> 
</pre>

I'm wondering if someting like this could be add to redmine.
",0.6335680153099973,0.9,"Both tickets revolve around enhancing email notification flexibility, particularly concerning project-specific settings for non-registered users and customizing the sender's email address per project. Ticket1 requests an option to use a default or custom email address for notifications and the ability to CC non-members in ticket updates. Ticket2 specifically asks for a feature to set a custom email sender per project, which is also mentioned in Ticket1. Given the significant overlap in objectives, it's advisable to consolidate these tickets to avoid redundancy.","* Subject: Enhanced Email Notification Flexibility and Customization per Project
    * Description: Enhance the email notification system to provide more flexibility for project management, including:
        1. A project-level setting to choose between using the default email address or a custom email address when sending email alerts. This will allow administrators to tailor the sender's address based on the project's communication needs.
        2. Introduce the capability to include CC fields in ticket updates, enabling the notification of non-registered users. This will facilitate smoother communication流程 with external parties involved in ticket handling.
    By implementing these features, the platform will better support diverse workflows involving both registered members and external collaborators across different projects."
6215,fp,676,39783,Email notification settings,"Hi 

It would be great if we had more flexibility in email setup for non registered users - I hope you can help?

Would it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?

Also at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.

These two options combined would make the workflow of ticket handling for non registered users a lot slicker.


I found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847
https://www.redmine.org/boards/2/topics/2476


Thanks in advance for your time and keep up the great work 

Donald",555,37941,Add non-members as watchers,"It's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.

Redmine version                4.2.1.stable
",0.5373203442867446,0.8,"Both tickets revolve around enhancing email communication and involvement of non-registered or non-member users in the issue tracking process within projects. While Ticket1 focuses on customizing email notification settings and allowing CCing non-members, Ticket2 specifically targets adding non-members as watchers to issues. The underlying objective in both tickets is to improve collaboration with external parties without granting full project membership, making them highly related.","* Subject: Enhance Collaboration with Non-Members via Email Notifications and Watchers
    * Description: To facilitate smoother collaboration with non-registered and non-member users, enhance the system to provide the following capabilities:

    1. Per-project email notification settings: Allow project administrators to choose between using the default email address or specifying a custom address for sending email alerts to participants, including non-members.
    2. CC field for non-member updates: Introduce a CC field in ticket update forms to enable sending notifications to non-member email addresses, ensuring they stay informed without requiring project membership.
    3. Add non-members as watchers: Implement functionality to add any registered user as a watcher on an issue, even if they are not part of the project. This will grant them visibility into issue updates without the need for full project inclusion, catering to large organizations where not all users need project-level access.

This consolidated requirement addresses the shared goal of both original tickets, streamlining communication and observer roles for external collaborators."
6284,fp,677,39805,"Extend ""contains"" operator in ""Parent task"" filter to support multiple issue IDs","Under the ""Parent task"" filter, the ""is"" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the ""contains"" operator to multiple issue IDs, like the ""is"" operator.

With this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the ""is"" operator but there is no way to list all descendants of multiple issues because the ""is"" operator only accepts single issue ID.",616,38575,filter parent issue no,"at Filter 
You can specify multiple ticket numbers separated by commas as the parent issue.
If it is ""equal"", multiple specified items will be reflected.
If ""include"", only the first ticket number will be reflected

ｰｰJPｰｰ
フィルタにて
親チケットとして、カンマ区切りで複数のチケット番号を指定することができますが
「等しい」であれば、複数指定したものが反映されますが
「含む」だと、１つ目のチケット番号しか反映されません

含むの場合でも、チケットナンバーを複数指定できるようになりませんか？
",0.5985174384630454,0.95,"Both tickets describe a very similar enhancement request for the ""Parent task"" filter functionality in an issue tracking system. They specifically ask for the ability to use the ""contains"" operator with multiple issue IDs, which is currently unsupported. The descriptions align closely, with one being a direct translation of the other, indicating the same core issue is being reported. Therefore, it's highly likely these tickets should be considered duplicates.","* Subject: Extend ""contains"" operator in ""Parent task"" filter to support multiple issue IDs
    * Description: Currently, the ""Parent task"" filter supports specifying multiple issue IDs using the ""is"" operator to list child issues. However, when using the ""contains"" operator, only the first issue ID is considered, limiting the ability to list all descendant issues across multiple parent tasks. This enhancement requests the extension of the ""contains"" operator to accept multiple issue IDs, enabling users to efficiently retrieve a list of all descendant issues belonging to any of the specified parent issues. This update will provide symmetry in functionality between the ""is"" and ""contains"" operators and enhance the filtering capabilities for more comprehensive issue tracking and management."
6441,fp,687,40054,Add Issue query option to include parent issue into search results,"Issue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.

So, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.",251,29519,Issues Section/Tab -Allow issues to be grouped by Parent,Allow user to select parent issue in group by choices,0.7297726812090785,0.85,"Both requirements aim to improve the visualization and retrieval of issues based on their hierarchical structure, particularly focusing on parent-child relationships. Ticket1 requests a new query option to include parent issues in search results, while Ticket2 suggests adding the ability to group issues by their parent in the issues section or tab. These enhancements are complementary and serve a similar purpose of better presenting issue dependencies and structures. Therefore, it's recommended to consolidate these tickets as they address the same underlying need for enhanced issue organization.","* Subject: Enhance Issue Query & Display to Include Parent Issues and Grouping Functionality
    * Description: Improve the issue tracking system by introducing enhanced query options and display features that facilitate understanding of issue hierarchies. This includes adding a checkbox in the issue query to optionally include parent issues in search results regardless of filter criteria, as well as extending the 'Group By' function in the Issues Section/Tab to allow users to choose parent issues as a grouping criterion. These enhancements will provide a more comprehensive overview of issue dependencies and aid in managing complex project structures."
6452,fp,687,40054,Add Issue query option to include parent issue into search results,"Issue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.

So, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.",443,36328,Issue Tab - View Issue and all its descendants,"Hello,
I need to see an Issue with all its descendants.

Until now the nearest solution I found is filtering by:

""Parent task"" ""contains"" ""<root-issue-id>""

However this does not displays (by design) the parent task itself. 

Anyone knows a way to reach this goal?

Thank you.",0.7629212160702565,0.85,"Both tickets revolve around improving the visualization of hierarchical issue structures in query results. Ticket1 requests a new query option to include parent issues alongside the filtered results, emphasizing the need for a hierarchical view. Ticket2 seeks a method to view an issue along with all its descendants, highlighting a similar requirement for displaying hierarchical relationships within the issue tracker. The overlap in objectives suggests that addressing one ticket would likely resolve the concerns of the other.","* Subject: Enhance Issue Query to Support Hierarchical Display of Parent & Descendant Issues
    * Description: To improve issue tracking and visualization, implement an enhanced issue query feature that allows users to view a comprehensive hierarchical structure of issues. This update will include two new options within the query interface: 
        1. A checkbox to ""Include Parents"": When selected, this option ensures that all parent issues of the filtered results are included in the query output, even if they do not individually meet the filter criteria. This will provide context for the returned issues and showcase their place in the hierarchy.
        2. A ""View Hierarchy"" button: Beside each issue in the query results, include a button that, when clicked, expands to display all descendants of the selected issue, including sub-tasks and subsequent child issues, thus presenting a clear view of the issue's impact and dependencies.
    This combined feature will cater to the needs expressed in both Ticket1 and Ticket2, enhancing the overall functionality and user experience for managing and analyzing interconnected issues."
6521,tp,690,40099,User api filtering by status=* broke on upgrade from 5.0 to 5.1,"I am testing the migration path from 5.0.5 to 5.1.1, we use an api call to get all users (active or not), since the user api shows only the active accounts we where using ""status="" or ""status=*"" as a modifier to get all the fields

I've got the ""status="" from this issue https://www.redmine.org/issues/32090

On 5.1.1, for any call with ""status="" we get with the http code 422:
@ {
    ""errors"": [
        ""Status cannot be blank""
    ]
}@


When I am using the filter ""status=*"" the exit code is 500, and on the logs i see:
@
I, [2024-01-23T13:20:22.820689 #2787502]  INFO -- : [0a29895f-ece3-4229-9e91-eeee48cdc573] Completed 500 Internal Server Error in 21ms (ActiveRecord: 5.1ms | Allocations: 3061)
F, [2024-01-23T13:20:22.822546 #2787502] FATAL -- : [0a29895f-ece3-4229-9e91-eeee48cdc573]   
[0a29895f-ece3-4229-9e91-eeee48cdc573] ActiveRecord::StatementInvalid (PG::InvalidTextRepresentation: ERROR:  invalid input syntax for type integer: ""*""
LINE 1: ...1, $2) AND (users.status <> 0) AND ((users.status IN ('*')))
                                                                 ^
):
[0a29895f-ece3-4229-9e91-eeee48cdc573]   
[0a29895f-ece3-4229-9e91-eeee48cdc573] app/controllers/users_controller.rb:64:in `index'
@
",278,32090,REST API: users: add support for status=*,"Currently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):

<pre>
curl -H 'Content-Type: application/json' \
  -G -K redmine-admin.auth \
  'https://redmine.example.com/users.json?name=firstname.lastname'
</pre>

it will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(
	
I would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case.",0.6739024690632008,0.9,"Both tickets describe issues related to the Redmine User API's handling of the ""status"" filter, particularly when using ""status="" or ""status=*"". The first ticket reports a breakage after upgrading from version 5.0 to 5.1, where ""status="" results in a 422 error and ""status=*"" causes a 500 Internal Server Error. The second ticket requests the addition of support for ""status=*"" to return all user statuses, similar to how it works in the Rest Issues API. Since both tickets fundamentally address the same feature's functionality, combining them makes sense to address the API inconsistency and the upgrade-related bugs simultaneously.","* Subject: Enhance User API to Support Status Filtering Including ""status=*""
    * Description: Improve the /users.:format REST API to better handle status filtering. Specifically, address the issues reported post-upgrade from Redmine 5.0 to 5.1 where using ""status="" incorrectly yields a 422 error and ""status=*"" results in a 500 Internal Server Error. Implement support for ""status=*"" to return all user records regardless of their status (active, inactive, locked, etc.), aligning with the functionality expected from similar APIs like Rest Issues which allow ""status_id=*"". This enhancement will streamline user searches by eliminating the need for multiple queries based on different status assumptions."
6539,fp,691,40103,"Allow to ""watch"" projects to get notifications","As discussed in #39854, having the option to ""watch"" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.

This could potentially replace the current notification setting to be notified for a given list of selected projects in ""My Account"".",339,35189,"New email notification option ""For any event on my bookmarked projects""","For now, if you want to be informed about all events of a huge projects portfolio, I have to update the list behind ""For any events of the selected projects only..."" quite often. 
It would be really great if we can receive all notifications of the bookmarked projects adding a new option in the notification option list : ""For any events of my bookmarked projects only...""
",0.7175215639859672,0.9,"Both tickets revolve around improving notification systems for project-related activities. Ticket1 suggests implementing a ""watch"" feature for projects to simplify subscription to project notifications, which is akin to the functionality requested in Ticket2, where the user desires a new email notification option specifically for events in their bookmarked projects. The underlying intention is the same: enabling users to easily track updates on projects they are interested in without manually managing a selection list.","* Subject: Implement ""Watch"" Feature for Automated Notifications on Bookmarked/Selected Projects
    * Description: Develop a unified ""Watch"" feature that allows users to automatically receive notifications about any event occurring within their bookmarked or selected projects. This feature will replace the existing manual process of selecting projects for notifications in ""My Account,"" streamlining the subscription process and ensuring users stay updated on all activities within projects they are interested in. Users will be able to manage their watched projects easily, akin to watching issues, enhancing the overall user experience and reducing the need for frequent account setting adjustments."
6569,fp,692,40149,Drop deprecated Redcarpet based Markdown formatter,"In Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.

Since CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.",501,37119,Drop redcarpet dependency for common_mark formatter,"Redmine fails to start when it's installed without markdown group (#36892).

We should fix this and drop the redcarpet dependency for common_mark.",0.7746521048773009,0.9,"Both tickets concern the removal of dependencies on the Redcarpet library in favor of using CommonMark Markdown within Redmine. Ticket1 focuses on discontinuing the deprecated Redcarpet-based Markdown formatter due to successful adoption of CommonMark. Ticket2 addresses a specific issue where Redmine fails to start without the markdown group and suggests dropping the redcarpet dependency for the common_mark formatter as a solution. The underlying objective of phasing out Redcarpet in favor of CommonMark is shared between the two, indicating a high degree of similarity and justifying duplication.","** Subject: Consolidate migration to CommonMark Markdown and remove Redcarpet dependency
    ** Description: 
        Given the successful transition of users to the CommonMark Markdown formatter since its introduction in Redmine 5.1 and the identified issue of Redmine not starting without the markdown group when Redcarpet is not installed (#36892), this requirement proposes a comprehensive approach to finalize the migration. The objective is to completely phase out the deprecated Redcarpet-based Markdown formatter and eliminate its associated dependencies to ensure Redmine operates seamlessly with CommonMark as the default and only supported Markdown standard. This will involve updating documentation, removing Redcarpet from installation requirements, and ensuring compatibility across all Redmine features that previously relied on Redcarpet functionality."
6577,fp,692,40149,Drop deprecated Redcarpet based Markdown formatter,"In Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.

Since CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.",592,38372,Use Commonmarker instead of Redcarpet by default when rendering Markdown attachments,"markdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.
For example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').

Since RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?",0.7499180232990719,0.9,"Both tickets address the deprecation of the Redcarpet-based Markdown formatter in favor of using CommonMark Markdown. While Ticket1 focuses on dropping support for the deprecated formatter altogether, Ticket2 specifically targets the rendering of Markdown attachments and suggests switching the default renderer to Commonmarker. The underlying issue is the same—transitioning fully to CommonMark—and thus, combining them makes sense to streamline the process comprehensively.","* Subject: Migrate completely from Redcarpet to CommonMarker for Markdown processing
    * Description: In light of the deprecation of Redcarpet-based Markdown formatting in Redmine 5.1, this requirement entails a complete transition to CommonMarker for all Markdown-related functionalities. This includes discontinuing support for the Redcarpet-based formatter, updating the default Markdown rendering behavior to use CommonMarker across all contexts (not just in-text formatting but also for attached Markdown files preview), and ensuring compatibility and consistency in text formatting across the platform. Users should experience a seamless switch with no noticeable impact on their Markdown content rendering."
6613,fp,699,40277,Set day as non-working for purposes of Precedes and Following relationships,"In my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.",102,22997,Administrative calendar,"Not only Sat. and Sun don't work. For example.
2016-06-09 is the Dragon Boat Festival of China.
That mean's Chinese don't work from 2016-06-09 to 2016-06-11,
but they have to work at 2016-06-12 (Sunday).
So, I hope admin can set which non-workday need to convert workday , 
and which workday don't need work.
And make it effective In gantt view, or calculate workdays.",0.5103513910612668,0.85,"Both tickets revolve around the need to customize working days in the calendar to account for holidays and non-standard work schedules. While Ticket1 focuses on setting specific, non-recurring days as non-working for the purpose of scheduling task relationships, Ticket2 extends this idea by also addressing the conversion of workdays into non-working days and vice versa, with an emphasis on administrative control and Gantt view adjustments. The core issue is shared, hence a duplication with merging of details could be beneficial.","* Subject: Enhanced Calendar Customization for Work Scheduling
    * Description: Enhance Redmine's calendar functionality to allow administrators to define non-recurring days as non-working, accounting for national holidays and special events. Additionally, enable the configuration of workdays that should be treated as non-working and vice versa, considering regional variations and one-off exceptions. This customization must integrate seamlessly with task scheduling, affecting the calculation of Precedes and Following relationships displayed in the Gantt view, ensuring accurate project planning across diverse work schedules and locales."
6618,fn-queried,701,40307,Attachment file rename edit option disable,How to disable the attached file edit option,22,4362,Permissions on attachments,We want to grant permissions per role to show and download attachments.,0.5564045015977066,0.2,"The two requirements are related to attachment functionality but address different aspects. The first ticket focuses on disabling the edit option for attached files, whereas the second ticket is about implementing role-based permissions for viewing and downloading attachments. Since they deal with separate functionalities within the attachment feature (editing vs. permissions), they should not be marked as duplicates.","Not applicable since the probability of duplication is less than 70%. However, if they were to be combined in a non-recommended way, it might look like this:

** Subject: Enhanced Attachment Management Permissions

** Description: Implement an enhanced permission system for managing attachments that allows administrators to disable the edit option for attached files based on user roles. Additionally, enable role-based permissions to control who can view and download attachments, providing granular control over attachment accessibility within the system."
6646,fp,703,40415,Document Journals API,"#10171 added an API to update journal's notes. This should be documented in the Wiki, namely ""Rest_Journals"":/projects/redmine/wiki/Rest_Journals?parent=Rest_api",60,10171,Updating journal notes via REST API,"Currently viewing journals via REST API is possible (with include=journals), but there is no way to update them.

Note that journal notes are edtiable in main ui.",0.7389267389655232,0.9,"Both tickets revolve around the enhancement and documentation of the Journals API, specifically focusing on the functionality to update journal notes via REST API. Ticket1 mentions the need to document the existing API for updating journal notes, while Ticket2 points out the lack of functionality to update journal notes via REST, which seems to be a misunderstanding since #10171 implies the feature exists but isn't documented well. The overlap in subject matter and the direct relation between the two tickets indicate a high likelihood that these are addressing the same underlying issue.","* Subject: Document and Enhance Journals API for Note Updates
    * Description: 
        There is a requirement to ensure the proper documentation and usability of the Journals API, particularly concerning the functionality to update journal notes. This task involves:
        
        1. Updating the project's Wiki page ""Rest_Journals"" located at ""/projects/redmine/wiki/Rest_Journals?parent=Rest_api"" to include comprehensive details on how to use the API endpoint for updating journal notes. This documentation must cover request formats, parameters, examples, and any relevant notes or limitations.
        
        2. Verify and, if necessary, improve the existing REST API endpoint for updating journal notes to ensure it is fully functional and consistent with the main UI's capability of editing journal notes. This may include testing the API for consistency, performance optimization, and ensuring returned error messages are clear and helpful.

        The ultimate goal is to provide developers with a seamless experience when managing journal notes through the REST API, mirroring the functionality available in the main user interface."
6653,fp,703,40415,Document Journals API,"#10171 added an API to update journal's notes. This should be documented in the Wiki, namely ""Rest_Journals"":/projects/redmine/wiki/Rest_Journals?parent=Rest_api",211,27870,API for editing/deleting notes in an issue,"Hi
Could you please create API for editing/deleting?
I found this comment #25793#note-7 from Toshi MARUYAMA but I can't understand how to do that.

Thanks.",0.5300475966204103,0.8,"Both tickets revolve around the enhancement and documentation of APIs related to updating, editing, or deleting notes within journals or issues in a system (likely Redmine). Ticket1 specifically asks for the documentation of an existing API to update journal notes, while Ticket2 requests the creation of an API for editing and deleting notes. Given that Ticket1 already acknowledges the existence of functionality to update notes (which likely encompasses editing), these tickets can be seen as addressing the same feature from different angles - one focusing on documentation and the other on extending the API capabilities. Therefore, it's recommended to consider them as duplicates with a focus on comprehensive documentation and ensuring the API fully supports editing and deletion.","* Subject: Enhance & Document Journals API for Note Management
    * Description: Consolidate efforts to both document the existing API for updating journal notes, as introduced in #10171, and expand its functionality to officially support editing and deletion of notes within issues. This includes updating the ""Rest_Journals"" page on the project's Wiki (under ""/projects/redmine/wiki/Rest_Journals?parent=Rest_api"") with clear instructions and examples for using the API to manage issue notes, encompassing create, read, update, and delete operations. Ensure the API is user-friendly and well-documented for seamless integration by developers."
6690,fp,705,40422,Print name and email to request that was create through email,"We have introduced an enhancement to our email-based task creation functionality.

Traditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.

Due to security considerations, we opted against using the parameter unknown_user=""create"" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=""accept"" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.

To address this issue, we've added a novel parameter ""insert_name_and_email_to_description"". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.

!Screenshot%202024-03-18%20at%2013.24.09.png!

Below is an example of how we invoke the script with this new parameter:

<pre><code class=""shell"">
/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=""production"" host=""xxx"" username=""xxx"" password=""xxx"" unknown_user=""accept"" no_permission_check=1 project=""xxx"" no_account_notice=1 insert_name_and_email_to_description=1 --trace
</code></pre>

It's important to note that the ""insert_name_and_email_to_description"" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.

I am also attaching a ""patch"" file detailing these modifications against the last commit on the master branch in our git repository.",268,31338,Add option for append mail header to ticket,"Currently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.
Its okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available.",0.7222303526974189,0.95,"Both tickets essentially request the inclusion of the email sender's information (name and email) in the ticket when it is created via email, to identify the originator of the request, especially for unregistered users. The difference lies in the articulation, with Ticket1 describing a specific implemented solution including a custom parameter, while Ticket2 proposes the idea more generally. Nonetheless, the core objective overlaps significantly, hence duplication is advisable.","* Subject: Enhance Email-based Ticket Creation to Include Sender's Details
    * Description: To improve traceability and user identification, modify the system to automatically append the email sender's name and email address to the ticket description when a new task is created via email from unregistered users. This enhancement will ensure that even without a registered account, the originator of the email can be easily identified within the Redmine platform. Implement this feature with an optional parameter for flexibility, allowing administrators to enable or disable this functionality as needed. The inclusion of email headers shall provide comprehensive details about the sender for effective communication and issue resolution tracking."
6988,fp,730,40890,Show project changes on 'Activity' page,"We would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:

* Project Creation: Log the creation of new projects.
* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.
* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.

Each of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.

Implementation Participation:

If this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine’s standards and best practices.

We believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.

Thank you for considering our request.",411,35906,Project Activity Log,"Would like a log of project-level activities, such as when someone closes or reopens a project. 

Without a log, there is no way to see who is doing project level changes, and no way to investigate problems.",0.6236833219564794,0.9,"Both tickets essentially request an improvement to the visibility of project-related activities within Redmine. While the first ticket (Ticket1) provides a more detailed proposal focusing on the 'Activity' page, including specific events like project creation and changes to project fields, the second ticket (Ticket2) is more concise but still asks for a project activity log to track actions such as closing or reopening a project. The underlying objective of enhancing project transparency and accountability is shared by both tickets.","** Subject: Enhanced Project Activity Tracking on 'Activity' Page
    ** Description: 
        To improve project transparency and management oversight, we propose integrating a comprehensive project activity tracking feature into Redmine's 'Activity' page. This enhancement will encompass the following key aspects:

        - **Project Lifecycle Events**: Log significant milestones, such as the creation, closure, and reopening of projects, along with details of the initiator and timestamp.
        - **Project Detail Modifications**: Display changes made to project attributes, including standard fields (e.g., project name, description) and custom fields, with a visual diff to highlight modifications clearly.
        - **User Accountability**: Ensure every logged activity is attributed to the user responsible, facilitating audit trails and issue resolution.

    By implementing this feature, Redmine users will gain insights into project-level activities, enabling better collaboration, decision-making, and troubleshooting. Our team is eager to collaborate with the Redmine development team on this initiative, adhering to the platform's coding standards and contributing to a seamless integration of this functionality."
7008,fp,730,40890,Show project changes on 'Activity' page,"We would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:

* Project Creation: Log the creation of new projects.
* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.
* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.

Each of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.

Implementation Participation:

If this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine’s standards and best practices.

We believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.

Thank you for considering our request.",636,38951,Enable journaling on projects,"It's so usefull to have history of project field and custom fields changes.
Also it's desirable about project settings changes.",0.6648246838490717,0.9,"Both tickets essentially request the same functionality, which is to track and display changes related to projects. Ticket1 provides a detailed proposal for showing project changes on the 'Activity' page, including creation, standard field updates, and custom field modifications. Ticket2, though less detailed, asks for journaling of project fields, custom fields, and settings changes, which aligns directly with the core idea presented in Ticket1. Therefore, it's highly likely that addressing one ticket would resolve the concern of the other.","* Subject: Implement Project Activity Journal on 'Activity' Page
    * Description: Enhance Redmine's functionality by introducing a comprehensive project activity journal on the 'Activity' page. This feature will encompass the following capabilities to improve project transparency and management:

        1. Project Creation Logging: Automatically log and display the creation of new projects, including the creator and creation date.
        2. Project Field Change Tracking: Track and visualize any modifications made to standard project fields such as project name, description, and others, accompanied by a diff view to highlight changes, the author of the change, and the date.
        3. Custom Field Change Inclusion: Ensure all alterations to custom fields associated with projects are recorded, presented with before-and-after comparisons, along with details of who made the change and when.
        4. Project Settings History: Maintain a record of changes to project settings, providing an audit trail for administrative actions.

    Implementation Collaboration Offer:
    Our team stands ready to actively contribute to the development of this feature upon approval. We kindly request the guidance of core developers to guarantee our work adheres to Redmine's development guidelines and standards. This addition is anticipated to greatly benefit Redmine users by enhancing project oversight and facilitating collaboration.

    We appreciate your consideration and look forward to the opportunity to collaborate on this enhancement."
7046,tp,734,41031,Include project identifier in List-Id header field of notification emails,"I propose adding the project identifier to the @List-Id@ header field of notification emails. Currently, the @List-Id@ is based on the emission email address (@Setting.mail_from@). I want to change the List-Id to include both the project identifier and the emission email address.

The current notification email headers include the @X-Redmine-Project@ field, which contains the project identifier. However, widely used email services Gmail do not support filtering based on custom headers starting with @X-@. This makes it difficult to create filters based on the project.

By including the project identifier in the @List-Id@, users can utilize Gmail’s @list@ operator to create filters based on the project. This enhancement would improve the ability to organize and manage project-related emails in Gmail.


*Current Implementation:*
For an emission email address of @redmine@example.net@, the current List-Id is:

<pre>
List-Id: <redmine.example.net>
</pre>

*Proposed Implementation:*
For an emission email address of @redmine@example.net@ and a project identifier of @ecookbook@, the proposed List-Id is:

<pre>
List-Id: <ecookbook.redmine.example.net>
</pre>

*Backward Compatibility:*

Changing the @List-Id@ header field value will affect users who depend on the current format. To address this, we may need to add a new setting in Administration > Settings page allowing users to choose whether to include the project identifier in the List-Id. This ensures that existing workflows relying on the current List-Id format remain unaffected.
",73,13359,Add project identifier to List-Id header in notification emails for better Gmail filtering,"This gives the possibility to filer mail-updates from different project into different folders.

<pre>
--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100
+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100
@@ -386,7 +386,7 @@
             'X-Auto-Response-Suppress' => 'OOF',
             'Auto-Submitted' => 'auto-generated',
             'From' => Setting.mail_from,
-            'List-Id' => ""<#{Setting.mail_from.to_s.gsub('@', '.')}>""
+            'List-Id' => ""<#{@issue.project.identifier}.#{Setting.host_name}>""

     # Removes the author from the recipients and cc
     # if he doesn't want to receive notifications about what he does
</pre>

The resulting List-Id could look like this:

<pre>
List-Id: <cantemo-ab.vvv.cantemo.com>
</pre>",0.85113727714264,0.95,"The two tickets are indeed very similar, both aiming to include the project identifier in the List-Id header field of notification emails to facilitate better email organization, particularly in Gmail. The descriptions diverge slightly with the second ticket providing a code snippet as a suggestion for implementation, but the core requirement and intended outcome are essentially the same. Given the high level of similarity and shared objective, it's advisable to treat these as duplicates to streamline the development process and avoid redundant work.","** Subject: Enhance List-Id Header with Project Identifier for Improved Email Filtering
    ** Description: To enhance email management and enable more efficient filtering, particularly in Gmail, the List-Id header field of notification emails should be updated to incorporate the project identifier alongside the emission email domain. This modification will facilitate the creation of filters using Gmail's list operator based on projects, allowing users to categorize and manage project-related emails more effectively.

    The new implementation should dynamically generate the List-Id as follows: `<project_identifier>.<emission_email_domain>`. For instance, with an emission email of `redmine@example.net` and a project identifier of `ecookbook`, the List-Id would be `List-Id: <ecookbook.redmine.example.net>`.

    To ensure backward compatibility and flexibility for users who rely on the current List-Id format, introduce a configurable setting in the Administration > Settings page. This setting will permit administrators to opt-in or out of including the project identifier in the List-Id header, thereby preserving existing workflows if necessary."
7102,fp,738,41143,Project Menu Module Access Configuration,"Dear Redmine Team,

I would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as ""Time Tracking,"" ""Gantt,"" and ""Calendar"" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.

Implementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.

Thank you for considering this request. I am available to discuss further details if needed.

Sincerely,",15,2585,"Add Modules to hide/display Overview, Activity, Roadmap","When opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:

* Overview
* Activity
* Roadmap

Could tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..).",0.5725545527693022,0.9,"Both tickets are focused on enhancing the configurability of project menu modules for end-users, with the primary goal of customizing the user interface based on specific needs. Ticket1 emphasizes the need to control access to certain modules like Time Tracking, Gantt, and Calendar to simplify the user experience. Ticket2 extends this idea by requesting additional controls to hide or display the Overview, Activity, and Roadmap sections, further customizing the project view. Since both tickets aim to provide administrators with granular control over module visibility, they are very similar and can be consolidated into a single requirement.","* Subject: Enhanced Project Menu Module Customization for Administrators
    * Description: To enhance the user experience and accommodate varying levels of access and confidentiality requirements, this feature requests an expansion of the project settings to allow administrators complete control over which project menu modules are accessible to end users. This includes the ability to enable or disable modules such as ""Time Tracking,"" ""Gantt,"" ""Calendar,"" as well as hide or display sections like ""Overview,"" ""Activity,"" and ""Roadmap."" The enhanced customization will ensure a streamlined workspace tailored to each project's unique needs, avoiding information overload and improving overall usability for clients and users with limited access permissions."
7107,tp,738,41143,Project Menu Module Access Configuration,"Dear Redmine Team,

I would like to propose an enhancement that would allow administrators to define which project menu modules are accessible to end users. Currently, modules such as ""Time Tracking,"" ""Gantt,"" and ""Calendar"" are enabled by default, which can overwhelm the user experience, especially in scenarios where end users only need access to request submission and tracking modules.

Implementing this feature would improve usability and streamline the workspace for users who require limited access, avoiding unnecessary distractions and simplifying their interaction with the platform.

Thank you for considering this request. I am available to discuss further details if needed.

Sincerely,",59,10091,Allow administrator to permanently disable modules,"In our environment we do not have any need for the gantt charts or calendar modules.

While the administrator can specify which modules should be enabled by default on new projects, the project owner can elect to enable other modules also.

It would be nice to give the administrator the ability to enable/disable modules from ever being used in any project so if the administrator was to disable the calendar module or the time tracking module in the overall application settings the modules would not even show up as options for new projects or in the project settings. Projects that may already have the modules enabled would also no longer display the disabled modules.",0.6277982750021642,0.9,"Both tickets revolve around enhancing the administrator's control over project menu module accessibility. While Ticket1 focuses on configuring access for end-users to avoid overwhelming them with unnecessary modules, Ticket2 extends this idea by suggesting the permanent disabling of certain modules at the application level, preventing even project owners from enabling them. The core objective of streamlining the user interface and customizing accessibility according to organizational needs overlaps significantly in both tickets.","** Subject: Enhanced Administrator Control over Project Menu Module Accessibility
    ** Description: To improve system customization and user experience, develop a feature that empowers administrators to configure project menu module access comprehensively. This will include the ability to define default accessible modules for end-users, with an added option to permanently disable certain modules (e.g., Gantt, Calendar, Time Tracking) across all projects. Disabling a module at the application level will prevent it from appearing as an option in new projects and within existing project settings, ensuring consistent access restrictions across the platform. This functionality will streamline workspaces, reduce clutter, and cater to the diverse needs of different user roles and organizational requirements."
