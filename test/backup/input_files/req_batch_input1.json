{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies.\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket.\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNew view-hook in contextual \"(action) menu\" in issues show view\n\n--Description--\nAs proposed in this forum-thread (message#7093) it would be nice if we could (at least) add items to these contextual \"menus\" using plugin hooks.\r\n\r\nI'd suggest to interpret the proposal done in the forum as: \"please add a hook like @:view_issues_show_contextual@\".\r\n\r\nRegards,\r\n\r\nMischa.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission to log time for another user\n\n--Description--\nThis patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)\r\n\r\nI never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.\r\n\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers.\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change.\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected.\n\n-- Ticket2\n--Subject--\nNew view-hook in contextual \"(action) menu\" in issues show view\n\n--Description--\nAs proposed in this forum-thread (message#7093) it would be nice if we could (at least) add items to these contextual \"menus\" using plugin hooks.\r\n\r\nI'd suggest to interpret the proposal done in the forum as: \"please add a hook like @:view_issues_show_contextual@\".\r\n\r\nRegards,\r\n\r\nMischa."}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsorting should disregard blank fields\n\n--Description--\nWhen sorting something in ascending order all the issues that have a blank value for this field are first in the list.\r\n\r\nInstead, anything that does not have a value should be pushed to the end of the list.  They are essentially undefined.\r\n\r\nIf I'm sorting a list of 300 isses by version number, I'm not asking to see the blank ones first -- I'm asking to see the lowest version number first.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members.\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users.\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users.\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to disable feature attachment\n\n--Description--\nAttachment max. size\r\nshould be as\r\nAttachment max. size (zero for disabling feature)\r\n\n\n-- Ticket2\n--Subject--\nPermissions on attachments\n\n--Description--\nWe want to grant permissions per role to show and download attachments."}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround...\n\n-- Ticket2\n--Subject--\nCreating global (default) categories.\n\n--Description--\nIt would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.\r\n\r\nRedmine is the Best!!!"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround...\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for.\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project.\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nText fields used for data entry should trim whitespace.\n\n--Description--\nFor example, in the password recovery field for email address, if the address was copied and pasted with leading or trailing whitespace it should be trimmed off before use. Trying to send email to ` joe@blow.com ' will fail miserably without the user knowing.\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nset or change author of a issue (via rest api)\n\n--Description--\nWe would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)\r\n\r\nProjects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. \r\nThe users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is \"this line\":\r\n/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140\r\n\r\nThe only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.\r\n\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nset or change author of a issue (via rest api)\n\n--Description--\nWe would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)\r\n\r\nProjects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. \r\nThe users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is \"this line\":\r\n/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140\r\n\r\nThe only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.\r\n\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||\n\n-- Ticket2\n--Subject--\nAllow collapse/expand in gantt chart\n\n--Description--\nEric - it would be great if there was a way to collapse nested structures in the Gantt chart plugin you developed.. for example, if we don't want to see all the tasks/bugs for our versions, but just want a high level picture of what's coming up, it would be nice to be able to collapse each version to a single row that shows the due date for the version. Possible? Thanks!"}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+.\n\n-- Ticket2\n--Subject--\nAssign a task to multiple users\n\n--Description--\nIt would be great if it was possible to assign a task to multiple users; And have another state, \"being solved\",\r\nwhere a task is locked and \"assigned\" to a specific one.\r\n\r\nWhy: \r\n\r\nIn some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign\r\na task to several workers, and the first who gets available would then grab the task, setting the \"being solved\"\r\nto himself.\r\n"}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRestrict log time for old days\n\n--Description--\nFor example any user have to log his spent time today or tomorrow.\r\nIf he try to log time for period more than yesterday - it should be not possible.\r\nThere are kind of users that sometimes log their time for period weeks ago and this is bad.\r\nIs there any suggestion how to prevent such things.\n\n-- Ticket2\n--Subject--\nPermission to log time for another user\n\n--Description--\nThis patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)\r\n\r\nI never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.\r\n"}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPermits defining a default \"due date\"\n\n--Description--\nEach project has a \"due date\" (when working with clients). It would be awesome to permits to add a default \"due date\" for a project.\r\nFor each new issue, the \"due date\" will be filled by default.\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue.\n\n-- Ticket2\n--Subject--\nPermits defining a default \"due date\"\n\n--Description--\nEach project has a \"due date\" (when working with clients). It would be awesome to permits to add a default \"due date\" for a project.\r\nFor each new issue, the \"due date\" will be filled by default."}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>\n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConfigure display of completed versions by default\n\n--Description--\nis there any method to show completed version in roadmap by default ?\r\n\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConfigure display of completed versions by default\n\n--Description--\nis there any method to show completed version in roadmap by default ?\r\n\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow overriding the default text formatting in each project\n\n--Description--\nIt would be good to let the text formatting be selected per project, rather than only a global default. It would be useful for bigger installations that have more diverse set of users."}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n\n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n\n\n-- Ticket2\n--Subject--\nArchive/close a project via API\n\n--Description--\nHi!\r\n\r\nIt would be great to archive or close a project via the API"}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow a bigger range for the gantt timeline\n\n--Description--\nCurrently the gantt chart can only display up to 24 months. Every bigger value is ignored and sets the chart back to 6 months.\r\nThere is no obvious reason for this constraint, so the possible range should be extended to more than 24 months (maybe 48 or a configurable value).\n\n-- Ticket2\n--Subject--\nAllow collapse/expand in gantt chart\n\n--Description--\nEric - it would be great if there was a way to collapse nested structures in the Gantt chart plugin you developed.. for example, if we don't want to see all the tasks/bugs for our versions, but just want a high level picture of what's coming up, it would be nice to be able to collapse each version to a single row that shows the due date for the version. Possible? Thanks!"}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added.\n\n-- Ticket2\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?"}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management.\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need.\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd ability to configure limit of attachments at once\n\n--Description--\nCurrently there is a hard limit of only 10 attachments per change of an issue. It would be nice if this was configurable or removed completely if possible.\r\n\r\nI'm wondering if there was a specific reason why this limit was added in the first place.\r\n\r\nRelated Issue: #18555, #8579\r\nThis is the code in question: source:/trunk/public/javascripts/attachments.js#L6\n\n-- Ticket2\n--Subject--\nAllow to disable feature attachment\n\n--Description--\nAttachment max. size\r\nshould be as\r\nAttachment max. size (zero for disabling feature)\r\n"}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[Rest API][custom field]Why \"GET /custom_fields.xml\" required the System manager's privilege?\n\n--Description--\nDear developers\r\n\r\nWhy Getting \"Custom_field's Possible values\" required the System manager's privilege?\r\n\r\nI am creating a Redmine client by C#.\r\nMy Redmine project have Custom Field as List Format.\r\n\r\nMy C#'s Client can get Custom Field value,but can not update Custom Field.\r\nBecase Getting \"Possible values\" required the System manager's privilege.\r\n\r\nI can not give the system administrator privileges to all users.\r\nI want all user to be able to get Possible values.\r\n\r\nBest Regards.\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n[Rest API][custom field]Why \"GET /custom_fields.xml\" required the System manager's privilege?\n\n--Description--\nDear developers\r\n\r\nWhy Getting \"Custom_field's Possible values\" required the System manager's privilege?\r\n\r\nI am creating a Redmine client by C#.\r\nMy Redmine project have Custom Field as List Format.\r\n\r\nMy C#'s Client can get Custom Field value,but can not update Custom Field.\r\nBecase Getting \"Possible values\" required the System manager's privilege.\r\n\r\nI can not give the system administrator privileges to all users.\r\nI want all user to be able to get Possible values.\r\n\r\nBest Regards.\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? \n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects.\n\n-- Ticket2\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s).\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ...\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification based on custom field value\n\n--Description--\nHi all,\r\n\r\nIs there any way to define a custom field as a list of email + value ? and if the custom field value has changed in some issues an email is sent the corresponding email ?\r\n\r\neg : \r\nCustom field named GROUP with the following values:\r\nemail    | group name|\r\na@eg.com | g1        |\r\nb@eg.com | g2        |\r\nc@eg.com | g3        |\r\n\r\n\r\nIn the issue, we can select the group. When we select the group : g1, an email is sent to a@eg.com.\r\n\r\nIs there any way to do this ?\r\n\r\nThanks for help.\r\n\r\nRegards, \r\n\r\nAniss\n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVisually mark closed subprojects on parent project page\n\n--Description--\nThere is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.).\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVisually mark closed subprojects on parent project page\n\n--Description--\nThere is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.).\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVisually mark closed subprojects on parent project page\n\n--Description--\nThere is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.).\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n"}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\".\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake default search scope configurable\n\n--Description--\nRight now the quick search box only searches the current project. In #22125 the person asking would like to have the default changed to \"current project + sub-projects\". I'd be interested in setting it to \"all projects\", while somebody else might like to set this to default to a specific project only.\r\n\r\nSO I think it would be best if the admin could set the default scope of the quick search function from the admin backend.\n\n-- Ticket2\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?"}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook to action_menu\n\n--Description--\nPlease add hook to app/views/issues/_action_menu.html.erb\n\n-- Ticket2\n--Subject--\nNew view-hook in contextual \"(action) menu\" in issues show view\n\n--Description--\nAs proposed in this forum-thread (message#7093) it would be nice if we could (at least) add items to these contextual \"menus\" using plugin hooks.\r\n\r\nI'd suggest to interpret the proposal done in the forum as: \"please add a hook like @:view_issues_show_contextual@\".\r\n\r\nRegards,\r\n\r\nMischa."}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd hook to action_menu\n\n--Description--\nPlease add hook to app/views/issues/_action_menu.html.erb\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created.\n\n-- Ticket2\n--Subject--\nMerge Issues\n\n--Description--\nFeature Request: Merge related issues\r\n\r\nThe idea would be to create a \"Merge Issue\" link next to the \"Duplicate\" and \"Delete\" links when viewing or updating Issues. Clicking it presents a box allowing you to enter an Issue number to merge with. Merging two issues combines all the comments and status updates chronologically (and of course presents an option to re-edit the title of the newly combined issue).\r\n\r\nThis would be super helpful! Sometimes issues are entered as separate tickets, when in fact they are the same or merely different aspects/perspectives on the same task. We don't want to just delete or close one of them, because they often contain useful comments relating to that particular aspect of the same task. Sorting through all the duplicate issues is a huge pain, but merging the issues would solve this problem."}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have.\n\n-- Ticket2\n--Subject--\nset or change author of a issue (via rest api)\n\n--Description--\nWe would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)\r\n\r\nProjects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. \r\nThe users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is \"this line\":\r\n/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140\r\n\r\nThe only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.\r\n"}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nMention user on issues and wiki pages using @user with autocomplete\n\n--Description--\nhttps://github.com/dwarburt/redmine-mention-plugin is ok, but I think would be awesome to have something like Github where it has an inline autocomplete for users etc. I think this should be built into the core plugins maybe?\r\n\r\nfor reference check this out https://github.com/tactivos/jquery-sew"}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice.\n\n-- Ticket2\n--Subject--\nImplement grouping issues by date (start, due, creation, update, closing dates)\n\n--Description--\n* group by date creation asc\r\n* group by date creation desc\r\n* group by date start asc\r\n* group by date start desc\r\n* group by date end asc\r\n* group by date end desc\r\n* group by date closing asc\r\n* group by date closing desc"}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice.\n\n-- Ticket2\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n"}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice.\n\n-- Ticket2\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details."}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\n% Done for Parent Tasks [2]\n\n--Description--\nIf I have parent tasks and sub tasks and I use manual (per issue) % done values, then the parent gets the average of the values of the subtasks.\r\nHowever if I use the option to set % done from status updates then instead of inheriting its % done from the subtasks it takes it from the status attached on the parent task.\r\n\r\nExample:\r\n\r\n!parent.jpg!\r\n\r\nIn this case 3 of 4 subtasks are finished and the 4th is in progress, yet the parent task remains at 10% because its status is just 'Developing' (which means not much for a container task).\r\n\r\nI actually have two separate requests here:\r\n\r\n# I think that parent tasks should inherit their done% from the sub tasks in both modes (note that when using per-issue Done% values I do not get the option to pick a value for the parent, it is always computed, so why not for the by-status version too?)\r\n# Rather than average the %Done of the child tasks I would prefer to weight them by the estimated time of each subtask, so if I have 2 x 8 hr tasks finished and one 4 hour task not started the parent would be at 80% and not 66%.\r\n"}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?\n\n-- Ticket2\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>"}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488.\n\n-- Ticket2\n--Subject--\nChanging the owner of an issue\n\n--Description--\nI would like a functionality to change the owner \r\n(creator) of an issue.\r\n\r\nIt would be neat if this functionality had its own\r\npermisson flag instead of being part of the \"Edit Issue\".\r\nOtherwise just include it in the \"Edit Issue\".\r\n\r\n\r\nIn many situations you create an issue on behalf of \r\nanother and it would be neat if you could set the ownership \r\nto be the person whom you are creating it on behalf of.\r\n\r\nCurrently, I do it by changing the data directly \r\nin the database... :-/\r\n\r\n\r\nBTW I have made a similar functionality in a customized \r\nversion of Bugzilla and that functionality is very often \r\nused and really nice to have."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd ability to \"Duplicate\" / \"Save as\" custom queries\n\n--Description--\nNow, when I want to add a new custom query, which should be based on an existing one with just some slight changes, there is no way how to duplicate and/or save as modified version as a new query\n\n-- Ticket2\n--Subject--\nCopy/Duplicate a custom query/saved filter\n\n--Description--\nI would like to be able to copy a custom query/filter.\r\n\r\nI often set-up filters that are identical except for one filed (eg. assigned to). It would be handy to be able to duplicate an existing filter."}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd ability to \"Duplicate\" / \"Save as\" custom queries\n\n--Description--\nNow, when I want to add a new custom query, which should be based on an existing one with just some slight changes, there is no way how to duplicate and/or save as modified version as a new query\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd ability to \"Duplicate\" / \"Save as\" custom queries\n\n--Description--\nNow, when I want to add a new custom query, which should be based on an existing one with just some slight changes, there is no way how to duplicate and/or save as modified version as a new query\n\n-- Ticket2\n--Subject--\nAdd description field to custom queries\n\n--Description--\nEspecially for public queries, it would be really useful to provide a simple description field where one could describe what the query displays and what it's used for."}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nCreating global (default) categories.\n\n--Description--\nIt would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.\r\n\r\nRedmine is the Best!!!"}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects\n\n-- Ticket2\n--Subject--\nCould not add clickable Link to a local windows directory when creating redmine demand\n\n--Description--\nHello,\r\n\r\nIs-it possible with Redmine to add hypertext links that points to local windows directories when creating redmine demand?\r\nExample :If we add a link to network directory (\\\\machine_test\\tmp), it will not be clickable ?\r\n\r\nThank you in advance.\r\n\r\nBest regards,\r\n\r\nRiadh\r\n"}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects\n\n-- Ticket2\n--Subject--\nShow PDF attachments and repo entries instead of downloading them\n\n--Description--\nFollowing up on #22058, I would like to propose, that also PDF files are shown directly instead of forcing downloads.\r\n\r\nThis applies to two use cases:\r\n\r\nh3. 1. Following a download link\r\n\r\nWhen following a download link, image are sent with @content-disposition: inline@, while all other files are sent with @attachment@. Since the some browsers is able to render PDF files directly (Firefox, Chrome, Safari, IE with Adobe Reader installed) and people are probably used to it, I think that extending this exception to PDF files is a reasonable change. If native PDF rendering within the browser is not supported, then a download will be initiated by the browser anyway.\r\n\r\nh3. 2. Displaying a PDF file in repository browser\r\n\r\nWhen accessing \"View\" within the file view in the repository browsers, Redmine currently forces a download of the PDF. Instead an iframe could be rendered which displays the PDF within the Redmine UI. Browser support for this use case is similar to No. 1.\r\n\r\n\r\n-------\r\n\r\nThe patch series is based on current trunk (r15332) plus the changes of #22482. If desired, I could isolate the changes further, to make them work without #22482.\r\n\r\nh3. @0004-Don-t-force-download-of-PDFs-but-show-in-browser-pre.patch@\r\n\r\nThe change updates @AttachmentsController@ and @RepositoryController@ to send PDF files with @content-disposition: inline@. (See first use case.)\r\n\r\nh3. @0005-Show-pdf-preview-for-repository-files-and-attachment.patch@\r\n\r\nThe change adds @attachments/pdf@ and @common/_pdf@ views to render PDF files in an iframe/object construct. (See second use case.)\r\n\r\nSince we cannot easily know the PDF\u2019s dimensions, the frame size follows the following rules:\r\n\r\n* it is as wide as possible (100%)\r\n* in general it is as high as it is wide\r\n* it is never higher than 80 % of the viewport (80vh), since we want to make sure, that there is always a bit of Redmine UI visible to avoid getting \u201ctrapped\u201d within the frame\r\n\r\nUsing a nested object/iframe structure was taken from http://pdfobject.com/static.html"}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here.\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here.\n\n-- Ticket2\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details."}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.\n\n-- Ticket2\n--Subject--\nAssign a task to multiple users\n\n--Description--\nIt would be great if it was possible to assign a task to multiple users; And have another state, \"being solved\",\r\nwhere a task is locked and \"assigned\" to a specific one.\r\n\r\nWhy: \r\n\r\nIn some teams, there are several workers with the ability to solve a specific task. It would be preferable to assign\r\na task to several workers, and the first who gets available would then grab the task, setting the \"being solved\"\r\nto himself.\r\n"}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.\n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this.\n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nConfigure display of completed versions by default\n\n--Description--\nis there any method to show completed version in roadmap by default ?\r\n"}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n\n\n-- Ticket2\n--Subject--\nsorting should disregard blank fields\n\n--Description--\nWhen sorting something in ascending order all the issues that have a blank value for this field are first in the list.\r\n\r\nInstead, anything that does not have a value should be pushed to the end of the list.  They are essentially undefined.\r\n\r\nIf I'm sorting a list of 300 isses by version number, I'm not asking to see the blank ones first -- I'm asking to see the lowest version number first."}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nchange sort order for due date column on \"Issues assigned\" page\n\n--Description--\nAs per message#49589, I'd want to see either default date sorting changed or the ability to set it on-demand.\r\n\r\nIf I'm requesting issues to be sorted by due date, it means due date is of importance to me, so issues with an assigned due date should be somehow highlighted over those without (i.e.: by sorting before).\r\n\r\nNot having an assigned due date on an issue means I don't know/it doesn't matter and, again, known info should prevail over _\"don't knows/doesn't matters\"_.\r\n\r\nExcluding in the query issues without due date may make sense sometimes but I can think of a lot of scenarios when it doesn't (i.e.: multifilter: I still want to see issues at critical priority sorted before any issues at normal priority, even if no due date is assigned to them).\r\nAn issue can have an implicit due date as long it has a target version assigned (that of the target version).\r\n\r\nI can't think of an user case where things with no due date should be meaningfully presented before those with a due date when sorting ascending order.\r\n\r\nSo, in sorting by due date (ascending), I would expect issues sorted like this:\r\n* 1/MAR/2016\r\n* 2/MAR/2016\r\n* no due date [or have it set to its target version's one and sort accordingly]\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOpen GANTT for more than 24months\n\n--Description--\nHi,\r\n\r\nwe have projects that run for more than 24months and it is necessary to print a gantt chart over the whole project.\r\nI'd like to increase it.\r\n\r\nI suppose, changes necessary are in:\r\nlib/redmine/helpers/gantt.rb\r\n\r\nline 68: replace 24 by any number you like. Maybe we can make this a setting?\r\nAdditionally, the PNG generation needs some adaptation to fit the entire sheet on one page (font size, month/year shortened to month/2-digit-year)\n\n-- Ticket2\n--Subject--\nAllow collapse/expand in gantt chart\n\n--Description--\nEric - it would be great if there was a way to collapse nested structures in the Gantt chart plugin you developed.. for example, if we don't want to see all the tasks/bugs for our versions, but just want a high level picture of what's coming up, it would be nice to be able to collapse each version to a single row that shows the due date for the version. Possible? Thanks!"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOpen GANTT for more than 24months\n\n--Description--\nHi,\r\n\r\nwe have projects that run for more than 24months and it is necessary to print a gantt chart over the whole project.\r\nI'd like to increase it.\r\n\r\nI suppose, changes necessary are in:\r\nlib/redmine/helpers/gantt.rb\r\n\r\nline 68: replace 24 by any number you like. Maybe we can make this a setting?\r\nAdditionally, the PNG generation needs some adaptation to fit the entire sheet on one page (font size, month/year shortened to month/2-digit-year)\n\n-- Ticket2\n--Subject--\nAllow a bigger range for the gantt timeline\n\n--Description--\nCurrently the gantt chart can only display up to 24 months. Every bigger value is ignored and sets the chart back to 6 months.\r\nThere is no obvious reason for this constraint, so the possible range should be extended to more than 24 months (maybe 48 or a configurable value)."}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Members\n\n--Description--\nHey Guys,\r\n\r\nit is possible to hide the \"Members\" container in project overview?\r\n\r\n\r\nThanks in advance\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Members\n\n--Description--\nHey Guys,\r\n\r\nit is possible to hide the \"Members\" container in project overview?\r\n\r\n\r\nThanks in advance\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide Members\n\n--Description--\nHey Guys,\r\n\r\nit is possible to hide the \"Members\" container in project overview?\r\n\r\n\r\nThanks in advance\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nAbility to add private comments from the issue bulk edit page\n\n--Description--\nIt is currently not possible to add private comments from the issue bulk edit page, is this by design? If not it would be nice if this was possible."}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude in Subproject's filter a option 'is not'\n\n--Description--\nA option 'is not' in Subproject's filter woud be a very helpful. The selection's shape current requires many actions that will replaced by this option. \n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude in Subproject's filter a option 'is not'\n\n--Description--\nA option 'is not' in Subproject's filter woud be a very helpful. The selection's shape current requires many actions that will replaced by this option. \n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude in Subproject's filter a option 'is not'\n\n--Description--\nA option 'is not' in Subproject's filter woud be a very helpful. The selection's shape current requires many actions that will replaced by this option. \n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud\n\n-- Ticket2\n--Subject--\nSearch in project and its subprojects by default\n\n--Description--\nThe default search scope when in a project is now only the selected project. \r\nIn my setup there are about 25 different projects, so it is easy if the search scope would always be 'all projects' or 'this and its subprojects'. Is it possible to add a configuration option to enable that?"}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud\n\n-- Ticket2\n--Subject--\nMake default search scope configurable\n\n--Description--\nRight now the quick search box only searches the current project. In #22125 the person asking would like to have the default changed to \"current project + sub-projects\". I'd be interested in setting it to \"all projects\", while somebody else might like to set this to default to a specific project only.\r\n\r\nSO I think it would be best if the admin could set the default scope of the quick search function from the admin backend."}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet note as private is bulk edit mode\n\n--Description--\nHello,\r\n\r\nSometimes, we want to add the same private note to multiple issues. Unfortunately, when you bulk edit issues, the checkbox to set the note as private is not present.\r\n\r\nIt would be good if we could set the private flag when using the bulk edit mode to add a note to multiple issues.\r\n\r\nThank you\n\n-- Ticket2\n--Subject--\nDefault value for the private issue flag\n\n--Description--\nIt would be useful to have the possibility, to set the default value for the \"private issues\"-flag for each project."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet note as private is bulk edit mode\n\n--Description--\nHello,\r\n\r\nSometimes, we want to add the same private note to multiple issues. Unfortunately, when you bulk edit issues, the checkbox to set the note as private is not present.\r\n\r\nIt would be good if we could set the private flag when using the bulk edit mode to add a note to multiple issues.\r\n\r\nThank you\n\n-- Ticket2\n--Subject--\nAbility to add private comments from the issue bulk edit page\n\n--Description--\nIt is currently not possible to add private comments from the issue bulk edit page, is this by design? If not it would be nice if this was possible."}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version.\n\n-- Ticket2\n--Subject--\nBulk edit for version list view\n\n--Description--\nI just met the problem to do a thousands click when i want to have many version status set in one step. It would be great to have a similar javascript context menu for version view like we have for issues.\r\nEscpecially the status attribute but also a bulk edit form for beeing able to apply attrib changes /custom and standard fields) to all versions then would be very useful."}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFiles download log\n\n--Description--\nI want to view download log of uploaded files at project files. The log must be contains user, file and download time. \n\n-- Ticket2\n--Subject--\nFeature Request: File download history\n\n--Description--\nHi,\r\n\r\nCurrently, files download only show the download count info. It would be nice to see more download history such as user name, client IP, download date time etc. for auditing purpose.\r\n\r\nCheers,\r\n\r\nTao"}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability \n\n-- Ticket2\n--Subject--\nPermissions on attachments\n\n--Description--\nWe want to grant permissions per role to show and download attachments."}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability \n\n-- Ticket2\n--Subject--\nAllow to disable feature attachment\n\n--Description--\nAttachment max. size\r\nshould be as\r\nAttachment max. size (zero for disabling feature)\r\n"}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability \n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability \n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nPermission for seeing Members on Project Overview\n\n--Description--\nIt would be nice to have permission options to set who can see the members assigned to a project (in project overview).\r\nIdeally this isn't a on/off toggle but being able to select the roles.\r\nExamples:\r\n* project admins and project managers can see all members\r\n* simple users only see the project admins\r\n* non-members (on public projects) can't see any members."}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine).\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine).\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine).\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine).\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n"}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nAdd group results by due date\n\n--Description--\nCurrently it is not possible to group results by _due date_. For planning purposes this would be nice."}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option.\n\n-- Ticket2\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud"}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nautowatch issues\n\n--Description--\ni'd very much like to have a feature similar to Patch #222. that is, a per-user option to:\r\n\r\n* \"auto-watch issues i've modified\" (i.e., autowatch if i create or modify an issue)\r\n* \"auto-watch issues assigned to me\"\r\n\r\nUnlike Balazs (author of Patch #222), i'd want users to be able to choose their own \"autowatch\" policy.\r\n\r\nOther than Patch #222, I couldn't find any other mention of this feature. Are there plans to implement it?"}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals.\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nset or change author of a issue (via rest api)\n\n--Description--\nWe would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)\r\n\r\nProjects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. \r\nThe users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is \"this line\":\r\n/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140\r\n\r\nThe only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.\r\n"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials \n\n-- Ticket2\n--Subject--\nForce passwords to contain specified character classes\n\n--Description--\nI would like to enforce strong password for users in redmine. As if now redmine will accept any four letter password. Is there a way that applicaton checks how strong a password is when a new user register in it.\r\n\r\nCan we implement any password generator with redmine?"}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials \n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials \n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault value for user_custom_field\n\n--Description--\nHi Everyone\r\n\r\nIn attachment I sent the screen when I created my issue ,I created a custom user field called \"REFERENTE EDFS\" I want for each project , set default values of this list(i.e.  project 1  referente edfs (tommy and alex) , project 2 referente edfs ( Mike and john) ecc...\r\n\r\nThanks in advance \r\n\r\nTommy\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndefault value for user_custom_field\n\n--Description--\nHi Everyone\r\n\r\nIn attachment I sent the screen when I created my issue ,I created a custom user field called \"REFERENTE EDFS\" I want for each project , set default values of this list(i.e.  project 1  referente edfs (tommy and alex) , project 2 referente edfs ( Mike and john) ecc...\r\n\r\nThanks in advance \r\n\r\nTommy\r\n\r\n\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIn Ticket-Queries the \"new\" field \"total spent time\" is forgotten as totals-checkmark - see screenshot\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nIssue view does not show spent time if hours are zero\n\n--Description--\nIf I add a time entry of 0 hours and nothing else has been logged on an issue spent time is shown as \"Spent time: -\". \r\nIt would be more natural if it showed 0 hours and had the normal link for showing logged time on the issue."}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIn Ticket-Queries the \"new\" field \"total spent time\" is forgotten as totals-checkmark - see screenshot\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details."}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd links to spent time report table elements\n\n--Description--\nWhen working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMerge Issues\n\n--Description--\nFeature Request: Merge related issues\r\n\r\nThe idea would be to create a \"Merge Issue\" link next to the \"Duplicate\" and \"Delete\" links when viewing or updating Issues. Clicking it presents a box allowing you to enter an Issue number to merge with. Merging two issues combines all the comments and status updates chronologically (and of course presents an option to re-edit the title of the newly combined issue).\r\n\r\nThis would be super helpful! Sometimes issues are entered as separate tickets, when in fact they are the same or merely different aspects/perspectives on the same task. We don't want to just delete or close one of them, because they often contain useful comments relating to that particular aspect of the same task. Sorting through all the duplicate issues is a huge pain, but merging the issues would solve this problem."}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAbility to assign issues to multiple users\n\n--Description--\n+*Dear All:*+\r\n\r\n+Kindly I need to make *\"Assignee\"* Combo box allow *\"Multi-Selection\"* because of:+\r\n \r\n\r\n* Sometimes , Groups don't help me while assigning a specific issue to more than one member.\r\nThis happened in case where the assignees are not gathered in a group. (This happened frequently)\r\n(*Note that:* There is an Infinite combination of users!!)\r\nSo , I need the *\"Assignee\"* field to be a *List Box* which allow +*\"Multi-Selection\"*+."}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this."}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nPermission to log time for another user\n\n--Description--\nThis patch allows the current user to record the time spent by another one, as you can see in attachment:timelog1.png and attachment:timelog2.png I wrote this patch because my co-workers are too -lazy- busy to update their issues ;)\r\n\r\nI never programmed in Ruby before this patch, so feel free to rewrite it at your convenience. Maybe an exception should be thrown in the controllers if the current user tries to edit a time entry he is not allowed to, even if it is already checked in the views.\r\n"}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here."}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd bulk edit after save hook\n\n--Description--\nCorrect me if I'm mistaken, but now there only exists a @issue_bulk_edit_before_save@ controller hook. This makes it impossible to provide consistent behavior for plugins implementing edit_after_save controller hooks.\r\n\r\nSay, a user edits an issue via issue view and triggers a @issue_edit_after_save_hook@ which handles the issue in a proper way. The same is expected to happen when an issue is edited via context menu (right click) in any multiple issues view, but there is no way to provide that as @bulk_edit@ method is called for context menus and there is no @issue_bulk_edit_after_save@ hook which makes @issue_edit_after_save@ hook useless.\r\n\r\nI think it would be useful to have something like this in issues#bulk_edit controller method:\r\n\r\n<pre>\r\ndef bulk_edit\r\n  ...\r\n  @issues.each do |orig_issue|\r\n    ...\r\n\r\n    begin        \r\n      Issue.transaction do          \r\n        call_hook(:controller_issues_bulk_edit_before_save, { :params => params, :issue => issue })          \r\n        issue.save!          \r\n        call_hook(:controller_issues_bulk_edit_after_save,  { :params => params, :issue => issue })          \r\n      end        \r\n    saved_issues << issue\r\n    rescue ActiveRecord::RecordNotSaved => e        \r\n      unsaved_issues << orig_issue\r\n    end\r\n\r\n    ...\r\n  end\r\n  ...\r\nend\r\n</pre>\r\n\r\nHope someone can make a proper patch out of this or provide a better way of managing after_save hooks for bulk edit. Thanks.\n\n-- Ticket2\n--Subject--\nNew view-hook in contextual \"(action) menu\" in issues show view\n\n--Description--\nAs proposed in this forum-thread (message#7093) it would be nice if we could (at least) add items to these contextual \"menus\" using plugin hooks.\r\n\r\nI'd suggest to interpret the proposal done in the forum as: \"please add a hook like @:view_issues_show_contextual@\".\r\n\r\nRegards,\r\n\r\nMischa."}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd bulk edit after save hook\n\n--Description--\nCorrect me if I'm mistaken, but now there only exists a @issue_bulk_edit_before_save@ controller hook. This makes it impossible to provide consistent behavior for plugins implementing edit_after_save controller hooks.\r\n\r\nSay, a user edits an issue via issue view and triggers a @issue_edit_after_save_hook@ which handles the issue in a proper way. The same is expected to happen when an issue is edited via context menu (right click) in any multiple issues view, but there is no way to provide that as @bulk_edit@ method is called for context menus and there is no @issue_bulk_edit_after_save@ hook which makes @issue_edit_after_save@ hook useless.\r\n\r\nI think it would be useful to have something like this in issues#bulk_edit controller method:\r\n\r\n<pre>\r\ndef bulk_edit\r\n  ...\r\n  @issues.each do |orig_issue|\r\n    ...\r\n\r\n    begin        \r\n      Issue.transaction do          \r\n        call_hook(:controller_issues_bulk_edit_before_save, { :params => params, :issue => issue })          \r\n        issue.save!          \r\n        call_hook(:controller_issues_bulk_edit_after_save,  { :params => params, :issue => issue })          \r\n      end        \r\n    saved_issues << issue\r\n    rescue ActiveRecord::RecordNotSaved => e        \r\n      unsaved_issues << orig_issue\r\n    end\r\n\r\n    ...\r\n  end\r\n  ...\r\nend\r\n</pre>\r\n\r\nHope someone can make a proper patch out of this or provide a better way of managing after_save hooks for bulk edit. Thanks.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias\n\n-- Ticket2\n--Subject--\n[Rest API][custom field]Why \"GET /custom_fields.xml\" required the System manager's privilege?\n\n--Description--\nDear developers\r\n\r\nWhy Getting \"Custom_field's Possible values\" required the System manager's privilege?\r\n\r\nI am creating a Redmine client by C#.\r\nMy Redmine project have Custom Field as List Format.\r\n\r\nMy C#'s Client can get Custom Field value,but can not update Custom Field.\r\nBecase Getting \"Possible values\" required the System manager's privilege.\r\n\r\nI can not give the system administrator privileges to all users.\r\nI want all user to be able to get Possible values.\r\n\r\nBest Regards."}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n\n\n-- Ticket2\n--Subject--\nTotals for Total estimated time and Total spent time\n\n--Description--\nThere are missing totals for _Total estimated time_ and _Total spent time_.\r\n\r\nThe totals are also very useful as they allow to build nice project overview, e.g. show only root items and see/summarize all the effort without getting into details."}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\n[Rest API][custom field]Why \"GET /custom_fields.xml\" required the System manager's privilege?\n\n--Description--\nDear developers\r\n\r\nWhy Getting \"Custom_field's Possible values\" required the System manager's privilege?\r\n\r\nI am creating a Redmine client by C#.\r\nMy Redmine project have Custom Field as List Format.\r\n\r\nMy C#'s Client can get Custom Field value,but can not update Custom Field.\r\nBecase Getting \"Possible values\" required the System manager's privilege.\r\n\r\nI can not give the system administrator privileges to all users.\r\nI want all user to be able to get Possible values.\r\n\r\nBest Regards."}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nSub groups or Multi-level groups\n\n--Description--\nDid a preliminary search, but did not find a feature request for this.\r\n\r\nI see a need for having sub-groups as part of groups ability\r\n\r\nGroup A\r\n   Group B\r\n       Member\r\n       Member\r\n\r\nGroup C\r\n    Member\r\n    Member\r\n\r\nGroup D\r\n    Member\r\n    Group E\r\n       Member\r\n\r\nAs an example, we may have a marketing group, who has a web unit as part of it.  In some projects it would be good to assign the whole marketing group to see a project, and in some it would be just beneficial to do the web unit or sub group.\r\n\r\nThis would eliminate the need for duplicate entry of names into different groups.\r\n\r\n"}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nGroup hierarchy\n\n--Description--\nI have three groups of beneficiaries: Mobile developer, iOS developer, Android developer.\r\nI wish the filter to 'iOS developer' it will include 'Mobile developer' but not include  'Android developer'\n\n-- Ticket2\n--Subject--\nInclude in Subproject's filter a option 'is not'\n\n--Description--\nA option 'is not' in Subproject's filter woud be a very helpful. The selection's shape current requires many actions that will replaced by this option. "}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n\n\n-- Ticket2\n--Subject--\nKeyboard shortcuts\n\n--Description--\nIt would be so convinient and productive if redMine supports keyboard shortcuts like Trac or some nifty web apps.\r\nFor example,  press Ctrl+R to preview, Ctrl+S to submit, Ctrl+/ to enter search text, ...\r\n\r\nTo support above, we would only need to add \"accesskey\" attribute to elements (like input, a).\r\n\r\nThanks,"}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n\n\n-- Ticket2\n--Subject--\nDe-List or cleraly mark commercial plugins\n\n--Description--\nI keep getting complaints by mail about easyredmine non-free plugins in our directory and there are similar complaints on the forums (message#37931).\r\n\r\nThe issues at hand are with plugnis that\r\n* are not free (as in beer)\r\n* are not free (as in freedom)\r\n* just don't work with vanilla redmine and only work in some kind of fork\r\n\r\nThere are entries in our plugin index that are nothing more than free advertising space for companies, including but not limited to\r\n\r\n* http://www.redmine.org/plugins/redmine_luxury_buttons (*paid*)\r\n* http://www.redmine.org/plugins/redmine_kpi (*paid*)\r\n* virtually _all_ plugins by Petr Pospisil / EasyRedmine (example: http://www.redmine.org/plugins/virtuemart-integration) (*paid*, *incompatible*)\r\n\r\nI'd like a statement from the team regarding these proposals:\r\n* Remove all plugins that only work in some kind of fork\r\n* Mark all commercial plugins with a very, very big \"$\" sign - or remove them from the index\r\n\r\n-- jan\r\n\r\nPS: In contrast to those commercial-only plugins are those like this one by Kirill Bezrukov:\r\nhttp://www.redmine.org/plugins/redmine_agile\r\n\r\nIt's a paid plugin, but a \"light\" version available, IMHO that's the way to and those should explicitly _not_ be removed.\r\n"}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n\n\n-- Ticket2\n--Subject--\nPlugin installer on the Administration page\n\n--Description--\nI am having a hell of a time installing a plugin - specifically \"Checklists\" which is the top rated plugin. I am doing this to evaluate the plugin installation process, but I am having no luck. \r\n\r\nFirst, some background.\r\n\r\nI am not a ruby, or even a web developer. I write embedded code, and I would like to use Redmine to help manage my projects. I have some linux skills, but am a long way from being a guru.\r\n\r\nI installed Redmine on an Ubuntu 16.04, Apache, and MySQL system using \"sudo apt-get\". For me, this was the easiest, most consistent way to resolve all dependencies and get a basic working system up and running. Trying to resolve all the discrepancies between the various installation instructions in the Guide drove me to madness. I finally found some installation instructions on the Ubuntu help pages that delivered a working system.\r\n\r\nNow that it is installed, I cannot seem to get plugins working. I believe this is due to permissions. Since the system was installed with \"sudo apt-get install ...\" the files have root permissions. If I try to run the various commands indicated in the various plugin guides I usually get errors regarding permissions. (I am repeating my journey to madness trying to resolve all the unexplained differences) . If I try to run the commands with sudo, I get errors or warnings about running as root. In most cases I end up with a broken system. I have not figured out the magical incantation to install this plugin yet.\r\n\r\nThe feature request I have is to have an Administration page where you could upload the zip file, and it would install the plug-in to the appropriate directory, backup the appropriate files (as needed), run the appropriate commands with the appropriate credentials, and deliver a working system at the end.\r\n\r\nI think this would help make this system a lot more usable to non-ruby developers."}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n \n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n \n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n \n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nScript for import from JIRA\n\n--Description--\nI've attached \"migrate_from_jira.rake\", which was modeled on both the trac migration script, and jira2trac.rb which can be found at trac's home page.\r\n\r\nThough it isn't as polished as it could be, it gives better fidelity than jira2trac.rb + migrate_from_trac.rake, and hopefully it servers as a good starting point for any other tweaks needed to do a decent import.\r\n\r\nIt currently takes as input (as per jira2trac.rb), an xml dump of issue info from jira. Based on that, it imports projects, sub-projects, users, issue categories, issues, and issue comments."}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link.\n\n-- Ticket2\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n"}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nCreating global (default) categories.\n\n--Description--\nIt would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.\r\n\r\nRedmine is the Best!!!"}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd #ID into Import Feild for update issue properties\n\n--Description--\nWhen I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.\r\nSometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.\r\n\r\nSo I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.\r\nThe expect result view may like attached import.png.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd #ID into Import Feild for update issue properties\n\n--Description--\nWhen I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.\r\nSometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.\r\n\r\nSo I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.\r\nThe expect result view may like attached import.png.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd #ID into Import Feild for update issue properties\n\n--Description--\nWhen I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.\r\nSometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.\r\n\r\nSo I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.\r\nThe expect result view may like attached import.png.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project Icons\n\n--Description--\nHi.\r\n\r\nPlease create an new project page view. I wish to add an images for projects. \r\n\r\nThe project can be presented like in the attached file.\r\n\r\nBest regards\r\nBart\u0142omiej Ekiert\r\n\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project Icons\n\n--Description--\nHi.\r\n\r\nPlease create an new project page view. I wish to add an images for projects. \r\n\r\nThe project can be presented like in the attached file.\r\n\r\nBest regards\r\nBart\u0142omiej Ekiert\r\n\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project Icons\n\n--Description--\nHi.\r\n\r\nPlease create an new project page view. I wish to add an images for projects. \r\n\r\nThe project can be presented like in the attached file.\r\n\r\nBest regards\r\nBart\u0142omiej Ekiert\r\n\n\n-- Ticket2\n--Subject--\nVisually mark closed subprojects on parent project page\n\n--Description--\nThere is a list of subprojects on a parent project page. Thats absolutelly ok, but It would be nice to have some visual way to mark which are closed (different color, pictogram, etc.)."}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd project Icons\n\n--Description--\nHi.\r\n\r\nPlease create an new project page view. I wish to add an images for projects. \r\n\r\nThe project can be presented like in the attached file.\r\n\r\nBest regards\r\nBart\u0142omiej Ekiert\r\n\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance.\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nScript for import from JIRA\n\n--Description--\nI've attached \"migrate_from_jira.rake\", which was modeled on both the trac migration script, and jira2trac.rb which can be found at trac's home page.\r\n\r\nThough it isn't as polished as it could be, it gives better fidelity than jira2trac.rb + migrate_from_trac.rake, and hopefully it servers as a good starting point for any other tweaks needed to do a decent import.\r\n\r\nIt currently takes as input (as per jira2trac.rb), an xml dump of issue info from jira. Based on that, it imports projects, sub-projects, users, issue categories, issues, and issue comments."}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nAdd \"Previous Assignee\" entry when changing issue assignee\n\n--Description--\nIntention : assign ticket back to previous assignee easily, without scrolling down the list until I found it.\r\n\r\nattached proposed implementation as svn patch. It needs to run \"db:migrate\"\r\n\r\nMissing in the implementation:\r\n- previous assignee in contextual menu\r\n- maybe reusing changes done in r12419\r\n\r\nWorks good and very popular in my firm."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween.\n\n-- Ticket2\n--Subject--\nAdd #ID into Import Feild for update issue properties\n\n--Description--\nWhen I use Import menu, I found the Import menu only can create issues, couldn't update exist #ID issues.\r\nSometime when I out of network, I have to update data via csv files. When I back to network, it will a mass of issues need me update, That is very inconvenient.\r\n\r\nSo I thought, if add #ID into Import Feild mapping, the Import will support update exist #ID issues.\r\nThe expect result view may like attached import.png."}]}}
