{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nCustom field with the ability to enter only unique data.\n\n--Description--\nThe task is as follows: I created a custom field \"MAC address PC\" and I want only a unique MAC address value to be entered in this field. To make it impossible to assign the same addresses to different devices. According to the same principle, create another field name PC: \"sv-srv-vk-20-1\" so that it is also unique and cannot be repeated. I've only been studying Redmine for a week. Maybe there is some kind of plugin or implementation instructions?"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAdd description field for issue queries\n\n--Description--\nIt would be nice to have an issue query description field since sometimes it is difficult to name the description so that other users are able to fully understand it.\r\n\r\nThe text filed in the new query form could be provided with wikitoolbar and the possibility to reference or include a wiki page or other macros.   \r\n\r\nThe description could be rendered right below the query name and should also be available on gantt and calendar page.\r\n\r\n---\r\n\r\n!clipboard-202309081141-e5hz5.png!\r\n"}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAdd \"Statuses\" filter when creating new \"Issue\" custom fields\n\n--Description--\nCustom fields on issues can be associated with specific Trackers, so a custom field that is associated with \"Bug\" will be hidden on issues of other types.  However, if that custom field is \"required\" then it is required for every status of that issue throughout its workflow.  \r\n\r\nIn many workflows, specific pieces of information are added to an issue throughout its workflow and not all at the beginning, so it would be most useful if custom fields could reflect this.  For example, in the workflow of a \"Bug\" when the tester sets the status to \"Verified\" that tester should note the version number that they tested and the environment that they tested it in.  If a user sets the bug to \"Rejected\" they should provide an explanation for why it is rejected.\r\n\r\nCurrently, we keep all of this information in \"Notes\" and it is the responsibility of each user to remember what needs to be added based on the status they're switching from/to.  However, if we could keep this in custom fields that are selectively shown at specific points in the workflow this would both better enforce compliance and would store that information in a more structured way that we could leverage better in custom queries and reports."}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?"}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n"}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable."}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nRuby 3.0 support\n\n--Description--\nRuby 3.0.0 has been released on 25 Dec 2020.\r\nhttps://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/\r\n"}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.6 support\n\n--Description--\nThe normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.\r\n\r\nRedmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara."}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nrbpdf Update\n\n--Description--\nrbpdf has been released today to 1.21.2\r\nI can be updated in Redmine's Gemfile.\r\n\r\nthanks\r\n"}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop FastCGI support\n\n--Description--\nAs you can see in the \"changelog\":https://github.com/rack/rack/blob/3897649e8740e560a5fa142f972121a119b26b5c/CHANGELOG.md?plain=1#L141 of Rack, the FastCGI handler has been removed in Rack 3.0.0. This means that Redmine's code to support FastCGI, which relies on @Rack::Handler::FastCGI@, no longer works.\r\n\r\n<pre>\r\n- Removed antiquated handlers: FCGI, LSWS, SCGI, Thin. ([#1658](https://github.com/rack/rack/pull/1658), [@ioquatix])\r\n</pre>\r\n\r\nIt is time to remove the code that no longer works and end support for FastCGI, as FastCGI is no longer a major option for deploying Ruby on Rails applications.\n\n-- Ticket2\n--Subject--\nEnable Asset Pipeline Integration using Propshaft\n\n--Description--\nThis patch enables the Asset Pipeline in Redmine, assuming you have upgraded to Rails 7(#36320).\r\n\r\nUntil Rails 6.1, Sprockets was a prerequisite for using the Asset Pipeline. However, starting from Rails 7, \"Propshaft\":https://github.com/rails/propshaft/ has been introduced as an alternative option.\r\nWhile Propshaft offers fewer features compared to Sprockets, it boasts a smaller codebase and greater clarity in its operations (eliminating the need for a JavaScript runtime). Additionally, manifest files are no longer necessary during development.\r\n\r\nKey benefits of using Propshaft include:\r\n\r\n* The ability to append file digests to file names instead of Rails3 stytle cache-busting approach involving query strings at the end of assets (expected to enhance cache hit rates).\r\n* Support for tasks like copying plugin assets to the public directory each time Redmine starts.\r\n* Compatibility with Turbo, which is almost mandatory in Rails 7 and later. (Note that Rails 7 and later deprecate rails-ujs, the current Redmine dependency.)\r\n\r\nTo address potential challenges associated with introducing Propshaft, we have extended its functionality in the following ways:\r\n\r\n* We've made it possible for Propshaft to handle Redmine plugin and theme assets without requiring modification(If we use propshaft in default, we will need to modify the links to other assets in stylesheets.).\r\n* We've ensured that introducing Asset Pipeline does not necessitate rewriting existing stylesheets, thus avoiding major incompatibilities with Redmine themes.\r\n* In a production environment, rather than manually running the rails asset:precompile command before starting Rails, we now automatically check for asset updates and run precompilation as needed. (You can disable this automatic execution by setting config.assets.redmine_detect_update to false in @config/environments/production.rb@)."}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUser api filtering by status=* broke on upgrade from 5.0 to 5.1\n\n--Description--\nI am testing the migration path from 5.0.5 to 5.1.1, we use an api call to get all users (active or not), since the user api shows only the active accounts we where using \"status=\" or \"status=*\" as a modifier to get all the fields\r\n\r\nI've got the \"status=\" from this issue https://www.redmine.org/issues/32090\r\n\r\nOn 5.1.1, for any call with \"status=\" we get with the http code 422:\r\n@ {\r\n    \"errors\": [\r\n        \"Status cannot be blank\"\r\n    ]\r\n}@\r\n\r\n\r\nWhen I am using the filter \"status=*\" the exit code is 500, and on the logs i see:\r\n@\r\nI, [2024-01-23T13:20:22.820689 #2787502]  INFO -- : [0a29895f-ece3-4229-9e91-eeee48cdc573] Completed 500 Internal Server Error in 21ms (ActiveRecord: 5.1ms | Allocations: 3061)\r\nF, [2024-01-23T13:20:22.822546 #2787502] FATAL -- : [0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] ActiveRecord::StatementInvalid (PG::InvalidTextRepresentation: ERROR:  invalid input syntax for type integer: \"*\"\r\nLINE 1: ...1, $2) AND (users.status <> 0) AND ((users.status IN ('*')))\r\n                                                                 ^\r\n):\r\n[0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] app/controllers/users_controller.rb:64:in `index'\r\n@\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUser api filtering by status=* broke on upgrade from 5.0 to 5.1\n\n--Description--\nI am testing the migration path from 5.0.5 to 5.1.1, we use an api call to get all users (active or not), since the user api shows only the active accounts we where using \"status=\" or \"status=*\" as a modifier to get all the fields\r\n\r\nI've got the \"status=\" from this issue https://www.redmine.org/issues/32090\r\n\r\nOn 5.1.1, for any call with \"status=\" we get with the http code 422:\r\n@ {\r\n    \"errors\": [\r\n        \"Status cannot be blank\"\r\n    ]\r\n}@\r\n\r\n\r\nWhen I am using the filter \"status=*\" the exit code is 500, and on the logs i see:\r\n@\r\nI, [2024-01-23T13:20:22.820689 #2787502]  INFO -- : [0a29895f-ece3-4229-9e91-eeee48cdc573] Completed 500 Internal Server Error in 21ms (ActiveRecord: 5.1ms | Allocations: 3061)\r\nF, [2024-01-23T13:20:22.822546 #2787502] FATAL -- : [0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] ActiveRecord::StatementInvalid (PG::InvalidTextRepresentation: ERROR:  invalid input syntax for type integer: \"*\"\r\nLINE 1: ...1, $2) AND (users.status <> 0) AND ((users.status IN ('*')))\r\n                                                                 ^\r\n):\r\n[0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] app/controllers/users_controller.rb:64:in `index'\r\n@\r\n\n\n-- Ticket2\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case."}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUser api filtering by status=* broke on upgrade from 5.0 to 5.1\n\n--Description--\nI am testing the migration path from 5.0.5 to 5.1.1, we use an api call to get all users (active or not), since the user api shows only the active accounts we where using \"status=\" or \"status=*\" as a modifier to get all the fields\r\n\r\nI've got the \"status=\" from this issue https://www.redmine.org/issues/32090\r\n\r\nOn 5.1.1, for any call with \"status=\" we get with the http code 422:\r\n@ {\r\n    \"errors\": [\r\n        \"Status cannot be blank\"\r\n    ]\r\n}@\r\n\r\n\r\nWhen I am using the filter \"status=*\" the exit code is 500, and on the logs i see:\r\n@\r\nI, [2024-01-23T13:20:22.820689 #2787502]  INFO -- : [0a29895f-ece3-4229-9e91-eeee48cdc573] Completed 500 Internal Server Error in 21ms (ActiveRecord: 5.1ms | Allocations: 3061)\r\nF, [2024-01-23T13:20:22.822546 #2787502] FATAL -- : [0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] ActiveRecord::StatementInvalid (PG::InvalidTextRepresentation: ERROR:  invalid input syntax for type integer: \"*\"\r\nLINE 1: ...1, $2) AND (users.status <> 0) AND ((users.status IN ('*')))\r\n                                                                 ^\r\n):\r\n[0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] app/controllers/users_controller.rb:64:in `index'\r\n@\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Admin/Users list to use the query system\n\n--Description--\nThis patch series that was extracted from \"Planio\":https://plan.io/redmine-hosting introduces a UserQuery\r\nand upgrades the Admin/Users list with corresponding filter, sort and (CSV) export capabilities.\r\nAlso introduced are a context menu and an option to delete multiple users at once. The third patch just\r\nadds flash messages to the (single) user deletion operation, for symmetry with the messages rendered by the bulk delete.\r\n\r\nThis relates to issues #4295, #18193, #21055 (probably there are more I didn't find)."}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUser api filtering by status=* broke on upgrade from 5.0 to 5.1\n\n--Description--\nI am testing the migration path from 5.0.5 to 5.1.1, we use an api call to get all users (active or not), since the user api shows only the active accounts we where using \"status=\" or \"status=*\" as a modifier to get all the fields\r\n\r\nI've got the \"status=\" from this issue https://www.redmine.org/issues/32090\r\n\r\nOn 5.1.1, for any call with \"status=\" we get with the http code 422:\r\n@ {\r\n    \"errors\": [\r\n        \"Status cannot be blank\"\r\n    ]\r\n}@\r\n\r\n\r\nWhen I am using the filter \"status=*\" the exit code is 500, and on the logs i see:\r\n@\r\nI, [2024-01-23T13:20:22.820689 #2787502]  INFO -- : [0a29895f-ece3-4229-9e91-eeee48cdc573] Completed 500 Internal Server Error in 21ms (ActiveRecord: 5.1ms | Allocations: 3061)\r\nF, [2024-01-23T13:20:22.822546 #2787502] FATAL -- : [0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] ActiveRecord::StatementInvalid (PG::InvalidTextRepresentation: ERROR:  invalid input syntax for type integer: \"*\"\r\nLINE 1: ...1, $2) AND (users.status <> 0) AND ((users.status IN ('*')))\r\n                                                                 ^\r\n):\r\n[0a29895f-ece3-4229-9e91-eeee48cdc573]   \r\n[0a29895f-ece3-4229-9e91-eeee48cdc573] app/controllers/users_controller.rb:64:in `index'\r\n@\r\n\n\n-- Ticket2\n--Subject--\nAdd user status to users list API\n\n--Description--\nAllow for returning all users, and return the status of the user in the response."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n "}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nEmail notification when watcher is added and removed\n\n--Description--\nAllow observers to be warned when they are inserted or removed from a task."}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nEnabling creating issue within the project regarding the subproject\n\n--Description--\nHey,\r\n\r\nIm managing many projects, which do not have trackers as they are something general. \r\nUnder each project I have a lot of subprojects, in which I do have trackers for issues creation. \r\nI would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject\r\nIs it possible to create such option? I could not find any info regarding it. \r\n\r\nThanks "}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAdd permissions to read all projects. \n\n--Description--\nNow, only administrators can see list of all projects and sub-projects.\r\n\r\nBut, it is needed to allow some people (or even group) who should see all this projects. \r\nWhy? to prevent chaos with adding new ones, for better understanding what is going on here.\r\n\r\nCurrently i have to add Admin privileges for these users... which is not correct, cause they can edit system settings. "}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nNew email notification option \"For any event on my bookmarked projects\"\n\n--Description--\nFor now, if you want to be informed about all events of a huge projects portfolio, I have to update the list behind \"For any events of the selected projects only...\" quite often. \r\nIt would be really great if we can receive all notifications of the bookmarked projects adding a new option in the notification option list : \"For any events of my bookmarked projects only...\"\r\n"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nPrevent close project\n\n--Description--\nPlease add feature to prevent closing project with opened tasks\r\n"}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nSettings for global and user default custom ProjectQuery\n\n--Description--\nA feature like this would be in line with #7360. It wouldn't need the project and user level defaults though. It would IMHO be a more complete (than r19505) solution to the need expressed in #32818.\r\n\r\nWith this feature, the @project_list_display_type@ setting added in r19505 can be removed."}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nProject Activity Log\n\n--Description--\nWould like a log of project-level activities, such as when someone closes or reopens a project. \r\n\r\nWithout a log, there is no way to see who is doing project level changes, and no way to investigate problems."}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nNew email notification option - Only for things I watch\n\n--Description--\nCurrently there is no way to stop receiving notifications on an issue I'm no longer have interest in. Because I'm always involved, the owner or assigned to.\r\nWith this option I would receive notifications only for issues I'm activelly watching.\r\n"}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nAuto watch issues on issue creation\n\n--Description--\nSimilar to #4347 we propose adding an option to watch issues the user created. This would allow users to more finely control which issues they want to be notified about rather than having to select the \"only owner\" or \"only my events\" and receiving notifications for all the issues the user created. This will also allow in the future to replace the mail notification options with only having auto watching options."}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\".\n\n-- Ticket2\n--Subject--\nEnable journaling on projects\n\n--Description--\nIt's so usefull to have history of project field and custom fields changes.\r\nAlso it's desirable about project settings changes."}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown)."}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.6 support\n\n--Description--\nThe normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.\r\n\r\nRedmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nWebP images support in PDF output\n\n--Description--\nWebP image support has been implemented in RBPDF 1.21.1 gem.\r\nThis is a patch to support WebP images in Redmine's PDF output."}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nUse Commonmarker instead of Redcarpet by default when rendering Markdown attachments\n\n--Description--\nmarkdown_formatter returns 'common_mark' only when text_formatting is common_mark, and 'markdown' otherwise.\r\nFor example, when you attach an markdown.md file and preview it in an environment where text_formatting is Textile, the contents of the file are converted to HTML by RedCarpet('markdown').\r\n\r\nSince RedCarpet('markdown') was deprecated in #36807, why not change markdown_formatter to return 'markdown' only when text_formatting is markdown and 'cmmon_mark' otherwise?"}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nrbpdf Update\n\n--Description--\nrbpdf has been released today to 1.21.2\r\nI can be updated in Redmine's Gemfile.\r\n\r\nthanks\r\n"}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAdd support for GitHub\n\n--Description--\nGitHub is the dominant player in version control, and it would be very appealing to new adopters to use Redmine."}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t"}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan"}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown.\n\n-- Ticket2\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBack date entries resttriction  \n\n--Description--\nI want configure start date/due date \r\n\r\nBut start date can be selected only 2 days back from current calander date \r\n\r\nIs there any feature \n\n-- Ticket2\n--Subject--\nPermits defining a default \"due date\"\n\n--Description--\nEach project has a \"due date\" (when working with clients). It would be awesome to permits to add a default \"due date\" for a project.\r\nFor each new issue, the \"due date\" will be filled by default."}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBack date entries resttriction  \n\n--Description--\nI want configure start date/due date \r\n\r\nBut start date can be selected only 2 days back from current calander date \r\n\r\nIs there any feature \n\n-- Ticket2\n--Subject--\nStart date and due date in email notifications\n\n--Description--\nToday, the start date and the due date doesn't appears in the email sent when we create a new issue.\r\nIt would be really useful to make them appears for being aware of the priority of the issue."}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBack date entries resttriction  \n\n--Description--\nI want configure start date/due date \r\n\r\nBut start date can be selected only 2 days back from current calander date \r\n\r\nIs there any feature \n\n-- Ticket2\n--Subject--\nOption to keep last spent-time date on \"create and continue\"\n\n--Description--\nWhen you have to add time spent in previous days, \r\nit could be useful to \"continue\" adding entries on the date you previously inserted.\r\n\r\nWithout that our team often insert wrong dates because date it's being automatically resetted to \"now\""}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBack date entries resttriction  \n\n--Description--\nI want configure start date/due date \r\n\r\nBut start date can be selected only 2 days back from current calander date \r\n\r\nIs there any feature \n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBack date entries resttriction  \n\n--Description--\nI want configure start date/due date \r\n\r\nBut start date can be selected only 2 days back from current calander date \r\n\r\nIs there any feature \n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n"}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>"}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.6 support\n\n--Description--\nThe normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.\r\n\r\nRedmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nLocalize test email text\n\n--Description--\nThere are 2 email views\r\n\r\n+ test_email.html.erb\r\n+ test_email.text.erb\r\n\r\nhaving no localized text:\r\n\r\n\r\n<pre><code class=\"ruby\">\r\n# test_email.html.erb\r\n<p>This is a test email sent by Redmine.<br />\r\nRedmine URL: <%= link_to @url, @url %></p>\r\n\r\n# test_email.text.erb\r\nThis is a test email sent by Redmine.\r\nRedmine URL: <%= @url %>\r\n</code></pre>\r\n\r\nSupporting a translated text also for test email is only little effort but would improve consistency and user experience.\r\n"}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStop appending the utf8 checkmark parameter to form URLs\n\n--Description--\nRuby on Rails appends the \"utf8=\u2713\" parameter to form URLs. I propose to remove this parameter by setting @config.action_view.default_enforce_utf8@ to @false@.\r\nhttps://guides.rubyonrails.org/v7.1/configuring.html#config-action-view-default-enforce-utf8\r\n\r\nThe parameter is added to prevent older versions of Internet Explorer from encoding UTF-8 strings with Latin1. But Microsoft ended the support for Internet Explorer in 2021 and Redmine also dropped support for Internet Explorer in Redmine 5.0 (#34978). So, I believe the \"utf8=\u2713\" parameter is no longer necessary.\r\n\r\n\"What is the _snowman param in Ruby on Rails 3 forms for? - Stack Overflow\":https://stackoverflow.com/questions/3222013/what-is-the-snowman-param-in-ruby-on-rails-3-forms-for/3348524#3348524\r\n\r\nRemoving the \"utf8=\u2713\" parameter has the following benefits:\r\n\r\n# URLs will be a bit cleaner\r\n# The code to handle \"utf8=\u2713\" can be removed\r\n# Problems caused by the parameter such as #31831 will never occur\n\n-- Ticket2\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDeveloper guide generating test data\n\n--Description--\nI have created a wiki page which would be nice to be added to locked page:\r\n\r\nhttps://www.redmine.org/projects/redmine/wiki/Developer_Guide\r\n\r\n\r\nThis is the page that I have created:\r\nhttps://www.redmine.org/projects/redmine/wiki/Generating_demo_data\n\n-- Ticket2\n--Subject--\nwiki page in project top page\n\n--Description--\nhello,\r\ni want to add my specific project wiki page as my redmine home page with dropdown option with that wiki name.\r\n\r\nor if not possible in dropdown list then also ok i directly get on my home/my page of redmine with other redmine home page block.\r\n\r\nthanks."}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDeveloper guide generating test data\n\n--Description--\nI have created a wiki page which would be nice to be added to locked page:\r\n\r\nhttps://www.redmine.org/projects/redmine/wiki/Developer_Guide\r\n\r\n\r\nThis is the page that I have created:\r\nhttps://www.redmine.org/projects/redmine/wiki/Generating_demo_data\n\n-- Ticket2\n--Subject--\nSelect Wiki Page as Project Start Page\n\n--Description--\nThe overview page of a project (with its issue stats and users list) is not very attractive to customers.\r\n\r\nThe Redmine website with its custom home page is an excellent proof that the overview page is not a good starting point.\r\n\r\nI think it would be a great option to declare the Wiki start page as the start page of a project."}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDeveloper guide generating test data\n\n--Description--\nI have created a wiki page which would be nice to be added to locked page:\r\n\r\nhttps://www.redmine.org/projects/redmine/wiki/Developer_Guide\r\n\r\n\r\nThis is the page that I have created:\r\nhttps://www.redmine.org/projects/redmine/wiki/Generating_demo_data\n\n-- Ticket2\n--Subject--\nAdding a wiki page to My Page\n\n--Description--\nIt would be awesome to have the ability to add a wiki page to My page, and be able to edit it should we have the right to.\r\nThanks !"}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRequest for delegate access to gem-sahay@perfios.com\n\n--Description--\nNeed access of gem-sahay@perfios.com as i am working on GEM project\n\n-- Ticket2\n--Subject--\nGrant access to variablestc@skillandyou.com\n\n--Description--\nHi !\r\nWould you please grant me access to this mailbox ASAP please ?\r\nI can provide authorisation of Fabienne Prudhomme or Sophie Le Jeune by email.\r\nI need to send email from it : my deadline tomorrow.\r\nRegards.\r\nJulien"}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProposal to Include Direct Links to Attached Files in PDF Exports of Issues\n\n--Description--\n\r\nI propose implementing a patch to include direct links to attached files when exporting issues to PDF format. This enhancement will improve the accessibility and usability of exported PDF documents, allowing users to easily access attached files directly from the PDF.\r\n\r\nI will provide a patch for the proposed enhancement along with relevant tests to ensure its functionality and reliability.\r\nThank you for considering this improvement.\n\n-- Ticket2\n--Subject--\nShow PDF attachments and repo entries instead of downloading them\n\n--Description--\nFollowing up on #22058, I would like to propose, that also PDF files are shown directly instead of forcing downloads.\r\n\r\nThis applies to two use cases:\r\n\r\nh3. 1. Following a download link\r\n\r\nWhen following a download link, image are sent with @content-disposition: inline@, while all other files are sent with @attachment@. Since the some browsers is able to render PDF files directly (Firefox, Chrome, Safari, IE with Adobe Reader installed) and people are probably used to it, I think that extending this exception to PDF files is a reasonable change. If native PDF rendering within the browser is not supported, then a download will be initiated by the browser anyway.\r\n\r\nh3. 2. Displaying a PDF file in repository browser\r\n\r\nWhen accessing \"View\" within the file view in the repository browsers, Redmine currently forces a download of the PDF. Instead an iframe could be rendered which displays the PDF within the Redmine UI. Browser support for this use case is similar to No. 1.\r\n\r\n\r\n-------\r\n\r\nThe patch series is based on current trunk (r15332) plus the changes of #22482. If desired, I could isolate the changes further, to make them work without #22482.\r\n\r\nh3. @0004-Don-t-force-download-of-PDFs-but-show-in-browser-pre.patch@\r\n\r\nThe change updates @AttachmentsController@ and @RepositoryController@ to send PDF files with @content-disposition: inline@. (See first use case.)\r\n\r\nh3. @0005-Show-pdf-preview-for-repository-files-and-attachment.patch@\r\n\r\nThe change adds @attachments/pdf@ and @common/_pdf@ views to render PDF files in an iframe/object construct. (See second use case.)\r\n\r\nSince we cannot easily know the PDF\u2019s dimensions, the frame size follows the following rules:\r\n\r\n* it is as wide as possible (100%)\r\n* in general it is as high as it is wide\r\n* it is never higher than 80 % of the viewport (80vh), since we want to make sure, that there is always a bit of Redmine UI visible to avoid getting \u201ctrapped\u201d within the frame\r\n\r\nUsing a nested object/iframe structure was taken from http://pdfobject.com/static.html"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProposal to Include Direct Links to Attached Files in PDF Exports of Issues\n\n--Description--\n\r\nI propose implementing a patch to include direct links to attached files when exporting issues to PDF format. This enhancement will improve the accessibility and usability of exported PDF documents, allowing users to easily access attached files directly from the PDF.\r\n\r\nI will provide a patch for the proposed enhancement along with relevant tests to ensure its functionality and reliability.\r\nThank you for considering this improvement.\n\n-- Ticket2\n--Subject--\nAdd capability to make an attachment\\s obsolete and to collapse all obsolete attachments and focus only the necessary ones (like bugzilla)\n\n--Description--\nWhen a ticket has a lot of screenshot and\\or patches, it's very comfortable to be able to makes attachments no longer necessary as obsolete. In this manner we can collapse all obsolete attachments and focus only the necessary ones.\r\n\r\nThe proposed feature is already present in bugzilla (see attachment:bugzilla.png)"}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProposal to Include Direct Links to Attached Files in PDF Exports of Issues\n\n--Description--\n\r\nI propose implementing a patch to include direct links to attached files when exporting issues to PDF format. This enhancement will improve the accessibility and usability of exported PDF documents, allowing users to easily access attached files directly from the PDF.\r\n\r\nI will provide a patch for the proposed enhancement along with relevant tests to ensure its functionality and reliability.\r\nThank you for considering this improvement.\n\n-- Ticket2\n--Subject--\nPDF rendering improvements when exporting an issue or a list of issues\n\n--Description--\nTwo PDF generation improvements:\r\n\r\n1. Currently, when rendering an issue PDF, macros are only expanded in the description, but not when rendering custom fields with fulltext formatting enabled. The patch changes the behaviour so that formatted full-width custom fields are rendered in the same way the description is rendered, fully interpreting macros. The behaviour for rendering normal-width custom fields is unchanged, probably it is better to leave it as is due to space constraints.\r\n2. Thumbnail macro output was not rendered properly (in the issue description and elsewhere) because the thumbnail image file could not be retrieved - the second patch extends @get_image_filename@ to check for thumbnail URLs and retrieve the proper file path in that case.\r\n\r\nBoth patches were initially developed for \"Planio\":https://plan.io/redmine-hosting ."}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProposal to Include Direct Links to Attached Files in PDF Exports of Issues\n\n--Description--\n\r\nI propose implementing a patch to include direct links to attached files when exporting issues to PDF format. This enhancement will improve the accessibility and usability of exported PDF documents, allowing users to easily access attached files directly from the PDF.\r\n\r\nI will provide a patch for the proposed enhancement along with relevant tests to ensure its functionality and reliability.\r\nThank you for considering this improvement.\n\n-- Ticket2\n--Subject--\nAdd links from roadmap and a specific version to files associated with a version\n\n--Description--\nI can see links from *Files* to *Versions* but not the other way around.\r\n\r\nI was thinking about automatic submission of packages from a build server as *Files*. They would be much more accessible if one could get to them by clicking from an *Issue* to *Version* to a file or download release files from the *Roadmap*."}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nProposal to Include Direct Links to Attached Files in PDF Exports of Issues\n\n--Description--\n\r\nI propose implementing a patch to include direct links to attached files when exporting issues to PDF format. This enhancement will improve the accessibility and usability of exported PDF documents, allowing users to easily access attached files directly from the PDF.\r\n\r\nI will provide a patch for the proposed enhancement along with relevant tests to ensure its functionality and reliability.\r\nThank you for considering this improvement.\n\n-- Ticket2\n--Subject--\nExport attachments of several issues simultaneous\n\n--Description--\nHi, How to export attachments from multiple simultaneous issues?"}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet day as non-working for purposes of Precedes and Following relationships\n\n--Description--\nIn my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet day as non-working for purposes of Precedes and Following relationships\n\n--Description--\nIn my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.\n\n-- Ticket2\n--Subject--\nAdministrative calendar\n\n--Description--\nNot only Sat. and Sun don't work. For example.\r\n2016-06-09 is the Dragon Boat Festival of China.\r\nThat mean's Chinese don't work from 2016-06-09 to 2016-06-11,\r\nbut they have to work at 2016-06-12 (Sunday).\r\nSo, I hope admin can set which non-workday need to convert workday , \r\nand which workday don't need work.\r\nAnd make it effective In gantt view, or calculate workdays."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet day as non-working for purposes of Precedes and Following relationships\n\n--Description--\nIn my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet day as non-working for purposes of Precedes and Following relationships\n\n--Description--\nIn my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.\n\n-- Ticket2\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible."}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSet day as non-working for purposes of Precedes and Following relationships\n\n--Description--\nIn my opinion Redmine would benefit from the ability to set a specific, non-recurring day as a non-work day. An example of such a day would be a national holiday. This would affect the scheduling of Precedes and Following relationships.\n\n-- Ticket2\n--Subject--\nAutomatically recording activity into issue hours\n\n--Description--\nRedmine has a flexible framework but terrible UX.\r\n\r\nI am wishing for an automatic feature here.\r\n\r\nSince the activity of a user is recorded, why don't they be recorded as working hours related to particular issues, whether automatically or manually.  \r\n\r\nIt would be easier especially when someone is editing and expanding the contents of an issue, the working hours should be contributed to that issue."}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSubproject to inherit the wiki from project\n\n--Description--\nHello,\r\n\r\nnot sure if that was already requested,\r\n\r\nbut I was thinking it would be convenient that if a subproject does not have wiki module checked, it inherits from wiki of parent project so all subproject wiki could be consolidated in the parent wiki.\r\n\r\nSo far only solution I see is to make a table of links to subproject wiki in the parent project wiki manually which is not practical. Or if an link to the subproject wiki would be automatically created in the parent wiki that would work too but sounds more complicated\n\n-- Ticket2\n--Subject--\nAPI - creation/update wiki page - need to specify parent page\n\n--Description--\nHey, everybody!\r\n\r\nIt would be great if the API for wiki pages could have the option to specify a parent page when creating or modifying a wiki page."}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nPermissions on attachments\n\n--Description--\nWe want to grant permissions per role to show and download attachments."}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nAllow to disable feature attachment\n\n--Description--\nAttachment max. size\r\nshould be as\r\nAttachment max. size (zero for disabling feature)\r\n"}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nAdd configurable setting for copying attachments when copying an issue\n\n--Description--\nWhen copying an issue, you can select the following behaviors:\r\n\r\n1. whether to make a relation between source and destination issues\r\n2. whether to copy attachments\r\n\r\nAnd the former has a setting to set the default behavior (#18500). However, the latter does not.\r\n\r\nI think it should also be possible to configure the default behavior whether to copy attachments or not.\r\n\r\n!{width: 623px; border: 1px solid grey;}.setting-copy-attachments-on-copy.png!"}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nRemove attachment based on minimum file size.\n\n--Description--\nnan"}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAttachment file rename edit option disable\n\n--Description--\nHow to disable the attached file edit option\n\n-- Ticket2\n--Subject--\nDisable option to upload files in tickets\n\n--Description--\nI've installed the DMSF plugin and want this as the only module to handle files. So I disabled the files and documents module for every project. \r\n!clipboard-202306081822-tbavg.png!\r\nBut people are still able to upload files using the standard file upload. \r\n!clipboard-202306081822-a048c.png!\r\nThat's a bit confusing for the users and pretty hard to handle for me as an admin. In some projects I want to disable the possibility to upload files for a reason.\r\nFrom my point of view if the modules are disabled users shouldn't be able to upload files. At least administrators should have the option to disable the \"classic\" file upload via administration center and/or per project."}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nEnable to display watches count on issues list\n\n--Description--\nnan"}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nAuto watch issues on issue creation\n\n--Description--\nSimilar to #4347 we propose adding an option to watch issues the user created. This would allow users to more finely control which issues they want to be notified about rather than having to select the \"only owner\" or \"only my events\" and receiving notifications for all the issues the user created. This will also allow in the future to replace the mail notification options with only having auto watching options."}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nThe watch button/link should show if the issue is watched by group\n\n--Description--\nWhen a user watches an issue because of a group membership and the user does not have the `view_issue_watchers` permission, the user cannot see that she is watching the issue.\r\n\r\nCurrently the button link shows:\r\n- \"Watch\" when the user is not watching the issue or watching via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nIt would be possible to show a third state for the button/link:\r\n- \"Watch\" when the user is not watching the issue\r\n- \"Watched by group\" when the user is not watching the issue but is watching the issue via a group\r\n- \"Unwatch\" when the user is watching the issue\r\n\r\nThe button/link would toggle between first and third state when the user is not also watching the issue via a group, and between second and third state when the user is also watching via a group.\n\n-- Ticket2\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. "}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nUpdating journal notes via REST API\n\n--Description--\nCurrently viewing journals via REST API is possible (with include=journals), but there is no way to update them.\r\n\r\nNote that journal notes are edtiable in main ui."}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nREST API - Add full CRUD support for News\n\n--Description--\nTo date, as I see on [[Rest_News]], the current _News_ resource of the REST API is read-only, in prototype status.\r\n\r\nCould you add missing CRUD operations to this resource (create, update and delete) ?"}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAPI for editing/deleting notes in an issue\n\n--Description--\nHi\r\nCould you please create API for editing/deleting?\r\nI found this comment #25793#note-7 from Toshi MARUYAMA but I can't understand how to do that.\r\n\r\nThanks."}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam."}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n"}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nExpose repository version via REST API\n\n--Description--\nFor Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.\r\n\r\nOr is there a more convenient workaround than the one mentioned above?"}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nDownload all attachments in a journal\n\n--Description--\nBulk attachments download for issues has been implemented in Redmine 4.2.0 (#7056). However, sometimes I want to download all attachments of a journal, not an issue.\r\n\r\nFor example, suppose that an issue already has dozens of files. In the most recent update, your colleague has attached 5 more files. In this case, it is not uncommon to want to download only the latest 5 files.\r\n\r\nI believe that bulk downloading of files for each journal is a very useful feature.\r\n\r\n!{width: 766px; border: 1px solid grey;}.bulk-download-journal-attachments.png!"}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nExport spent time report as PDF\n\n--Description--\nI guess this plugin doesnt work for redmine 5.x.\r\nI tried but couldn't start redmine with this plugin.\r\n"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nTry importing journal replies as issue reply where applicable\n\n--Description--\nE-mails that are recognised as journal replies are currently discarded if the journal recognised from the message ID is invalid/not present anymore. This happens when a journal is deleted but may also happen when 2 redmine instances are used to send e-mails to each other."}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nrbpdf Update\n\n--Description--\nrbpdf has been released today to 1.21.2\r\nI can be updated in Redmine's Gemfile.\r\n\r\nthanks\r\n"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api\n\n-- Ticket2\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan"}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNot able to fetch email through o365 email ID\n\n--Description--\nHi,\r\n\r\nI have tried to fetch email through the o365 email id, but not able to do it. Is there any advanced configuration required? My email account is configured with the two-step authentication. We are using a work account.\r\n\r\nThanks,\r\nVishal Patel\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nNot able to fetch email through o365 email ID\n\n--Description--\nHi,\r\n\r\nI have tried to fetch email through the o365 email id, but not able to do it. Is there any advanced configuration required? My email account is configured with the two-step authentication. We are using a work account.\r\n\r\nThanks,\r\nVishal Patel\n\n-- Ticket2\n--Subject--\nGrant access to variablestc@skillandyou.com\n\n--Description--\nHi !\r\nWould you please grant me access to this mailbox ASAP please ?\r\nI can provide authorisation of Fabienne Prudhomme or Sophie Le Jeune by email.\r\nI need to send email from it : my deadline tomorrow.\r\nRegards.\r\nJulien"}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script."}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nProvide some ways to find the issues where an user Is mentioned \n\n--Description--\nAt this time there isn't a way to find all issues where an user is mentioned nor via filter nor via email.\r\nShould be possibile to:\r\n* to search issue where i'm mentioned \r\n* customize the subject of the email related to comment where i'm mentioned.\r\n\r\nThe old plugin used before the landing of this feature in redmine-core, was implement the way 2\r\n"}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nLocalize test email text\n\n--Description--\nThere are 2 email views\r\n\r\n+ test_email.html.erb\r\n+ test_email.text.erb\r\n\r\nhaving no localized text:\r\n\r\n\r\n<pre><code class=\"ruby\">\r\n# test_email.html.erb\r\n<p>This is a test email sent by Redmine.<br />\r\nRedmine URL: <%= link_to @url, @url %></p>\r\n\r\n# test_email.text.erb\r\nThis is a test email sent by Redmine.\r\nRedmine URL: <%= @url %>\r\n</code></pre>\r\n\r\nSupporting a translated text also for test email is only little effort but would improve consistency and user experience.\r\n"}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nChange the default notification option for users to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option for a new user is *\"Only for things I watch or I'm involved in\"* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *created* by the user\r\n* The issue is *assigned* to the user\r\n\r\nI think the default option should now be *\"Only for things I watch or I am assigned to\"* (internal name: only_assigned) which sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *assigned* to the user\r\n\r\nThis is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.\r\n\r\nConsider the following scenario:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue\r\n\r\nIf the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher\r\n\r\nAs illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned."}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nPrint name and email to request that was create through email\n\n--Description--\nWe have introduced an enhancement to our email-based task creation functionality.\r\n\r\nTraditionally, we have utilized the IMAP method for generating new tasks through emails, as detailed on the Redmine documentation page: https://www.redmine.org/projects/redmine/wiki/redminereceivingemails#Fetching-emails-from-an-IMAP-server.\r\n\r\nDue to security considerations, we opted against using the parameter unknown_user=\"create\" which would automatically create a new Redmine user if the email sender wasn't recognized. Instead, we chose the unknown_user=\"accept\" setting. This approach, however, resulted in tasks that seemed to be created by an anonymous user, without indicating the email sender's identity.\r\n\r\nTo address this issue, we've added a novel parameter \"insert_name_and_email_to_description\". When set to 1, this parameter ensures that the sender's name and email address are included in the first line of the task description in the format <<<[name-from-header];[email-sender]>>> as illustrated in the attached screenshot.\r\n\r\n!Screenshot%202024-03-18%20at%2013.24.09.png!\r\n\r\nBelow is an example of how we invoke the script with this new parameter:\r\n\r\n<pre><code class=\"shell\">\r\n/opt/bitnami/ruby/bin/bundle exec /opt/bitnami/ruby/bin/rake redmine:email:receive_imap RAILS_ENV=\"production\" host=\"xxx\" username=\"xxx\" password=\"xxx\" unknown_user=\"accept\" no_permission_check=1 project=\"xxx\" no_account_notice=1 insert_name_and_email_to_description=1 --trace\r\n</code></pre>\r\n\r\nIt's important to note that the \"insert_name_and_email_to_description\" parameter is optional. If it's not set, or if its value is 0, the functionality reverts to its previous behavior.\r\n\r\nI am also attaching a \"patch\" file detailing these modifications against the last commit on the master branch in our git repository.\n\n-- Ticket2\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald"}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom fields \u00bb Tasks \u00bb New custom field \u00bb Format \u00bb List \u00bb Possible values text colour\n\n--Description--\nAny ideas on how to highlight the font colors after submit a issue, I selected a point? use in list format. \r\n\r\n--Please Select--\r\n%{color:red}Testuser%\r\n%{color:orange}Testuser%\r\n%{color:blue}Testuser%\n\n-- Ticket2\n--Subject--\nEnable task list items for CommonMark text formatting\n\n--Description--\nThe task list extensions will be a very nice addition for Common Mark text formatting.\r\n\r\nhttps://github.com/gjtorikian/commonmarker#extensions"}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCustom fields \u00bb Tasks \u00bb New custom field \u00bb Format \u00bb List \u00bb Possible values text colour\n\n--Description--\nAny ideas on how to highlight the font colors after submit a issue, I selected a point? use in list format. \r\n\r\n--Please Select--\r\n%{color:red}Testuser%\r\n%{color:orange}Testuser%\r\n%{color:blue}Testuser%\n\n-- Ticket2\n--Subject--\nAllow style attribute for HTML elements in CommonMark formatter\n\n--Description--\nThe CommonMark formatter introduced by #32424 currently does not allow style attribute for HTML elements.\r\n\r\nIf the attribute is allowed, you can decorate text as follows.\r\n\r\n<pre>\r\n<span style=\"color: red;\">IMPORTANT NOTICE</span>\r\n</pre>"}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nreply hyperlink requires class name\n\n--Description--\nHi,\r\nI am a redmine user who is designing redmine themes. I am currently having difficulties with the design of the forum pages. For example, the hyperlinks such as \u300c *reply* \u300ddo not have any CSS class name for me to design, the same situation also occurs on the news page.\uff08Please refer to the attached file\uff09\r\n\r\nShould a CSS class name be added to this hyperlink? I think it's necessary\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nreply hyperlink requires class name\n\n--Description--\nHi,\r\nI am a redmine user who is designing redmine themes. I am currently having difficulties with the design of the forum pages. For example, the hyperlinks such as \u300c *reply* \u300ddo not have any CSS class name for me to design, the same situation also occurs on the news page.\uff08Please refer to the attached file\uff09\r\n\r\nShould a CSS class name be added to this hyperlink? I think it's necessary\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nreply hyperlink requires class name\n\n--Description--\nHi,\r\nI am a redmine user who is designing redmine themes. I am currently having difficulties with the design of the forum pages. For example, the hyperlinks such as \u300c *reply* \u300ddo not have any CSS class name for me to design, the same situation also occurs on the news page.\uff08Please refer to the attached file\uff09\r\n\r\nShould a CSS class name be added to this hyperlink? I think it's necessary\n\n-- Ticket2\n--Subject--\nAllow style attribute for HTML elements in CommonMark formatter\n\n--Description--\nThe CommonMark formatter introduced by #32424 currently does not allow style attribute for HTML elements.\r\n\r\nIf the attribute is allowed, you can decorate text as follows.\r\n\r\n<pre>\r\n<span style=\"color: red;\">IMPORTANT NOTICE</span>\r\n</pre>"}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nreply hyperlink requires class name\n\n--Description--\nHi,\r\nI am a redmine user who is designing redmine themes. I am currently having difficulties with the design of the forum pages. For example, the hyperlinks such as \u300c *reply* \u300ddo not have any CSS class name for me to design, the same situation also occurs on the news page.\uff08Please refer to the attached file\uff09\r\n\r\nShould a CSS class name be added to this hyperlink? I think it's necessary\n\n-- Ticket2\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n"}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nset or change author of a issue (via rest api)\n\n--Description--\nWe would like to offer redmine integration via html submit form which can run on every web server having a connection to the redmine server and knowing some api key to do that (need additional right to set author?)\r\n\r\nProjects want to integrate bug breportimng and feature request form in their web apps, using rest api to sumbit new issues. \r\nThe users in all apps (redmine and other apps) use same ldap and so far the user data are the same. If using rest api don't know the api key of the user in which name the app wanna submit the issue, but the issue indeed shall show this user name a author. I tried to set author and update author after the issue was created via rest call. But the author always is and stays as the user which the api keys belongs. I think the cause is \"this line\":\r\n/projects/redmine/repository/revisions/3310/entry/trunk/app/controllers/issues_controller.rb#L140\r\n\r\nThe only way to offer this 3rd party web form integration without loosing author information of submitter will need to enable to change the author by a third person. This will need a right to be in a role and then the rest api shall also provide to set the author name.\r\n"}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nUpdating journal notes via REST API\n\n--Description--\nCurrently viewing journals via REST API is possible (with include=journals), but there is no way to update them.\r\n\r\nNote that journal notes are edtiable in main ui."}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\ndiffs for editions of issue/notes entries\n\n--Description--\nIt should be possible to see what changes had been done to the issue/note if someone edited it after it was already created.\r\nIf I edit issue description there is a diff entry generated. But if I edit the note itself there is no info that the note was edited."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API - Add full CRUD support for News\n\n--Description--\nTo date, as I see on [[Rest_News]], the current _News_ resource of the REST API is read-only, in prototype status.\r\n\r\nCould you add missing CRUD operations to this resource (create, update and delete) ?"}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import\n\n--Description--\nIt would be very helpful to be able to update existing issues through the CSV import function.\r\n\r\n"}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd CSV Import for Time Entries\n\n--Description--\nh3. Preface\r\n\r\nThe imports controller was obviously built to be used for more than just issue imports. But since Redmine currently only supports issue imports, there are now some places, where assumptions about the issue import are hard-coded.\r\n\r\nThere are some plugins out there, which add other kinds of CSV imports to Redmine, but none of them seems to use the imports controller. I assume, it's because of the shortcomings mentioned above. I wanted to improve this situation, so I decided to build a time entry importer and - along the way - generalize the imports controller so that it's able to handle more than just issues.\r\n\r\nh3. Preparations\r\n\r\nThe first patch attached extracts the issue related view parts into partials which are determined by convention. They are all prefixed with the imported model name, i.e. @_issues@. \r\n\r\nThe issue related model parts are moved to the import model. Those are, e.g. the proper menu item, the authorization or the layout. Strictly speaking they should be located on the controller level, but I did not want to build sub classes of the imports controller for each and every kind of import.\r\n\r\nh3. Adding the time entry import\r\n\r\nThe second patch attached adds the time entry import. It's using the newly introduced extension points to fill in the blanks. To provide a way for the user to find the new import, I've added the @timelog/_sidebar@ partial, similar to the one for issues. This new sidebar partial is now used in the timelog views and it contains a link to the import.\r\n\r\n*Note:* within said partial, I've mis/re-used an i18n key @label_time_entries_visibility_all@ since it was providing the desired text in German and English. I did not want to introduce a new key based on the existing one, since that would have probably caused major merge problems. If desired, I may of course do that anyway.\r\n\r\nh3. Closing notes\r\n\r\nThe second patch may of course also become a plugin. The main point of this patch (series) was it, to allow plugins to reuse the existing plugin infrastructure. Without the first patch though, a plugin author would need copy most of the views and functionality of the imports class, which is undesirable (at least for the plugin author).\r\n\r\nThank you for considering these patches."}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well."}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd total estimated hours, spent hours, total spent hours for issues to issue list API\n\n--Description--\nThe issue index API currently does not return total estimated hours, spent hours and total spent hours, although the issue show API does show those fields."}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nCreate/Update custom fields via API\n\n--Description--\nTo maintain my custom fields I would like to update the values with a job using the API\r\n\r\n<pre>\r\nPUT http://redmine.org/custom_fields/8\r\n</pre>\r\n\r\n<pre>\r\n        <id>8</id>\r\n        <name>ApiTestField</name>\r\n        <customized_type>issue</customized_type>\r\n        <field_format>list</field_format>\r\n        <regexp></regexp>\r\n        <min_length/>\r\n        <max_length/>\r\n        <is_required>false</is_required>\r\n        <is_filter>false</is_filter>\r\n        <searchable>false</searchable>\r\n        <multiple>false</multiple>\r\n        <default_value></default_value>\r\n        <visible>true</visible>\r\n        <possible_values type=\"array\">\r\n            <possible_value>\r\n                <value>1</value>\r\n                <label>1</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>2</value>\r\n                <label>2</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>3</value>\r\n                <label>3</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>4</value>\r\n                <label>4</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>5</value>\r\n                <label>5</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>5</value>\r\n                <label>5</label>\r\n            </possible_value>\r\n            <possible_value>\r\n                <value>6</value>\r\n                <label>6</label>\r\n            </possible_value>\r\n        </possible_values>\r\n        <trackers type=\"array\"></trackers>\r\n        <roles type=\"array\"></roles>\r\n</pre>"}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nDocument 'Repositories Management API' and 'Revisions Add/Delete Related Issues API'\n\n--Description--\nThe following APIs/end-points should be (separately) documented on/under [[Rest_api]]:\r\n* 'Repositories Management API'\r\n** @/sys/projects@\r\n** @/sys/create_project_repository@\r\n** @/sys/fetch_changesets@\r\n* 'Revisions Add/Delete Related Issues API' (#22008)\r\n** @/projects/:id/repository/:repository_id/revisions/:rev/issues@\r\n** @/projects/:id/repository/:repository_id/revisions/:rev/issues/:issue_id@"}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter the issue whose status changed to open last week\n\n--Description--\nour team created some issues in redmine at last week. \r\nThe status of these issues has now changed to closed\u3002\r\n\r\nHow to filter out those issues whose status changed to open last week"}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nUpdate last_login_on when sending requests with API Key\n\n--Description--\nCurrently, users that access Redmine through the API with a given API key won't surface, as their *last_login_on* field doesn't get updated. This is a bit problematic in our case, as we can't easily distinguish between an inactive user and one that solely uses the API. The attached patch would change this behavior by calling *user.update_last_login_on* when finding the user via the API key.\r\nDo you think it makes sense to apply this change or are there reasons against it?"}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n"}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nEnable to display watches count on issues list\n\n--Description--\nnan"}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nNew issues filter operators \"has been\", \"has never been\", and \"changed from\"\n\n--Description--\nThe attached (unfinished) patch adds new filter operators \"changed from\", \"has ever been\" and \"has never been\". The difference from the existing operators is that they check past values in the journal_details table. These new operators are available for Status, Tracker, Priority, Assignee, Target version, and Category filters.\r\n\r\n* \"changed from\": selects issues where the value has ever changed from the given value\r\n* \"has ever been\": selects issues where the value has ever changed from the given value, or the current value is the given value (equivalent to \"changed from\" + \"is\")\r\n* \"has never been\": selects issues where the value has never been the given value (the negative of \"has ever been\")\r\n\r\nExamples:\r\n* [Assignee][has ever been][<< Me >>]: selects issues you have been assigned in the past or are currently assigned to\r\n* [Assignee][changed from][<< Me >>]: selects issues that were assigned to you in the past but the current assignee is not you\r\n* [Assignee][has never been][<< Me >>]: selects issues that have never been assigned to you\r\n\r\nThe following feature requests will be fulfilled if the operators are implemented.\r\n\r\n* ##3001\r\n* ##3586\r\n* ##9714\r\n* ##31381"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nEnable to display notes count on issues list\n\n--Description--\nI have added the query column to display the Journal Note count in the issues list and made it sortable.\r\nThis feature allows you to easily find issue with a high number of notes directly from the issues list.\r\n\r\n!{width:800px}enable_to_display_notes_count_on_issues_list.png!"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd missing Homepage attribute in Projects API response\n\n--Description--\nHello\r\n\r\nI'm submitting a patch that adds the missing 'homepage' attribute in the API response when requesting projects' index.\r\n\r\nThank you for considering this addition.\r\n\r\n\r\n<pre><code class=\"diff\">\r\ndiff --git a/app/views/projects/index.api.rsb b/app/views/projects/index.api.rsb\r\nindex 03c7c0c77..1f8ff74f7 100644\r\n--- a/app/views/projects/index.api.rsb\r\n+++ b/app/views/projects/index.api.rsb\r\n@@ -5,6 +5,7 @@ api.array :projects, api_meta(:total_count => @project_count, :offset => @offset\r\n       api.name        project.name\r\n       api.identifier  project.identifier\r\n       api.description project.description\r\n+      api.homepage    project.homepage\r\n       api.parent(:id => project.parent.id, :name => project.parent.name) if project.parent && project.parent.visible?\r\n       api.status      project.status\r\n       api.is_public   project.is_public?\r\ndiff --git a/test/integration/api_test/projects_test.rb b/test/integration/api_test/projects_test.rb\r\nindex 4b0c79fae..1423b9c8f 100644\r\n--- a/test/integration/api_test/projects_test.rb\r\n+++ b/test/integration/api_test/projects_test.rb\r\n@@ -43,6 +43,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n       assert_select '>status', :text => '1'\r\n       assert_select '>is_public', :text => 'true'\r\n       assert_select '>inherit_members', :text => 'true'\r\n+      assert_select '>homepage', :text => 'http://ecookbook.somenet.foo/'\r\n     end\r\n   end\r\n\r\n@@ -57,6 +58,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_kind_of Hash, json['projects'].first\r\n     assert json['projects'].first.has_key?('id')\r\n     assert json['projects'].first.has_key?('inherit_members')\r\n+    assert json['projects'].first.has_key?('homepage')\r\n   end\r\n\r\n   test \"GET /projects.xml with include=issue_categories should return categories\" do\r\n@@ -102,6 +104,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_select 'project>status', :text => '1'\r\n     assert_select 'project>is_public', :text => 'true'\r\n     assert_select 'project>inherit_members', :text => 'true'\r\n+    assert_select 'project>homepage', :text => 'http://ecookbook.somenet.foo/'\r\n     assert_select 'custom_field[name=\"Development status\"]', :text => 'Stable'\r\n\r\n     assert_select 'trackers', 0\r\n@@ -118,6 +121,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_equal false, json['project']['inherit_members']\r\n     assert_equal false, json['project'].has_key?('default_version')\r\n     assert_equal false, json['project'].has_key?('default_assignee')\r\n+    assert_equal 'http://ecookbook.somenet.foo/', json['project']['homepage']\r\n   end\r\n\r\n   test \"GET /projects/:id.xml with hidden custom fields should not display hidden custom fields\" do\r\n</code></pre>\r\n"}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option for users to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option for a new user is *\"Only for things I watch or I'm involved in\"* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *created* by the user\r\n* The issue is *assigned* to the user\r\n\r\nI think the default option should now be *\"Only for things I watch or I am assigned to\"* (internal name: only_assigned) which sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *assigned* to the user\r\n\r\nThis is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.\r\n\r\nConsider the following scenario:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue\r\n\r\nIf the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher\r\n\r\nAs illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned."}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API need created_by field in the API\n\n--Description--\nWhile creating an issue using REST API in similar to 'assigned_to_id' for an issue assigned to a user, need a 'created_by_id' while creating a issue "}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>"}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072"}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n\n\n-- Ticket2\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api"}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nUpdating journal notes via REST API\n\n--Description--\nCurrently viewing journals via REST API is possible (with include=journals), but there is no way to update them.\r\n\r\nNote that journal notes are edtiable in main ui."}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nREST API - Add full CRUD support for News\n\n--Description--\nTo date, as I see on [[Rest_News]], the current _News_ resource of the REST API is read-only, in prototype status.\r\n\r\nCould you add missing CRUD operations to this resource (create, update and delete) ?"}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nExpose repository version via REST API\n\n--Description--\nFor Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.\r\n\r\nOr is there a more convenient workaround than the one mentioned above?"}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nDocument Journals API\n\n--Description--\n#10171 added an API to update journal's notes. This should be documented in the Wiki, namely \"Rest_Journals\":/projects/redmine/wiki/Rest_Journals?parent=Rest_api"}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd API-Request for fetching Journals which has changed since a certain date/time\n\n--Description--\nWe want to synchronize the redmine issues with our internal system.\r\nFor this purpose, we need a feature to fetch changed journal entries of an issue.\r\nEditing a journal entry doesn't change the updated_on field of the issue.\r\n\r\nTherefore, we would like to have a GET call like:\r\n<pre>\r\nhttps://domain.com/journals.json?updated_on=%3E%3D2024-03-25T07%3A24%3A03Z\r\n</pre>\r\n\r\nCurrently, the journals endpoint only supports updates, but no GET requests.\n\n-- Ticket2\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n"}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n\n\n-- Ticket2\n--Subject--\nEmail notification based on custom field value\n\n--Description--\nHi all,\r\n\r\nIs there any way to define a custom field as a list of email + value ? and if the custom field value has changed in some issues an email is sent the corresponding email ?\r\n\r\neg : \r\nCustom field named GROUP with the following values:\r\nemail    | group name|\r\na@eg.com | g1        |\r\nb@eg.com | g2        |\r\nc@eg.com | g3        |\r\n\r\n\r\nIn the issue, we can select the group. When we select the group : g1, an email is sent to a@eg.com.\r\n\r\nIs there any way to do this ?\r\n\r\nThanks for help.\r\n\r\nRegards, \r\n\r\nAniss"}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n\n\n-- Ticket2\n--Subject--\nCreate automatic subtasks\n\n--Description--\nWe have some recurring processes to do (weekly / monthly).\r\nWe are currently logging these tasks in a ticket, in which the start and end date are changed manually after completion. All options / fields are already filled with the old values during processing. If the person in charge of the ticket forgets to check the truth of the individual field, this will not be noticed ...\r\nWhat we need:\r\n* The task is created and defined in the main ticket\r\n* The main ticket specifies whether the ticket will run forever or whether it will expire on a specific date\r\n* The cycle of how often or when a sub-task is created is specified in the main ticket (with start and end date for completion)\r\n* The assigned person / group is specified in the main ticket.\r\n* The main ticket then generates according to the entered but still empty sub-tasks (tickets), which then have to be filled in according to the tracker"}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n\n\n-- Ticket2\n--Subject--\nSet custom fields on state\n\n--Description--\nDear all,\r\nis it possible to set a custom field value on reaching specific state.\r\nE.g.\r\nReset a custom field if ticket status is reassigned to \"New\"\r\nThank you very much\r\nBest Regards"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n\n\n-- Ticket2\n--Subject--\nSet custom field value on specific state\n\n--Description--\nDear all,\r\nis it possible to set a custom field value on reaching specific state.\r\nE.g. Reset a custom field if ticket status is reassigned to \"New\"\r\nThank you very much\r\nBest Regards"}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nActivate CustomField when status changes\n\n--Description--\nHello,\r\n\r\nI'd like to know if it's possible to automate a task using a custom workflow for this type of action.\r\n\r\nWhen the status of a request changes from \"Transmitted\" to \"Accepted with reserves\", a custom field that was not initially visible on this tracker should appear at that moment and remain until the ticket is closed. This custom field is called \"Background\" and takes the form of a drop-down list with different values.\r\n\r\nIf you know how to code this in a custom workflow, I'd love to know ;)\r\n\n\n-- Ticket2\n--Subject--\nAdd \"Statuses\" filter when creating new \"Issue\" custom fields\n\n--Description--\nCustom fields on issues can be associated with specific Trackers, so a custom field that is associated with \"Bug\" will be hidden on issues of other types.  However, if that custom field is \"required\" then it is required for every status of that issue throughout its workflow.  \r\n\r\nIn many workflows, specific pieces of information are added to an issue throughout its workflow and not all at the beginning, so it would be most useful if custom fields could reflect this.  For example, in the workflow of a \"Bug\" when the tester sets the status to \"Verified\" that tester should note the version number that they tested and the environment that they tested it in.  If a user sets the bug to \"Rejected\" they should provide an explanation for why it is rejected.\r\n\r\nCurrently, we keep all of this information in \"Notes\" and it is the responsibility of each user to remember what needs to be added based on the status they're switching from/to.  However, if we could keep this in custom fields that are selectively shown at specific points in the workflow this would both better enforce compliance and would store that information in a more structured way that we could leverage better in custom queries and reports."}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nNew email notification option \"For any event on my bookmarked projects\"\n\n--Description--\nFor now, if you want to be informed about all events of a huge projects portfolio, I have to update the list behind \"For any events of the selected projects only...\" quite often. \r\nIt would be really great if we can receive all notifications of the bookmarked projects adding a new option in the notification option list : \"For any events of my bookmarked projects only...\"\r\n"}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd configurable setting for copying attachments when copying an issue\n\n--Description--\nWhen copying an issue, you can select the following behaviors:\r\n\r\n1. whether to make a relation between source and destination issues\r\n2. whether to copy attachments\r\n\r\nAnd the former has a setting to set the default behavior (#18500). However, the latter does not.\r\n\r\nI think it should also be possible to configure the default behavior whether to copy attachments or not.\r\n\r\n!{width: 623px; border: 1px solid grey;}.setting-copy-attachments-on-copy.png!"}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nNew email notification option - Only for things I watch\n\n--Description--\nCurrently there is no way to stop receiving notifications on an issue I'm no longer have interest in. Because I'm always involved, the owner or assigned to.\r\nWith this option I would receive notifications only for issues I'm activelly watching.\r\n"}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nAuto watch issues on issue creation\n\n--Description--\nSimilar to #4347 we propose adding an option to watch issues the user created. This would allow users to more finely control which issues they want to be notified about rather than having to select the \"only owner\" or \"only my events\" and receiving notifications for all the issues the user created. This will also allow in the future to replace the mail notification options with only having auto watching options."}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to send email notification when an attachment is added\n\n--Description--\nCurrently in the settings under \"Select actions for which email notifications should be sent\", if the \"Issue updated\" option is checked, an email notification is sent when an attachment is added to a issue. \r\nHowever, if the \"Issue updated\" option is unchecked, and only sub-options such as \"Note added\" or \"Status updated\" are checked, then no email notification is sent when an attachment is added.\r\n\r\nIt would be beneficial to have a separate notification setting for adding attachments, independent of other options. This would allow users to receive notifications specifically for added attachments without having to enable unrelated options. By implementing this, users can that they receive notifications tailored to their preferences, even if the \"Issue updated\" option is not selected.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-04-17%2015.46.53.png!\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option for users to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option for a new user is *\"Only for things I watch or I'm involved in\"* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *created* by the user\r\n* The issue is *assigned* to the user\r\n\r\nI think the default option should now be *\"Only for things I watch or I am assigned to\"* (internal name: only_assigned) which sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *assigned* to the user\r\n\r\nThis is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.\r\n\r\nConsider the following scenario:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue\r\n\r\nIf the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher\r\n\r\nAs illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned."}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project\n\n-- Ticket2\n--Subject--\nAdding Holidays to Calendar\n\n--Description--\nWe want to show national holidays and Sundays with a different color in the calendar so that the user knows it is a holiday.\r\nI tried to use \"holidays.gem\" to do that but yet i couldn't succeed.\r\nWe don't mean to use schedules plugin or any, we directly want to change the redmine calendar."}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project\n\n-- Ticket2\n--Subject--\nAllow to add custom fields of type date to calendar view\n\n--Description--\nOn the calendar view, there are visible start and due dates. We have more custom fields of date tye, like a deadline (it's the deadline to deliver an issue to the customer, it's not Due date, which is for our team). I need to render those values in the project's calendar view.\r\n\r\nThanx-a-lotta!"}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project\n\n-- Ticket2\n--Subject--\nsolar calendar\n\n--Description--\nHi dears\r\nI have been following the solar calendar for Redmine for a long time, but I didn't find any results,\r\nPeople who have done this before are from older versions of Redmine.\r\nIs it possible to create a plugin in this regard?"}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project\n\n-- Ticket2\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible."}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nSQL custom query\n\n--Description--\ndear friend,\r\nI would like to get help with a custom query which I can get data from Redmine Database with below field and condition\r\nIssue ID/ Tracker/ Subject / Author/ Assignee / Created / Start time / Closed / Status /Custom field 1/ Custom field 2 / Category / Priority\r\nand the condition to get data from date to date ( between ddmmyyyy - ddmmyyyy)\r\nthank you so much !\r\n"}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated"}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot."}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nProvide some ways to find the issues where an user Is mentioned \n\n--Description--\nAt this time there isn't a way to find all issues where an user is mentioned nor via filter nor via email.\r\nShould be possibile to:\r\n* to search issue where i'm mentioned \r\n* customize the subject of the email related to comment where i'm mentioned.\r\n\r\nThe old plugin used before the landing of this feature in redmine-core, was implement the way 2\r\n"}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n"}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display)."}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald"}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan"}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072"}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nI am a Redmine user and Lover \n\n--Description--\nI want to do customisation in redmine.\r\nI want that when i create issue in my custom redmine then In the ticket body i want to print all the members of that particlar project in which i am creating the ticket\n\n-- Ticket2\n--Subject--\nCalendar view/page to add custom events\n\n--Description--\nCurrently the calendar views show only events with tickets. For example, ticket start date and due date, etc.\r\n\r\nIt will be so nice if i am able to add an event of my own which is not ticked on my redmine. For example, release dates for the project"}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHow to get back issues that have been deleted. \n\n--Description--\nHow to get back issues that have been deleted. \n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5"}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR"}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nTry importing journal replies as issue reply where applicable\n\n--Description--\nE-mails that are recognised as journal replies are currently discarded if the journal recognised from the message ID is invalid/not present anymore. This happens when a journal is deleted but may also happen when 2 redmine instances are used to send e-mails to each other."}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nReceive e-mail replies to news and news comments\n\n--Description--\nCurrently e-mails sent in reply to notifications from news or news comments are ignored. The proposed patch adds the ability to import answers to news and news comments.\r\n\r\nThis patch requires https://www.redmine.org/issues/38273"}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nSend 2FA security notifications asynchronously\n\n--Description--\nGiven what Jean-Philippe Lang wrote in #38388#note-2:\r\n> In Redmine 4.2, security notifications seem to be sent synchronously, unlike other notifications that are sent later. It triggers a timeout when sending the notification from redmine.org.\r\n\r\nIt might be better if Redmine would send security notifications asynchronously too."}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIssue Reminder Plugin problem\n\n--Description--\nDear Redmine support team,\r\n\r\nI use  Redmine 5.0.4.stable version. I installed \"Issue Reminder\" plugin on Redmine. When i click \"Remind assignee now\" i recieve e-mail notification. But when i click to \"Remind someone later\"  and remind manually i don't receive email notification. You can see screenshoot on attachment. Please help me to resolve problem.\r\n\r\n\n\n-- Ticket2\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald"}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>"}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDynamic generation of supported code highlighting languages in help section\n\n--Description--\nThis patch changes the \"List of languages supported by Redmine code highlighter\" page in the help to be dynamically generated.\r\n\r\nCurrently, if the Rouge library adds new languages, someone has to manually update a list in the file @app/views/help/wiki_syntax/code_highlighting_languages.html.erb@. This method takes time and can lead to mistakes.\r\n\r\nWith this patch applied, the help page will automatically show any new languages that Rouge starts supporting. This means the list will always be up-to-date without needing manual changes.\r\n\n\n-- Ticket2\n--Subject--\nDrop deprecated Redcarpet based Markdown formatter\n\n--Description--\nIn Redmine 5.1, the Redcarpet-based Markdown formatter is deprecated and CommonMark Markdown is the default instead.\r\n\r\nSince CommonMark Markdown has been used by users without any particular problems, I think we can discontinue the deprecated Redcarpet-based Markdown."}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSplit custom fields admin page in varios sheets or pages\n\n--Description--\nDear developes, hope it can be possible to make a small plugin to help people who have many custom fields in their installation, dividing the custom fields administration page in many pages and showing only 100 or 200 fields per page. We are having the problem explained in this ticket:(https://www.redmine.org/boards/2/topics/69686) because we have a 2200 custom fields, and it would be very helpfull to have a plugin that allows to navigate between them in efficient way.\r\nThanks a lot.\r\n\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nSplit custom fields admin page in varios sheets or pages\n\n--Description--\nDear developes, hope it can be possible to make a small plugin to help people who have many custom fields in their installation, dividing the custom fields administration page in many pages and showing only 100 or 200 fields per page. We are having the problem explained in this ticket:(https://www.redmine.org/boards/2/topics/69686) because we have a 2200 custom fields, and it would be very helpfull to have a plugin that allows to navigate between them in efficient way.\r\nThanks a lot.\r\n\n\n-- Ticket2\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg"}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nAbility to set project icons\n\n--Description--\nIt would be very convenient to see individual icons on project's list page."}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nUsing the classical 'list' view on projects\n\n--Description--\nI believe quite a few versions back there was a 'list' like view, 1 project per 'row' almost on the project page, is it possible to regain this view?"}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nPrevent close project\n\n--Description--\nPlease add feature to prevent closing project with opened tasks\r\n"}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nProject Activity Log\n\n--Description--\nWould like a log of project-level activities, such as when someone closes or reopens a project. \r\n\r\nWithout a log, there is no way to see who is doing project level changes, and no way to investigate problems."}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n\n\n-- Ticket2\n--Subject--\nEnable journaling on projects\n\n--Description--\nIt's so usefull to have history of project field and custom fields changes.\r\nAlso it's desirable about project settings changes."}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nDisplay Issue Edit form Position according to comments chronological order\n\n--Description--\nSo I've set up my Redmine to display issue comments in reverse chronological order.\r\n\r\nI have an issue with hundreds of comments. When I hit Edit, the form is displayed at the very bottom of the page.\r\n\r\nTo me, it would make more sense that the Edit page shows above the latest comment, so there is no need to Scroll all the way up to see what are the latest comments as I am adding new ones.\r\n\r\nSo:\r\n\r\n- \"Show comments in chronological order\": Edit form is at the very bottom of the page\r\n- \"Show comments in reverse chronological order\": Edit form is displayed above the top comment\r\n\r\nDoes this makes sense?"}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issue and issue journal\n\n--Description--\nWhen you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.\r\n\r\nI think it would be convenient to be able to copy a simple URL from the view.\r\n\r\n* URL of the issue to be copied\uff1a @https://<your redmine>/issues/1@\r\n* URL of the issue journal to be copied\uff1a @http://<your redmine>/issues/1#note-1@"}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nRedirect to repositories#show after repositories#fetch_changesets to avoid the user-visible browser URL\n\n--Description--\nWhen POST'ing to repositories#fetch_changesets, we fetch changesets and then just render the @show@ page This retains the URL of the @fetch_changesets@ action in the browser bar, e.g.\r\n\r\n<pre>\r\nhttps://redmine.example.com/projects/test/repository/demo/fetch_changesets\r\n</pre>\r\n\r\n\r\nFurthermore, the rendered page is the result of a POST and is thus not easily reloaded. Thus, I propose that instead of directly showing the repository again, we issue a redirect to the repository's show page. That way, the @fetch_changesets@ URL is not visible ion the browser's address bar and the page can be easily reloaded.\r\n\r\nThis is implemented in the attached patch.\r\n"}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDisable jumping to journal's note after updating the issue\n\n--Description--\nCurrent functionality automatically scrolls the page to new note, after issue is updated. It is not handy if you are updating some issues's fields, sumbit it and want to continue working with issues further \u2014 you have to scroll page back to the top after each update.\r\n\r\nIs it possible to turn jumping to new note's anchor link in Redmine 5.1.1?\n\n-- Ticket2\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable."}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRefresh history tabs look and feel\n\n--Description--\nThe current UI of the history tab looks quite confusing because of the many borders. For some heading we started to add a background color (ex: Activity page) and I think we should also add to the history tab. Looking on some active themes, I saw some quite nice implementations:\r\n\r\n1.Simple change to show gravatar inside the heading:\r\n  \r\n!{border: 1px solid grey; width: 80%}.history1.png!\r\n\r\n2. From redmine_theme_farend_bleuclair theme maintained by Farend (@maeda).\r\n\r\n!{border: 1px solid grey; width: 80%}history2.png!\r\n\r\nWhat do you think?\r\n\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRefresh history tabs look and feel\n\n--Description--\nThe current UI of the history tab looks quite confusing because of the many borders. For some heading we started to add a background color (ex: Activity page) and I think we should also add to the history tab. Looking on some active themes, I saw some quite nice implementations:\r\n\r\n1.Simple change to show gravatar inside the heading:\r\n  \r\n!{border: 1px solid grey; width: 80%}.history1.png!\r\n\r\n2. From redmine_theme_farend_bleuclair theme maintained by Farend (@maeda).\r\n\r\n!{border: 1px solid grey; width: 80%}history2.png!\r\n\r\nWhat do you think?\r\n\n\n-- Ticket2\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n"}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRefresh history tabs look and feel\n\n--Description--\nThe current UI of the history tab looks quite confusing because of the many borders. For some heading we started to add a background color (ex: Activity page) and I think we should also add to the history tab. Looking on some active themes, I saw some quite nice implementations:\r\n\r\n1.Simple change to show gravatar inside the heading:\r\n  \r\n!{border: 1px solid grey; width: 80%}.history1.png!\r\n\r\n2. From redmine_theme_farend_bleuclair theme maintained by Farend (@maeda).\r\n\r\n!{border: 1px solid grey; width: 80%}history2.png!\r\n\r\nWhat do you think?\r\n\n\n-- Ticket2\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders."}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd feature to get raw Textile/Markdown text in notes and descriptions\n\n--Description--\nThere are instances where I need the raw, unprocessed text from journal comments and descriptions written in Textile or Markdown, rather than the HTML-converted information. This is particularly necessary when I want to write a new comment based on the information displayed in these formats. Additionally, there are times when I need to add information to tables written in Textile or Markdown. Without access to the raw text, I would have to recreate the table from scratch.\r\n\r\nWhile it is possible to obtain the raw text from the input fields if I have editing permissions for the comments, such permissions are not always available. Another alternative is to use the quote feature, but this is not a complete solution as it adds quotation marks and can omit some of the original formatting.\r\n\r\nI have attached an image that illustrates the requested feature.\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-06-03%2014.20.27.png!\r\n\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd feature to get raw Textile/Markdown text in notes and descriptions\n\n--Description--\nThere are instances where I need the raw, unprocessed text from journal comments and descriptions written in Textile or Markdown, rather than the HTML-converted information. This is particularly necessary when I want to write a new comment based on the information displayed in these formats. Additionally, there are times when I need to add information to tables written in Textile or Markdown. Without access to the raw text, I would have to recreate the table from scratch.\r\n\r\nWhile it is possible to obtain the raw text from the input fields if I have editing permissions for the comments, such permissions are not always available. Another alternative is to use the quote feature, but this is not a complete solution as it adds quotation marks and can omit some of the original formatting.\r\n\r\nI have attached an image that illustrates the requested feature.\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-06-03%2014.20.27.png!\r\n\n\n-- Ticket2\n--Subject--\nUpdate sanitization rules to allow footnotes markup to match the original structure\n\n--Description--\nThis is related to #35892.\r\n\r\nThe sanitisation rules should allow footnotes markup to render as they are generated by commonmark gem for easier customisations."}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd feature to get raw Textile/Markdown text in notes and descriptions\n\n--Description--\nThere are instances where I need the raw, unprocessed text from journal comments and descriptions written in Textile or Markdown, rather than the HTML-converted information. This is particularly necessary when I want to write a new comment based on the information displayed in these formats. Additionally, there are times when I need to add information to tables written in Textile or Markdown. Without access to the raw text, I would have to recreate the table from scratch.\r\n\r\nWhile it is possible to obtain the raw text from the input fields if I have editing permissions for the comments, such permissions are not always available. Another alternative is to use the quote feature, but this is not a complete solution as it adds quotation marks and can omit some of the original formatting.\r\n\r\nI have attached an image that illustrates the requested feature.\r\n!{width: 500px; border: 1px solid #ccc}screenshot%202024-06-03%2014.20.27.png!\r\n\n\n-- Ticket2\n--Subject--\nAllow users to choose textile or markdown formatting\n\n--Description--\nCurrently you can only set the the Text formatting to Textile or Markdown globally. You can't manually select what you prefer at user/issue/project base.\r\n\r\nAdditionally upgrading from Textile to Markdown is error prone and at some size it is not manageable to manually fix the caused problems due conversion (Reformat plugin).\r\nSo there is no reasonable way to convert from textile to markdown. \r\nEven then long term users might insist that they are used to textile and they do not know markdown (ofc there is a workaround, learning a new syntax).\r\n\r\nPlease add the possibility to choose the formatting at user/issue/project base.\r\nWithout the option a transition from textile to markdown is pretty impossible (old stuff could keep textile, new stuff markdown)."}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well."}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nSettings for global and user default custom ProjectQuery\n\n--Description--\nA feature like this would be in line with #7360. It wouldn't need the project and user level defaults though. It would IMHO be a more complete (than r19505) solution to the need expressed in #32818.\r\n\r\nWith this feature, the @project_list_display_type@ setting added in r19505 can be removed."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nProject Activity Log\n\n--Description--\nWould like a log of project-level activities, such as when someone closes or reopens a project. \r\n\r\nWithout a log, there is no way to see who is doing project level changes, and no way to investigate problems."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808."}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nNew issues filter operators \"has been\", \"has never been\", and \"changed from\"\n\n--Description--\nThe attached (unfinished) patch adds new filter operators \"changed from\", \"has ever been\" and \"has never been\". The difference from the existing operators is that they check past values in the journal_details table. These new operators are available for Status, Tracker, Priority, Assignee, Target version, and Category filters.\r\n\r\n* \"changed from\": selects issues where the value has ever changed from the given value\r\n* \"has ever been\": selects issues where the value has ever changed from the given value, or the current value is the given value (equivalent to \"changed from\" + \"is\")\r\n* \"has never been\": selects issues where the value has never been the given value (the negative of \"has ever been\")\r\n\r\nExamples:\r\n* [Assignee][has ever been][<< Me >>]: selects issues you have been assigned in the past or are currently assigned to\r\n* [Assignee][changed from][<< Me >>]: selects issues that were assigned to you in the past but the current assignee is not you\r\n* [Assignee][has never been][<< Me >>]: selects issues that have never been assigned to you\r\n\r\nThe following feature requests will be fulfilled if the operators are implemented.\r\n\r\n* ##3001\r\n* ##3586\r\n* ##9714\r\n* ##31381"}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nEnable journaling on projects\n\n--Description--\nIt's so usefull to have history of project field and custom fields changes.\r\nAlso it's desirable about project settings changes."}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAdd missing Homepage attribute in Projects API response\n\n--Description--\nHello\r\n\r\nI'm submitting a patch that adds the missing 'homepage' attribute in the API response when requesting projects' index.\r\n\r\nThank you for considering this addition.\r\n\r\n\r\n<pre><code class=\"diff\">\r\ndiff --git a/app/views/projects/index.api.rsb b/app/views/projects/index.api.rsb\r\nindex 03c7c0c77..1f8ff74f7 100644\r\n--- a/app/views/projects/index.api.rsb\r\n+++ b/app/views/projects/index.api.rsb\r\n@@ -5,6 +5,7 @@ api.array :projects, api_meta(:total_count => @project_count, :offset => @offset\r\n       api.name        project.name\r\n       api.identifier  project.identifier\r\n       api.description project.description\r\n+      api.homepage    project.homepage\r\n       api.parent(:id => project.parent.id, :name => project.parent.name) if project.parent && project.parent.visible?\r\n       api.status      project.status\r\n       api.is_public   project.is_public?\r\ndiff --git a/test/integration/api_test/projects_test.rb b/test/integration/api_test/projects_test.rb\r\nindex 4b0c79fae..1423b9c8f 100644\r\n--- a/test/integration/api_test/projects_test.rb\r\n+++ b/test/integration/api_test/projects_test.rb\r\n@@ -43,6 +43,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n       assert_select '>status', :text => '1'\r\n       assert_select '>is_public', :text => 'true'\r\n       assert_select '>inherit_members', :text => 'true'\r\n+      assert_select '>homepage', :text => 'http://ecookbook.somenet.foo/'\r\n     end\r\n   end\r\n\r\n@@ -57,6 +58,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_kind_of Hash, json['projects'].first\r\n     assert json['projects'].first.has_key?('id')\r\n     assert json['projects'].first.has_key?('inherit_members')\r\n+    assert json['projects'].first.has_key?('homepage')\r\n   end\r\n\r\n   test \"GET /projects.xml with include=issue_categories should return categories\" do\r\n@@ -102,6 +104,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_select 'project>status', :text => '1'\r\n     assert_select 'project>is_public', :text => 'true'\r\n     assert_select 'project>inherit_members', :text => 'true'\r\n+    assert_select 'project>homepage', :text => 'http://ecookbook.somenet.foo/'\r\n     assert_select 'custom_field[name=\"Development status\"]', :text => 'Stable'\r\n\r\n     assert_select 'trackers', 0\r\n@@ -118,6 +121,7 @@ class Redmine::ApiTest::ProjectsTest < Redmine::ApiTest::Base\r\n     assert_equal false, json['project']['inherit_members']\r\n     assert_equal false, json['project'].has_key?('default_version')\r\n     assert_equal false, json['project'].has_key?('default_assignee')\r\n+    assert_equal 'http://ecookbook.somenet.foo/', json['project']['homepage']\r\n   end\r\n\r\n   test \"GET /projects/:id.xml with hidden custom fields should not display hidden custom fields\" do\r\n</code></pre>\r\n"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAllow to \"watch\" projects to get notifications\n\n--Description--\nAs discussed in #39854, having the option to \"watch\" projects would give users a straight forward way to subscribe to notifications about project activity, similar to watching an issue subscribes to notifications about activity regarding this issue.\r\n\r\nThis could potentially replace the current notification setting to be notified for a given list of selected projects in \"My Account\"."}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nAdd updated_on and updated_by fields to Issues API journal response\n\n--Description--\nWe would like to synchronize the redmine issues with our internal system via API.\r\nFor this purpose, we fetch the issues with:\r\n\r\n\r\n<pre>\r\ncurl -H \"X-Redmine-API-Key: secret\" \"https://domain.com/issues/58.json?include=children%2Cattachments%2Crelations%2Cchangesets%2Cjournals%2Cwatchers%2Callowed_statuses\" -vv\r\n</pre>\r\n\r\nThe journal is returned but we can't determine, which entry changed. \r\nTherefore, it would be helpful to not only have the created_on but also the updated_on field.\r\n\r\nThe file app/views/issues/show.api.rsb needs an extra line at line 61:\r\n\r\n...\r\n        api.created_on journal.created_on\r\n\t*api.updated_on journal.updated_on*\r\n        api.private_notes journal.private_notes\r\n...\r\n\r\n"}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExpose project updated_on column and filter in project query\n\n--Description--\nIt is sometimes helpful to query recently changed projects, for example to look for changes in a project's custom field and update external applications accordingly.\r\n\r\nThis patch adds the `updated_on` attribute to the list of available columns and filters in issue queries. We understand that \"updated\" for a project might lead to confusion because it could also be understood as \"something in the project has changed\" and not just \"the project itself was changed\". The addition of the \"last activity\" in #23954 should help understand the difference between the 2 values though.\n\n-- Ticket2\n--Subject--\nEnhance \"Last activity\" column to link to project activity page\n\n--Description--\nThis patch enhances the \"Last activity\" column in the projects list, which was implemented in #23954, to include a link to the project's activity page. This addition allows users to easily view the latest activities for a project with a single click.\r\n\r\n*Values in the \"Last activity\" column are linked to the project's activity page:*\r\n!{width: 802px; border: 1px solid grey;}.clipboard-202405171158-bsvjz.png!\r\n\r\n*You can see the latest activities with a single click on the projects page:*\r\n!{width: 106xpx; border: 1px solid grey;}.clipboard-202405171200-fnwk2.png!\r\n"}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nOpen GANTT for more than 24months\n\n--Description--\nHi,\r\n\r\nwe have projects that run for more than 24months and it is necessary to print a gantt chart over the whole project.\r\nI'd like to increase it.\r\n\r\nI suppose, changes necessary are in:\r\nlib/redmine/helpers/gantt.rb\r\n\r\nline 68: replace 24 by any number you like. Maybe we can make this a setting?\r\nAdditionally, the PNG generation needs some adaptation to fit the entire sheet on one page (font size, month/year shortened to month/2-digit-year)"}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nask for patch of Gantt: right and left resizable panel for Redmine 3.3.3\n\n--Description--\nI tried to apply change_to_right_and_left_resizable_panel_v2.patch in #20481 to my Redmine 3.3.3, but seems the files content have been changed, and it can't be patch directly even though I modified the file path in patch file to be corresponding with the path of my redmine installed.\r\nthen, I tried modified my redmine files' code according to the modification content in this patch file, and restart redmine(subversion,mysql, apache), but left side of gannt is not resizable yet. seems this modification is not suitable for Redmine 3.3.3.\n\n-- Ticket2\n--Subject--\nUpgrade redmine 3.3.0 (windows) to latest\n\n--Description--\nHi,\r\nI have a old redmine 3.3.0 windows version, and i want to upgrade it to the latest version, what is the best way? I have a Ubuntu server created to do this upgrade. \r\n\r\nthanks and regards."}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpgrade jQuery UI to 1.13.3\n\n--Description--\nhttps://blog.jqueryui.com/2024/04/jquery-ui-1-13-3-released/\n\n-- Ticket2\n--Subject--\nUpgrade jQuery to 3.7.1\n\n--Description--\nThere are no security issues since the current version 3.6.1. It's just a bugfix / feature update."}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd Modules to hide/display Overview, Activity, Roadmap\n\n--Description--\nWhen opening Projects to clients, in some cases one may not want to display Activity or Overview. The Project Settings' Modules covers most of a Project's tabs, but not:\r\n\r\n* Overview\r\n* Activity\r\n* Roadmap\r\n\r\nCould tick boxes be added here, so that Admins can 100% customize the look & feel of each project according to its requirements (confidentiality, etc..)."}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nNew permission to allow to view all projects\n\n--Description--\nWe are developing an synchronization of projects between Redmine and another application with the usage of the Redmine REST-API. Now we have noticed that only if you take the API key of an Administrator you get a list of all projects. Otherwise you only get the list of projects you are involved in.\r\n\r\nBut using an Administrator as API-User is a security risk.\r\n\r\nIt would be nice if there could be added a new permission for viewing all projects. This would not only be good for the API but also for the project management."}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd links to spent time report table elements\n\n--Description--\nWhen working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine."}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAbility to choose default sort by column for all projects\n\n--Description--\nMuch like what's available when new saved query is created.\r\n\r\nPreferably it should be shown in *admin | Settings | Issue tracking*\r\n\r\nat *Default columns displayed on the issue list* section.\r\n\r\nFor example, from saved queries page:\r\n!2017-10-05 13_10_30-RCOM.png!"}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam."}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nProject Activity Log\n\n--Description--\nWould like a log of project-level activities, such as when someone closes or reopens a project. \r\n\r\nWithout a log, there is no way to see who is doing project level changes, and no way to investigate problems."}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible."}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow project changes on 'Activity' page\n\n--Description--\nWe would like to propose a new feature for Redmine: displaying project changes on the 'Activity' page. The idea is to enhance the visibility and traceability of modifications related to projects. Specifically, we propose that at least the following events be included on the 'Activity' page of each project:\r\n\r\n* Project Creation: Log the creation of new projects.\r\n* Changes to Project Fields: Track and display changes made to project fields such as the project name, description, etc.\r\n* Changes to Project Custom Fields: Include modifications made to custom fields associated with the project.\r\n\r\nEach of these events should be shown with the author, date, and a diff (similar to how changes to issues and other entities are currently displayed). This feature will significantly improve the transparency and management of project changes.\r\n\r\nImplementation Participation:\r\n\r\nIf this feature request is approved, we are ready and willing to participate in its implementation. We seek guidance and support from core developers to ensure our contributions align with Redmine\u2019s standards and best practices.\r\n\r\nWe believe this addition will be valuable for many users and look forward to collaborating with the Redmine development team to bring this enhancement to life.\r\n\r\nThank you for considering our request.\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
