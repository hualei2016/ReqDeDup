{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nERPmine Plugin Log Time Issue \n\n--Description--\nI have Installed ERPmine Plugin in our Redmine server. after log time entries not working.\r\n\r\nI have attached the log time error screenshot in attachment.\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nERPmine Plugin Log Time Issue \n\n--Description--\nI have Installed ERPmine Plugin in our Redmine server. after log time entries not working.\r\n\r\nI have attached the log time error screenshot in attachment.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nNeed some patch to enable emails queue\n\n--Description--\nI'm using redmine on Windows platform (Bitnami), smtp is set on gmail. In case I'm creating a new, the email about it trying to send for more than 50 recipients, so I'm getting an error 452 4.5.3 - too many recipients. Is it possible to develop some patch to make the queue of emails, sending one by one and not by all pack in time? Many thanks!"}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nApply changes on parent issue to subtasks when copying issues\n\n--Description--\nWhen I copy tasks with subtasks, the changed properties are applied only in the parent tasks.\r\n\r\n<pre>\r\nEnvironment:\r\n\r\n  Redmine version                          2.2.3.stable\r\n  Ruby version                             1.8.7 (i686-linux)\r\n  Rails version                            3.2.12\r\n  Environment                              production\r\n  Database adapter                         MySQL\r\n\r\nRedmine plugins:\r\n\r\n  redmine_impasse                          1.2.2\r\n  redmine_screenshot_paste                 2.1.0\r\n  redmine_wiki_extensions                  0.6.2\r\n  redmine_wiki_lists                       0.0.1\r\n</pre>"}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nDisplay Issue Edit form Position according to comments chronological order\n\n--Description--\nSo I've set up my Redmine to display issue comments in reverse chronological order.\r\n\r\nI have an issue with hundreds of comments. When I hit Edit, the form is displayed at the very bottom of the page.\r\n\r\nTo me, it would make more sense that the Edit page shows above the latest comment, so there is no need to Scroll all the way up to see what are the latest comments as I am adding new ones.\r\n\r\nSo:\r\n\r\n- \"Show comments in chronological order\": Edit form is at the very bottom of the page\r\n- \"Show comments in reverse chronological order\": Edit form is displayed above the top comment\r\n\r\nDoes this makes sense?"}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nSubtasks inherit parent settings during copy\n\n--Description--\nHi,\r\noften I copy issues across versions. My issues have a lot of subtasks.\r\nIt would be useful if when I set, for example, version or status on  parent issue the same are set on the subtasks.\r\nWithout this I must modify them afterwards, and this in not always easy.\r\n\r\nRegards\r\nAlessandro\r\n "}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nissue delete button confusion\n\n--Description--\nIn 3.4.3, if your last issue history item is only one or two lines, you end up with the history item delete button (trashcan) directly above the whole-issue delete button (trash can plus \"delete\") so that it is really unclear whether the \"delete\" text button goes with the history item or the whole issue, leading to accidental issue deletion.\r\n\r\nWe should add a separator between the history list and the item action buttons.\r\n\r\nTo reproduce: \r\n\r\n* Add a one line Note to an issue and save it.\r\n* look at the delete buttons a the bottom right corner of the page.  \r\n\r\n!redmine_issue.png! \r\n\r\nIf we put some <hr>'s in the issue show template (patch attached) it becomes obvious that the \"delete\" text does not go with the history item, but with the whole issue.\r\n\r\n!after_patch.png!"}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when its subtask is open\n\n--Description--\nFrom Redmine 3.4, the parent issue can't be able to close when the subtask is not closed yet. If it is possible to control turn on/off by configuration or management console, it would make easier to manage the issue closing process.\r\n\r\nRedmine 3.4\u304b\u3089\u3001\u5b50\u30c1\u30b1\u30c3\u30c8\u304c\u307e\u3060\u30af\u30ed\u30fc\u30ba\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u89aa\u30c1\u30b1\u30c3\u30c8\u306f\u30af\u30ed\u30fc\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u30b3\u30f3\u30d5\u30a3\u30b0\u307e\u305f\u306f\u7ba1\u7406\u753b\u9762\u3067\u3001\u30aa\u30f3/\u30aa\u30d5\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u30c1\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30ba\u306e\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u304c\u5bb9\u6613\u306b\u306a\u308b\u3068\u8003\u3048\u307e\u3059\u3002"}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nGroup by parent project\n\n--Description--\nHow do I export a list which includes the parent project name, or group by the parent project?"}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nsubtasks field\n\n--Description--\nHello, is there the possibility to add \"subtasks\" field to build a query?"}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nMove subtasks section on issues show view into a separate partial\n\n--Description--\nSubject says it all.\r\n\r\nI'll attach a patch that does this."}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nDisplay caption of \"Group by column\" on the grouped issues list\n\n--Description--\nAfter specifying group option on issues list, It may be difficult to know what group option specified for list (e.g. group by \"start date\").\r\n\r\n!{width:600px}not-display-group-option.png!\r\n\r\nTherefore, I propose an improvement to display the caption of the group option in the list, as shown in the screenshot below.\r\n\r\n!{width:600px}display-group-option.png!"}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nAbility to add private comments from the issue bulk edit page\n\n--Description--\nIt is currently not possible to add private comments from the issue bulk edit page, is this by design? If not it would be nice if this was possible."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam."}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nTime Entry  :comments text_area\n\n--Description--\nWith Redmine 0.7.3 (MySQL), changing the text_field to a text_area in views/timelog/edit.rhtml for comments field was simple, .. but it is proving impossible to make a similar change with Redmine 4.2.1.stable.\r\n\r\nGiven that it is MUCH easier to edit the comment for a time entry with a text_area instead of a scrolling line on the screen - how could this be accomplished?"}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do.\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReduce database queries when rendering Custom fields box in the project settings tab\n\n--Description--\nCurrently, rendering Custom fields box in the project settings tab generates SQL statements as many as the number of available issue custom fields. The attached patch improves the code to generate only one SQL statement.\r\n\r\nBefore:\r\n<pre>\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 2], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 1], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 6], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 8], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 9], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n</pre>\r\n\r\nAfter:\r\n<pre>\r\n   (0.3ms)  SELECT \"custom_fields\".\"id\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (SELECT DISTIN\r\nCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) ORDER BY \"custom_fields\".\"position\" ASC  [[\"type\", \"Iss\r\nueCustomField\"]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:24\r\n</pre>\n\n-- Ticket2\n--Subject--\nIssue custom query: default query per instance, project and user\n\n--Description--\nIt would be nice to be able to create a default custom query, so when I get to issue list of a project, I don't need to select my preferable custom query from the list."}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReduce database queries when rendering Custom fields box in the project settings tab\n\n--Description--\nCurrently, rendering Custom fields box in the project settings tab generates SQL statements as many as the number of available issue custom fields. The attached patch improves the code to generate only one SQL statement.\r\n\r\nBefore:\r\n<pre>\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 2], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 1], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 6], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 8], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 9], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n</pre>\r\n\r\nAfter:\r\n<pre>\r\n   (0.3ms)  SELECT \"custom_fields\".\"id\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (SELECT DISTIN\r\nCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) ORDER BY \"custom_fields\".\"position\" ASC  [[\"type\", \"Iss\r\nueCustomField\"]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:24\r\n</pre>\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReduce database queries when rendering Custom fields box in the project settings tab\n\n--Description--\nCurrently, rendering Custom fields box in the project settings tab generates SQL statements as many as the number of available issue custom fields. The attached patch improves the code to generate only one SQL statement.\r\n\r\nBefore:\r\n<pre>\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 2], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 1], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 6], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 8], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 9], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n</pre>\r\n\r\nAfter:\r\n<pre>\r\n   (0.3ms)  SELECT \"custom_fields\".\"id\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (SELECT DISTIN\r\nCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) ORDER BY \"custom_fields\".\"position\" ASC  [[\"type\", \"Iss\r\nueCustomField\"]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:24\r\n</pre>\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReduce database queries when rendering Custom fields box in the project settings tab\n\n--Description--\nCurrently, rendering Custom fields box in the project settings tab generates SQL statements as many as the number of available issue custom fields. The attached patch improves the code to generate only one SQL statement.\r\n\r\nBefore:\r\n<pre>\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 2], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 1], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 6], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.2ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 8], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n  IssueCustomField Exists? (0.3ms)  SELECT 1 AS one FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (S\r\nELECT DISTINCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) AND \"custom_fields\".\"id\" = ? LIMIT ?  [[\"ty\r\npe\", \"IssueCustomField\"], [\"id\", 9], [\"LIMIT\", 1]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:26\r\n</pre>\r\n\r\nAfter:\r\n<pre>\r\n   (0.3ms)  SELECT \"custom_fields\".\"id\" FROM \"custom_fields\" WHERE \"custom_fields\".\"type\" = ? AND (is_for_all = 1 OR id IN (SELECT DISTIN\r\nCT cfp.custom_field_id FROM custom_fields_projects cfp WHERE cfp.project_id = 1)) ORDER BY \"custom_fields\".\"position\" ASC  [[\"type\", \"Iss\r\nueCustomField\"]]\r\n  \u21b3 app/views/projects/settings/_issues.html.erb:24\r\n</pre>\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nTranslation for field values\n\n--Description--\nIt would be very nice when the values of fields can be translated in different languages. For example:\r\n1st user has choose language english -> So he see the ticket status \"new\" to choose\r\n2nd user has choose language german -> So he see the ticket status \"neu\" to choose"}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title...\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nOption to choose the Issues owner on copy project \n\n--Description--\nWe use some projects like a template to start new client project.\r\nWith this idea, to start a new project we just copy one of the templates (generic project for the work to do on the client) with the correct name and start to customize this new project.\r\nThe problem is the owner of the issues, until Redmine 1.3 the owner of the issues of the template was copied to the new project, since 1.4 the owner is the one who copied the project.\r\nThis two options have their problems.\r\nMy suggestion is to have a combo in the copy project window , that the user can choose who will be the owner of the issues and etc... of the new project."}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\ndiffs for editions of issue/notes entries\n\n--Description--\nIt should be possible to see what changes had been done to the issue/note if someone edited it after it was already created.\r\nIf I edit issue description there is a diff entry generated. But if I edit the note itself there is no info that the note was edited."}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nPossibility to hide Issue History from a role\n\n--Description--\nHello,\r\n\r\nIn my company we have a Redmine shared with some partners, we are working on projects with them to implement some features on our products for specific customers, etc.\r\nWe discuss with our partners in the History of the issue by adding notes and they respond.\r\n\r\nActually we want to give access (in restricted view, no edit) to our customers their projects but we don't want customers to see the discussion with our partner, so disable the Issue history for them.\r\n\r\n\r\nIs it possible by any way to do it ?\r\nI think it would be great to implement this in the \"Roles and permissions\" as there is already an option for hiding Wiki History to a role like in the screenshot attached.\r\n\r\nThanks !"}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nShow previous comment version when editing an issue comment\n\n--Description--\nI am able to edit an issue comment. I want to give this right to the other users too. But currently there is nowhere a hint that the comment has been edited. The disadvantage is that a user can manipulate a conversation and nobody gehts knowledge of that.\r\n\r\nIt would be great if I could see how often a comment was edited and the user can have a look to the previous versions. If too hard, the small, but helpful alternative would be, to show the amount of edits and the author/time of the last edit."}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nDisplay Issue Edit form Position according to comments chronological order\n\n--Description--\nSo I've set up my Redmine to display issue comments in reverse chronological order.\r\n\r\nI have an issue with hundreds of comments. When I hit Edit, the form is displayed at the very bottom of the page.\r\n\r\nTo me, it would make more sense that the Edit page shows above the latest comment, so there is no need to Scroll all the way up to see what are the latest comments as I am adding new ones.\r\n\r\nSo:\r\n\r\n- \"Show comments in chronological order\": Edit form is at the very bottom of the page\r\n- \"Show comments in reverse chronological order\": Edit form is displayed above the top comment\r\n\r\nDoes this makes sense?"}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nShow button to create new version in issue form even if all versions are locked or closed\n\n--Description--\nIf all versions are closed or locked and there is no any version opened, there is no way to create new version when creating new issue or editing existing issue.\r\n\r\nWhen there are no opened versions the field \"Target version\" is not shown and the (+) button next to it is also not shown.\r\n\r\nI think that this is omission, because if there is at least one opened version, the (+) button for creating new version is shown."}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAdd \"Edit\" function to entries in \"Spent Time\" block appropriately\n\n--Description--\nIn previous versions of Redmine, the ability to edit time entries from the \"Spent Time\" section of My Page  was used by my team fairly frequently.  Can that ability be returned as appropriate when the user has proper permissions?  The workaround right now is to open the issue, open the spent time for that issue, THEN click the entry that needs to be edited.  "}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nKeep history for comment editions\n\n--Description--\nWhenever I edit a comment it is updated but as far as I can see there is no history for that. We need history for all changes in the redmine. At least for comment edits.\r\n\r\nProbably this was reported in #9441 but due to bad style, it was considered as spam."}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow \"Contributor\" role to manage related issues for revisions\n\n--Description--\nI misspell the issue ID in r21131 and I wanted to manually add the issue to the revision, but I don't have rights.\r\n\r\nI think it's useful for the \"Contributor\" role to have this permission."}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nDrag and drop upload files to issue via issue list screen\n\n--Description--\nAbility to upload files, when file is being dragged on issue when issues are listed in table on \r\n\r\n/projects/project-name/issues\r\n\r\nscreen.\r\n\r\nAbility to upload already exists on the issue create/edit screen.\r\n\r\nRedmine competitors like Monday.com have that feature which is very useful, in various project\r\nmanagement use-cases.\r\n\r\n!2021-10-21_08-59.png!"}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism.\n\n-- Ticket2\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do."}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nUse correct http status codes\n\n--Description--\n1/ redmine ignores accept headers and jquery dataType attribute\r\n\r\nThe Accept request-header field can be used to specify certain media types which are acceptable for the response.\r\n\r\nIf no Accept header field is present, then it is assumed that the client accepts all media types. If an Accept header field is present, and if the server cannot send a response which is acceptable according to the combined Accept field value, then the server SHOULD send a 406 (not acceptable) response.\r\n\r\nhttp://api.jquery.com/jQuery.ajax/\r\n\r\nThe type of data that you're expecting back from the server. If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string). The available types (and the result passed as the first argument to your success callback)\r\n\r\nexamples:\r\n<pre>\r\ncurl -v -H http://demo.redmine.org/issues.json\r\n-> 200 + json OK!\r\n\r\nbut\r\ncurl -v -H \"Accept: application/json\" http://demo.redmine.org/issues\r\n-> 500 no builder for format\r\n\r\nexpected (with patch)\r\n-> 200 + json output\r\n</pre>\r\n\r\nin some cases html is returned even if json was requested\r\n\r\n2/ 406 error raises exception\r\n<pre>\r\ncurl -v http://demo.redmine.org/issues.xxx\r\n-> 406 + exception ActionController::UnknownFormat\r\n\r\nexpected (with patch)\r\n-> 406 no exception\r\n</pre>\r\n\r\n3/ csrf protection - useful to avoid exceptions because of site-scanner bots\r\n<pre>\r\ncurl -v -H \"Accept: text/javascript\" http://demo.redmine.org/issues/new\r\n-> 422 + exception ActionController::InvalidCrossOriginRequest: Security warning: an embedded <script> tag on another site requested protected JavaScript.\r\n\r\nexpected\r\n-> 400 - no exception\r\n</pre>"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case."}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nBetter error message when no API format is recognised\n\n--Description--\nAt Planio sometimes see users trying to make API requests using the HTTP @Accept: application/json@ header but forgetting to add @.json@ at the end of the path. This currently leads to a @raise@ with a @500 Internal Server Error@.\r\n\r\nWe propose the following patch to correctly return a @406 Not Acceptable@ (this is the same HTTP status Rails uses when the passed @Accept@ HTTP header can not be served), log the error instead of @raise@-ing, and returning a helpful message in the HTTP response.\r\n\r\n\r\n<pre><code class=\"diff\">\r\ndiff --git a/lib/redmine/views/builders.rb b/lib/redmine/views/builders.rb\r\nindex 653c1bd6b..3c977df67 100644\r\n--- a/lib/redmine/views/builders.rb\r\n+++ b/lib/redmine/views/builders.rb\r\n@@ -30,7 +30,9 @@ module Redmine\r\n             when 'xml',  :xml  then Builders::Xml.new(request, response)\r\n             when 'json', :json then Builders::Json.new(request, response)\r\n             else\r\n-              raise \"No builder for format #{format}\"\r\n+              Rails.logger.error \"No builder for format #{format.inspect}\"\r\n+              response.status = 406\r\n+              return \"We couldn't handle your request, sorry. If you were trying to access the API, make sure to append .json or .xml to your request URL.\\n\"\r\n             end\r\n           if block_given?\r\n             yield(builder)\r\n</code></pre>"}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nsolar calendar\n\n--Description--\nHi dears\r\nI have been following the solar calendar for Redmine for a long time, but I didn't find any results,\r\nPeople who have done this before are from older versions of Redmine.\r\nIs it possible to create a plugin in this regard?"}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR\n\n-- Ticket2\n--Subject--\nERPmine Plugin Log Time Issue \n\n--Description--\nI have Installed ERPmine Plugin in our Redmine server. after log time entries not working.\r\n\r\nI have attached the log time error screenshot in attachment."}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nAs released on May 18, 2020 with the following \"announcement\":https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/:\r\n> Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.\r\n> \r\n> Both releases contain the following fixes:\r\n> \r\n> [CVE-2020-8162] Circumvention of file size limits in ActiveStorage\r\n> [CVE-2020-8164] Possible Strong Parameters Bypass in ActionPack\r\n> [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore\r\n> [CVE-2020-8166] Ability to forge per-form CSRF tokens given a global CSRF token\r\n> [CVE-2020-8167] CSRF Vulnerability in rails-ujs\r\n\r\nNote: the fix for CVE-2020-8167 might also result in a requirement to manually update the bundled @rails-ujs@ code.\r\n\r\nI'll set this issue to _private_ given the possible implications."}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nRuby 3.0 support\n\n--Description--\nRuby 3.0.0 has been released on 25 Dec 2020.\r\nhttps://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/\r\n"}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n\n\n-- Ticket2\n--Subject--\nCommunicate end of 4.x development\n\n--Description--\nGiven:\r\n* the present Redmine release cycle;\r\n* the \"Maintenance Policy for Ruby on Rails\":https://guides.rubyonrails.org/maintenance_policy.html and the Rails release cycle;\r\n* the _assumption_ that Redmine will not bring major Rails upgrades (5.x <notextile>-></notextile> 6.x) in a minor 4.x release;\r\n* that the Rails 6.1 port has already been committed to the trunk;\r\n\r\nI conclude that it has been decided to end the 4.x development after the recent 4.2 release.\r\n\r\nYet, I see that this is not clear for (close) community members who are referring to a (potential) 4.3 release (see eg. #30820#note-15, #32424#note-36, #32424#note-37).\r\n\r\nThis could be solved by addressing this subject in a news post.\r\n"}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"auth_source_id\" to GET request for Endpoint /users.:format\n\n--Description--\nIn our Redmine installation we have both local users and users from our LDAP service. It would be very helpful for our user management if we could filter for \"auth_source_id\" in a GET request for the endpoint /users.:format. \r\n\r\nExample:\r\nGET /users.json?limit=100&auth_source_id=1\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API: users: add support for status=*\n\n--Description--\nCurrently, [[Rest Users|the /users.:format REST API]] will default to status=1 (active), that is, when you attempt to search for a certain user (@redmine-admin.auth@ contains an API token of an administrator in the format @-u TOKEN:x@):\r\n\r\n<pre>\r\ncurl -H 'Content-Type: application/json' \\\r\n  -G -K redmine-admin.auth \\\r\n  'https://redmine.example.com/users.json?name=firstname.lastname'\r\n</pre>\r\n\r\nit will only return the requested account when the account is active. This means that I have to make two request for @status=1@ and @status=3@ to find a user when I don't know if the account is locked or not :(\r\n\t\r\nI would have suspected that @status=*@ would return all kinds of users, similarly to how it works for [[Rest Issues]] with @status_id=*@, but this is apparently not the case."}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd \"auth_source_id\" to GET request for Endpoint /users.:format\n\n--Description--\nIn our Redmine installation we have both local users and users from our LDAP service. It would be very helpful for our user management if we could filter for \"auth_source_id\" in a GET request for the endpoint /users.:format. \r\n\r\nExample:\r\nGET /users.json?limit=100&auth_source_id=1\r\n\r\n\n\n-- Ticket2\n--Subject--\nDisable API authentication with username and password when two-factor authentication is enabled for the user\n\n--Description--\nIn Redmine 4.2, two-factor authentication has been introduced.\r\n\r\nWhen two-factor authentication is enabled, it becomes difficult for an attacker to log in to Redmine even if he knows the username and password.\r\n\r\nHowever, API authentication is not covered by two-factor authentication. Currently, there are three methods of API authentication:\r\n\r\n1. send the user's API key via X-Redmine-API-Key header\r\n2. basic authentication with the user's API key ( username is the API key and password is a random string)\r\n3. basic authentication with user name and password\r\n\r\nIf you have two-factor authentication enabled, I think the third method will be problematic. This is because even though the web UI can prevent an attacker from logging in with an illegally obtained username and password, they can still use that username and password to access the data via the API.\r\n\r\nTo address this risk, I suggest disabling basic authentication with username and password for users who have two-factor authentication enabled.\r\n"}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nsupport bulk update state of version.\n\n--Description--\nsometime I need to update the state of many version. Could redmine support bulk update the state of version. \r\n\r\nfor example, I check some version and click one button to update the state of version."}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nSubscribe to a version / Watch a version\n\n--Description--\nIt would be nice if we could watch a version / subscribe to its changes.\r\n\r\nMeaning: If a new ticket is assigned to the version I watch, I will receive an email notification.\r\n\r\nWould make it easier to follow milestones in big OpenSource projects (like Redmine)."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nExpose repository version via REST API\n\n--Description--\nFor Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.\r\n\r\nOr is there a more convenient workaround than the one mentioned above?"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issue and issue journal\n\n--Description--\nWhen you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.\r\n\r\nI think it would be convenient to be able to copy a simple URL from the view.\r\n\r\n* URL of the issue to be copied\uff1a @https://<your redmine>/issues/1@\r\n* URL of the issue journal to be copied\uff1a @http://<your redmine>/issues/1#note-1@"}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nOutput test coverage report to the console\n\n--Description--\nRedmine has its own html formatter for SimpleCow. Would be great to see \"default generated report\":https://github.com/simplecov-ruby/simplecov-html/blob/3a30b47964e74ac810edc02629d420fa1cb1bc12/lib/simplecov-html.rb#L31 in console log for LOC coverage.\r\nIt's useful for collecting metrics in gitlab."}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nDownload all attachments in a journal\n\n--Description--\nBulk attachments download for issues has been implemented in Redmine 4.2.0 (#7056). However, sometimes I want to download all attachments of a journal, not an issue.\r\n\r\nFor example, suppose that an issue already has dozens of files. In the most recent update, your colleague has attached 5 more files. In this case, it is not uncommon to want to download only the latest 5 files.\r\n\r\nI believe that bulk downloading of files for each journal is a very useful feature.\r\n\r\n!{width: 766px; border: 1px solid grey;}.bulk-download-journal-attachments.png!"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nExport \"version\" information with custom fields\n\n--Description--\nHi,\r\nI created some custom fields for \"version\", and I would like to export in csv file. These custom fields are visible in the roadmap view, but I do not find export button. Is it possible to an export of version data?"}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd a link to (with count of) targeted but not-estimated issues to versions show view\n\n--Description--\nThis feature request/proposal is loosely extracted from #1671#note-7:\r\n\r\n_Artem Vasiliev wrote:_\r\n> [...]\r\n> \r\n> Version page: show not estimated (undone) issues count.\r\n> Count is a link that leads to relevant issues list.\r\n> [...]\r\n\r\nCutout from screenshot posted in #1671#note-8 by Artem Vasiliev:\r\n\r\n!{width: 50%;}.2021-08-22_13-12-09.png!\r\n\r\nI think this feature, albeit with some less prominent coloring, can really ease version scheduling/planning."}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nEqualize content order for diff views\n\n--Description--\n_This issue is currently based only on a inspection of the feature on redmine.org, but I believe it is persists on current Redmine versions and other SCM-backends than subversion too. Yet, this assumption should be checked..._\r\n\r\nCurrently, the \r\n* view for repo (changeset/revision) diffs provides diff content in _descending_ alphabetical order; while the\r\n* view for diff attachments provides diff content in _ascending_ alphabetical order.\r\n\r\nI believe it is better if both these views provide the diff content in the same order. IMHO the ascending alphabetical order would be preferred."}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n "}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n"}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination.\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!\n\n-- Ticket2\n--Subject--\nLazy load inline images\n\n--Description--\nSet *lazy: loading* for images and thumbnail images that Redmine will display as follows:\r\n@<img src=\"image.jpg\" alt=\"...\" loading=\"lazy\">@\r\n\r\nlazy loading document: https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\r\nIt can be displayed more quickly, for example, when a issue has many comments and many images are displayed."}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove performance of adding or removing members of a group\n\n--Description--\nIn situations where groups are applied to hundreds of projects (with or without subprojects, with or without inherit members), adding or removing a user from the group takes VERY LONG (more than 5-10 minutes).\r\n\r\nWould like to request:\r\n# Better querying optimization?   \r\n# Bulk edit capability   \r\n\r\n1. not sure how because I do not know how it queries. maybe something like consolidate multiple queries into fewer big queries?   \r\n2. When looking at the \"users\" tab under Groups, have a checkmark selection and \"Apply All\" button at the bottom for actions applied for multiple users at once. This way it can try to optimize the query for that?    \n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nConfigure display of completed versions by default\n\n--Description--\nis there any method to show completed version in roadmap by default ?\r\n"}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nMention user on issues and wiki pages using @user with autocomplete\n\n--Description--\nhttps://github.com/dwarburt/redmine-mention-plugin is ok, but I think would be awesome to have something like Github where it has an inline autocomplete for users etc. I think this should be built into the core plugins maybe?\r\n\r\nfor reference check this out https://github.com/tactivos/jquery-sew"}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries."}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nAdd a link to (with count of) targeted but not-estimated issues to versions show view\n\n--Description--\nThis feature request/proposal is loosely extracted from #1671#note-7:\r\n\r\n_Artem Vasiliev wrote:_\r\n> [...]\r\n> \r\n> Version page: show not estimated (undone) issues count.\r\n> Count is a link that leads to relevant issues list.\r\n> [...]\r\n\r\nCutout from screenshot posted in #1671#note-8 by Artem Vasiliev:\r\n\r\n!{width: 50%;}.2021-08-22_13-12-09.png!\r\n\r\nI think this feature, albeit with some less prominent coloring, can really ease version scheduling/planning."}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@.\n\n-- Ticket2\n--Subject--\nAdd links from roadmap and a specific version to files associated with a version\n\n--Description--\nI can see links from *Files* to *Versions* but not the other way around.\r\n\r\nI was thinking about automatic submission of packages from a build server as *Files*. They would be much more accessible if one could get to them by clicking from an *Issue* to *Version* to a file or download release files from the *Roadmap*."}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAbilty to configure subject of email\n\n--Description--\nIt would be nice to be able to configure the subject of an email.\r\n\r\nSequence now: [\"Project\" - \"Tracker\" #\"Number\"](\"Status\")\"Subject\"\r\n\r\n=> the whole sequence should be configurable, f.e.: [\"Project\" - \"Subject\"] #\"Number\"\r\n\r\n"}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAllow newlines and quote characters within mail body delimiters\n\n--Description--\nWhen processing incoming emails, there is the possibility to define body delimiters after which no further content should be read from the mail body.\r\n\r\nWhen defining long delimiters (e.g. commonly in @Setting.emails_header@), the delimiter may break into multiple lines in replies with (nested) quote characters at the beginning of lines.\r\n\r\nWith the attached patch, we extend the handling of \"normal\" delimiters (i.e. delimiters not defined as regular expressions) so that any space within the delimiter can also span multiple lines with optional quote characters at the front. This ensures that even delimiters broken over multiple lines in incoming mails will be recognized as such.\r\n\r\nThe patch is against current trunk (r20752) and can be applied with @patch -p1 < 0001-Allow-newlines-and-quote-characters-within-mail-body.patch@."}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nPDF rendering improvements when exporting an issue or a list of issues\n\n--Description--\nTwo PDF generation improvements:\r\n\r\n1. Currently, when rendering an issue PDF, macros are only expanded in the description, but not when rendering custom fields with fulltext formatting enabled. The patch changes the behaviour so that formatted full-width custom fields are rendered in the same way the description is rendered, fully interpreting macros. The behaviour for rendering normal-width custom fields is unchanged, probably it is better to leave it as is due to space constraints.\r\n2. Thumbnail macro output was not rendered properly (in the issue description and elsewhere) because the thumbnail image file could not be retrieved - the second patch extends @get_image_filename@ to check for thumbnail URLs and retrieve the proper file path in that case.\r\n\r\nBoth patches were initially developed for \"Planio\":https://plan.io/redmine-hosting ."}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nAuto guess file encoding when importing CSV file\n\n--Description--\nWhen importing a CSV file, file encoding is pre-selected according to general_csv_encoding in config/locales/*.yml. For example, \"CP932\" is selected by default when your language setting is Japanese.\r\n\r\nI often use CSV files with UTF-8 encoding, but it's a bother to re-select UTF-8 in the encoding drop-down every time.\r\n\r\nIt would be nice if Redmine auto guesses the file encoding when importing a CSV file. Redmine already auto guess file encoding when displaying attached files or repository contents using @Setting.repositories_encodings@.\r\n"}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nLazy load inline images\n\n--Description--\nSet *lazy: loading* for images and thumbnail images that Redmine will display as follows:\r\n@<img src=\"image.jpg\" alt=\"...\" loading=\"lazy\">@\r\n\r\nlazy loading document: https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\r\nIt can be displayed more quickly, for example, when a issue has many comments and many images are displayed."}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nReintroduce lazy loading of i18n files\n\n--Description--\nthis change restores a removed optimization https://www.redmine.org/issues/31384\r\n\r\nsee https://github.com/ruby-i18n/i18n/pull/612\r\n\r\n<pre>\r\n<code class=\"diff\">\r\ndiff --git a/lib/redmine/i18n.rb b/lib/redmine/i18n.rb\r\nindex b1066539f..13b84512f 100644\r\n--- a/lib/redmine/i18n.rb\r\n+++ b/lib/redmine/i18n.rb\r\n@@ -157,7 +157,7 @@ module Redmine\r\n \r\n     # Custom backend based on I18n::Backend::Simple with the following changes:\r\n     # * available_locales are determined by looking at translation file names\r\n-    class Backend < ::I18n::Backend::Simple\r\n+    class Backend < ::I18n::Backend::LazyLoadable\r\n       module Implementation\r\n         # Get available locales from the translations filenames\r\n         def available_locales\r\n</code>\r\n</pre>\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCopy issue without notification on old issue\n\n--Description--\nWhen I create a new issue by copying an old one, it doesn't change the old one, so I'd like to be able to disable notifications for that. Notification needs to stay as it is for the new one, of course.\n\n-- Ticket2\n--Subject--\nSubtasks inherit parent settings during copy\n\n--Description--\nHi,\r\noften I copy issues across versions. My issues have a lot of subtasks.\r\nIt would be useful if when I set, for example, version or status on  parent issue the same are set on the subtasks.\r\nWithout this I must modify them afterwards, and this in not always easy.\r\n\r\nRegards\r\nAlessandro\r\n "}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCopy issue without notification on old issue\n\n--Description--\nWhen I create a new issue by copying an old one, it doesn't change the old one, so I'd like to be able to disable notifications for that. Notification needs to stay as it is for the new one, of course.\n\n-- Ticket2\n--Subject--\nselect / deselect watchers with one click when I copy a single issue\n\n--Description--\nI have issues with more than 10 watchers and I want to copy the issues without watchers .\r\nIt would be better not to deselect the watchers one by one.\r\n\r\nI want to select / deselect watchers with one click when I copy a single issue\r\n\r\nAlso, I would like to have the option to add a new checkbox to copy watchers when I copy a single issue\r\n\r\n"}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nCopy issue without notification on old issue\n\n--Description--\nWhen I create a new issue by copying an old one, it doesn't change the old one, so I'd like to be able to disable notifications for that. Notification needs to stay as it is for the new one, of course.\n\n-- Ticket2\n--Subject--\nAdd configurable setting for copying attachments when copying an issue\n\n--Description--\nWhen copying an issue, you can select the following behaviors:\r\n\r\n1. whether to make a relation between source and destination issues\r\n2. whether to copy attachments\r\n\r\nAnd the former has a setting to set the default behavior (#18500). However, the latter does not.\r\n\r\nI think it should also be possible to configure the default behavior whether to copy attachments or not.\r\n\r\n!{width: 623px; border: 1px solid grey;}.setting-copy-attachments-on-copy.png!"}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials "}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nADFS Integrations \n\n--Description--\nI am not able to ADFS Integration on Redmine "}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?\n\n-- Ticket2\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR"}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtension rest api\n\n--Description--\nGood afternoon. \r\nIs it possible to add a full response to a request to create / update a task through api? Also, please add a mechanism to track changes in the list of custom fields, including the removal of a custom field. \r\nIf all this has already been implemented, then please send the information. \n\n-- Ticket2\n--Subject--\nArchive/close a project via API\n\n--Description--\nHi!\r\n\r\nIt would be great to archive or close a project via the API"}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtension rest api\n\n--Description--\nGood afternoon. \r\nIs it possible to add a full response to a request to create / update a task through api? Also, please add a mechanism to track changes in the list of custom fields, including the removal of a custom field. \r\nIf all this has already been implemented, then please send the information. \n\n-- Ticket2\n--Subject--\nREST API - Add full CRUD support for News\n\n--Description--\nTo date, as I see on [[Rest_News]], the current _News_ resource of the REST API is read-only, in prototype status.\r\n\r\nCould you add missing CRUD operations to this resource (create, update and delete) ?"}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtension rest api\n\n--Description--\nGood afternoon. \r\nIs it possible to add a full response to a request to create / update a task through api? Also, please add a mechanism to track changes in the list of custom fields, including the removal of a custom field. \r\nIf all this has already been implemented, then please send the information. \n\n-- Ticket2\n--Subject--\nAPI for editing/deleting notes in an issue\n\n--Description--\nHi\r\nCould you please create API for editing/deleting?\r\nI found this comment #25793#note-7 from Toshi MARUYAMA but I can't understand how to do that.\r\n\r\nThanks."}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtension rest api\n\n--Description--\nGood afternoon. \r\nIs it possible to add a full response to a request to create / update a task through api? Also, please add a mechanism to track changes in the list of custom fields, including the removal of a custom field. \r\nIf all this has already been implemented, then please send the information. \n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpdate Rails to 5.2.3\n\n--Description--\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/\r\n"}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nAs released on May 18, 2020 with the following \"announcement\":https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/:\r\n> Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.\r\n> \r\n> Both releases contain the following fixes:\r\n> \r\n> [CVE-2020-8162] Circumvention of file size limits in ActiveStorage\r\n> [CVE-2020-8164] Possible Strong Parameters Bypass in ActionPack\r\n> [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore\r\n> [CVE-2020-8166] Ability to forge per-form CSRF tokens given a global CSRF token\r\n> [CVE-2020-8167] CSRF Vulnerability in rails-ujs\r\n\r\nNote: the fix for CVE-2020-8167 might also result in a requirement to manually update the bundled @rails-ujs@ code.\r\n\r\nI'll set this issue to _private_ given the possible implications."}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpdate password hash function\n\n--Description--\nnan"}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nMigrate to Rails 7.2\n\n--Description--\nnan"}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nMove timelog between projects\n\n--Description--\nIt'll be nice to have an ability to move or delete your timelog entries between projects (as issue_move). For example\r\ncause of mistake.\r\n\r\n"}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nability to vary the units used to track time\n\n--Description--\nSome development methodologies suggest tracking time in points or even \"tomatoes\" (http://www.tecnicadelpomodoro.it).  It would be nice if Redmine had the ability to support these forms of time tracking."}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nImport spent time\n\n--Description--\nI think it should be great to have a way to import spent time, something similar to the way you can import issues.\r\n"}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAdanced relation handling for Issue Import\n\n--Description--\nAs in Ticket #25799 mentioned, there would be a little improvement for the ticket import via CSV useful: We want to use ticket imports for new projects, where we have our standard tickets. But we don\u00b4t need all of these tickets for every new project. When deleting some rows, the relational row-link to the parent ticket can change. So it would help to relate to a defined ID-Column or something, where the ID doesn\u00b4t change, even if rows are deleted inbetween."}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nChange unit of time for time tracking\n\n--Description--\nFor the moment, the time spent is measured in hours.\r\nI'd like to customize it, to be able to set \"seconds\" or \"days\" for example.\r\n\r\nCould it be possible to have a parameter in project or global Redmine configuration to set a unit of time tracking?"}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAllow project bulk edit of time entries\n\n--Description--\nThis issue follows #588#note-28 and adds the project field to bulk edit mode for time entries.\r\n\r\n- Activity field is updated on project change (actually, the entire form is replaced on project change)\r\n- Issue autocomplete is available only for bulk editing of time entries from the same project\r\n- Added the \"Clear\" checkbox to the issue field.\r\n- Moved the method \"bulk_edit_error_messages\" from issues_helper to application_helper because now it is used by both entities (issue and time entry)."}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAdd CSV Import for Time Entries\n\n--Description--\nh3. Preface\r\n\r\nThe imports controller was obviously built to be used for more than just issue imports. But since Redmine currently only supports issue imports, there are now some places, where assumptions about the issue import are hard-coded.\r\n\r\nThere are some plugins out there, which add other kinds of CSV imports to Redmine, but none of them seems to use the imports controller. I assume, it's because of the shortcomings mentioned above. I wanted to improve this situation, so I decided to build a time entry importer and - along the way - generalize the imports controller so that it's able to handle more than just issues.\r\n\r\nh3. Preparations\r\n\r\nThe first patch attached extracts the issue related view parts into partials which are determined by convention. They are all prefixed with the imported model name, i.e. @_issues@. \r\n\r\nThe issue related model parts are moved to the import model. Those are, e.g. the proper menu item, the authorization or the layout. Strictly speaking they should be located on the controller level, but I did not want to build sub classes of the imports controller for each and every kind of import.\r\n\r\nh3. Adding the time entry import\r\n\r\nThe second patch attached adds the time entry import. It's using the newly introduced extension points to fill in the blanks. To provide a way for the user to find the new import, I've added the @timelog/_sidebar@ partial, similar to the one for issues. This new sidebar partial is now used in the timelog views and it contains a link to the import.\r\n\r\n*Note:* within said partial, I've mis/re-used an i18n key @label_time_entries_visibility_all@ since it was providing the desired text in German and English. I did not want to introduce a new key based on the existing one, since that would have probably caused major merge problems. If desired, I may of course do that anyway.\r\n\r\nh3. Closing notes\r\n\r\nThe second patch may of course also become a plugin. The main point of this patch (series) was it, to allow plugins to reuse the existing plugin infrastructure. Without the first patch though, a plugin author would need copy most of the views and functionality of the imports class, which is undesirable (at least for the plugin author).\r\n\r\nThank you for considering these patches."}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nTime entry creation: preserve 'spent on' value when using 'Create and Continue'\n\n--Description--\nWhen creating a time entry and using the 'Create and continue' button to save and return to the form, the previously entered date is replaced with the current date while issue id and activity are preserved. This patch changes that so the previously entered date is preserved as well."}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAdd an optional, explicit Project#start_date and Project#due_date to projects\n\n--Description--\nThis can be useful for projects that don't use issues and/or versions but nevertheless have explicit start- and due-dates, and would be in line with an implementation of #15180."}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nMulti project csv import\n\n--Description--\nHi, now the issue import function is limited to a single project.\r\nWhy don't extend it to multiple project using his own column?"}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow to import time entries for issues in different projects\n\n--Description--\nAs it is now, the time entry import only allows to import time entries for a single, pre-selected project. Because time entries can only be imported for already existing issues (which in turn already belong to a project), by definition that pre-selected project is only relevant for time entries that are not attached to any issue.\r\n\r\nThe attached patch that was extracted from \"Planio\":https://plan.io/redmine-hosting allows to import time entries for issues across different projects. This is achieved simply by ignoring the user-selected project for those rows where an issue id is present, letting the existing logic in @TimeLogEntry#safe_attributes=@ determine the project id.\r\n\r\nThis is somewhat related to #25808.\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nNeed some patch to enable emails queue\n\n--Description--\nI'm using redmine on Windows platform (Bitnami), smtp is set on gmail. In case I'm creating a new, the email about it trying to send for more than 50 recipients, so I'm getting an error 452 4.5.3 - too many recipients. Is it possible to develop some patch to make the queue of emails, sending one by one and not by all pack in time? Many thanks!"}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nIgnore text email parts only stating that the email should be viewed as HTML\n\n--Description--\nAs already discussed in #30838 some emails now contain \"Your email client does not support HTML messages.\" in the text part and the interesting bits in the HTML part. This can be solved with the \"prefer HTML\" setting introduced in #30838.\r\n\r\nWe would like to propose a patch to still ignore email text parts stating \"Your email client does not support HTML messages.\" or similar with a blacklist. This way users preferring text parts and/or not aware of the new option do not need to see those parts in Redmine."}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks.\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nMigrate tickets from jira to redmine\n\n--Description--\nHi I am new to redmine and we have installed it for cost effective purpose. Can any one help me out with the list of steps that should be followed for migrating the tickets from Atlassian JIra to Redmine.\r\n\r\nYour help will be highly appreciated"}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nSupport for Git repositories with default branch \"main\"\n\n--Description--\nSince GitHub renamed the default branch name from \"master\" to \"main\" in 2020, more and more Git repositories in the world have the default branch of \u201cmain\u201d instead of \u201cmaster\u201d. However, Redmine does not recognize \"main\" branch as the default branch.\r\nhttps://github.com/github/renaming\r\n\r\nAfter applying the attached patch, \"main\" will be recognized as the default branch in addition to \"master\"."}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nrequest to add the ability to watch a given target version\n\n--Description--\n(using 1.0.4, soon to be 1.2.0)\r\nI would like to be able to watch a target version like I can an issue.\r\n\r\nAn important part of that is that I would to be able to easily see, and have timely notification of additions to or removals from a target version.\r\n\r\nThis would help prevent issues from being sneaked into a target version, and to help more people be aware of issues that get dropped from a target version.\r\n\r\nI guess the all signing all dancing version of this request is an ability to configure what is watched for. But I would be very happy with the ability to watch all activity associated with specified target versions.\r\n\r\nThanks"}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nCreate an 'Involve' mechanism to private issues\n\n--Description--\nAs requested by some people (#7414#note-16, #7412#note-3, and so on), sometimes we need to involve someone that cannot access an issue by \"default rules\". It can happen, for example, when a customer send a problem via email and we need to create a Redmine issue ourself, and give this customer access to the ticket.\r\n\r\nI asked Jean-Phillipe on #7412#note-2 to extend the visibility of an issue to observers, and some people liked it, but it was not done because observe mechanism was designed for notification purposes (I now I agree it is not good, that's why I'm creating this feature request).\r\n\r\nSo my request is:\r\nCreate a involve mechanism where some roles can add people in an issue, in a very similar way they add an observer, and the added users have access to the issue the were involved."}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd hook for bulk edit post-save state\n\n--Description--\nThere is a hook which gets invoked just after an individual issue gets updated, which allows for plugins to perform any post-save actions. There ought to be a similar hook for when a number of issues have been updated via the bulk-editing process. I've patched the core code to enable such a hook - `controller_issues_bulk_edit_after_save`.\r\n\r\nPatch available at https://github.com/7citylearning/redmine/commit/f88c6ca01e89246b5bcd62fa26cc651ee33ba212"}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSearch in issue assigned dropdown list\n\n--Description--\nMy team used redmine over one year\uff0cnow there are about 100 people in one project\u3002\r\n\r\nEverytime I create a issue \uff0cI must assgin to somebody, and the dropdown list is tooooooo long, really hard to find the people I want to assgin.\r\n\r\nsorry about my english,can  somebody tell me to do fix it? "}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue watchers to have groups in addition to users\n\n--Description--\nCurrently each user must be selected one by one to be added to a watcher list.\r\n\r\nWhat I propose is that this list also could contain groups.\r\n\r\nIn our business we have a large team and generally we would like to add ~10 watchers per issue. This would be a great time saver and avoid accidentally leaving out individuals."}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue Watcher view Issue when not in project group\n\n--Description--\nHi, \r\n\r\nis there a way to let watcher view issues that they are not assigned to the projekt. \r\n\r\nbest"}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nWatcher Changes tracked in History\n\n--Description--\nWould like Redmine to track when watchers are added or removed.\r\n\r\nCurrently does not track watcher changes and some users get confused as to what things they should have gotten email notifications on or not. Clear history will make clear whats going on.\r\nPrefer if adding/removing watchers does not refresh page (like how it currently works), but if watcher is added as a part of journal entries, it might have to."}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nOther recipients are not listed in To field even if Setting.bcc_recipients is false\n\n--Description--\nIn Redmine prior to 4.0, you can see to see all recipients of the notification email in the To field if \"Blind carbon copy recipients (bcc)\" setting (@Setting.bcc_recipients@) is false. With this feature, you can know who the notification was sent by the update.\r\n\r\nHowever, this feature is broken in Redmine 4.0. After upgrading to 4.0, only your email address is in the To field and other recipients are not listed there even if Setting.bcc_recipients is false.\r\n\r\nSuppose the following issue:\r\n\r\n* Assignee is foo@example.com\r\n* Watcher is bar@example.com\r\n\r\nWhen someone updates the issue, foo@example.com and bar@example.com should receive a notification. The To field in the header should be like the following if Setting.bcc_recipients is false:\r\n\r\n<pre>\r\nTo: foo@example.com, bar@example.com\r\n</pre>\r\n\r\nHowever, in Redmine 4.0, actual To field are like the following. Only the recipient of the message is listed:\r\n\r\n(The email that foo@example.com received)\r\n<pre>\r\nTo: foo@example.com\r\n</pre>\r\n\r\n(The email that bar@example.com received)\r\n<pre>\r\nTo: bar@example.com\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nRedmine assign a issue to more than one user\n\n--Description--\nh3. How to assign a issue to more than one user by checking the checkbox of any user I want?\r\n\r\nIs there any way to make it?\r\n\r\nThanks a lot."}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAllow to use watch_by filter in the global issues list\n\n--Description--\nIn #8160, we introduced the ability to filter by specific watchers (rather than just \"me\"). However, due to the permission check inside the @Query#watcher_values@ method, this capability was only available inside a project. In the global issues view, the filter still only offered \"me\".\r\n\r\nThe attached patch against current trunk (r20742) fixes this behavior to also offer all visible watchers on the global issues view. The patch is a git patch which can be applied with\r\n\r\n<pre>\r\npatch -p1 < 0001-Allow-to-use-watch_by-filter-in-the-global-issues-li.patch\r\n</pre>"}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nGet allowed Issue statuses by Issues API\n\n--Description--\nIf you want to edit issues using API, you need to know the issue statuses that you can available."}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nRequest for reconsideration of removal of 'View all issues' link\n\n--Description--\nYesterday I started doing some development work on Redmine again. The first thing that I stumbled upon was that the 'View all issues' link in the issues sidebar was removed in r18304. Although I see the merit of its removal with #30294, it really annoys me not having that link available (to such an extend that I quickly created a \"small plugin\":/plugins/redmine_add_all_issues_link_in_issues_sidebar to restore it on the issues show view).\r\nThe reason for this annoyance is that it was the only way to clear the current, not-saved query straight from the issues show view without first going back to the issues index view and then subsequently clicking on the clear button. With the link on issues show it is possible to go back to the default issues list without the need of an additional click on the clear button to clear the in-memory query. All the other (currently available) links that go back to the issues index view (project menu and query links on the index show view) retain the current query.\r\n\r\nSo, to make a long story short, I'd like to request a reconsideration of the decision for the removal of this link. This is also rooted in the fact that I think more (power) users will be/have been bitten by this change.\r\n\r\nFTR:\r\n* I have no problems with the move of the other links ('Summary' and 'Import') to the drop-down menu. This request is just about the 'View all issues' link.\r\n* I haven't looked into the changes of the 'Spent time' sidebar yet, but the points of the 'Issues sidebar' might also apply to those views.\r\n* If the removal decision is indeed reverted then it would be viable to subsequently also revert the addition of the clear query buttons added in #31640, as they would become obsolete if the 'View all issues' link is added back in.\r\n* I am also ok if my request will be declined. I'll then just keep using my plugin to restore the old situation...\r\n"}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nCall Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update) not only in case of a fixed issue with 'fixes' keyword\n\n--Description--\nIn\r\n\r\napp/models/changeset.rb\r\n\r\nthere is a hook _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ which is called only if an issue was marked as fixed ('fixes' keyword) within a commit message.\r\n\r\nSo, there is no possibility to run an own adapter or do other things when an issue just changed within a commit message with 'refs' keyword.\r\n\r\nMoving the lines\r\n\r\n<pre>\r\n    Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n</pre>\r\nin the \r\n<pre>\r\ndef fix_issue(issue, action)\r\n</pre>\r\nfunction after the fix_issue() and log_time() call\r\n\r\n<pre>\r\n          unless repository.created_on && committed_on && committed_on < repository.created_on\r\n            fix_issue(issue, action) if fix_keywords.include?(action)\r\n            log_time(issue, hours) if hours && Setting.commit_logtime_enabled?\r\n            Redmine::Hook.call_hook(:model_changeset_scan_commit_for_issue_ids_pre_issue_update,\r\n                            {:changeset => self, :issue => issue, :action => action})\r\n          end\r\n</pre>\r\n\r\nwill invoke the _:model_changeset_scan_commit_for_issue_ids_pre_issue_update_ hook also if there was just the 'refs' keyword used.\r\n\r\nWell, is there a reason to call this hook only in case an issue was changed to 'fixed'?"}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nLazy load inline images\n\n--Description--\nSet *lazy: loading* for images and thumbnail images that Redmine will display as follows:\r\n@<img src=\"image.jpg\" alt=\"...\" loading=\"lazy\">@\r\n\r\nlazy loading document: https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\r\nIt can be displayed more quickly, for example, when a issue has many comments and many images are displayed."}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do."}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help.\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLoad and use bash/system ENV variables in config YML files \n\n--Description--\nIn some scenarios, where Redmine is automatically deployed, \r\nit would be of good use to read EXPORT or ENV variables and use them in config .yml files like database.yml\r\n\r\nFor example like elsastic\r\nhttps://www.elastic.co/guide/en/beats/winlogbeat/current/using-environ-vars.html\r\n\r\n<pre>\r\nexport DB-NAME = \"something\" \r\n\r\n</pre>\r\nand in yml file \r\n<pre>\r\nproduction:\r\n  database: ${DB-NAME}\r\n\r\n</pre>\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLoad and use bash/system ENV variables in config YML files \n\n--Description--\nIn some scenarios, where Redmine is automatically deployed, \r\nit would be of good use to read EXPORT or ENV variables and use them in config .yml files like database.yml\r\n\r\nFor example like elsastic\r\nhttps://www.elastic.co/guide/en/beats/winlogbeat/current/using-environ-vars.html\r\n\r\n<pre>\r\nexport DB-NAME = \"something\" \r\n\r\n</pre>\r\nand in yml file \r\n<pre>\r\nproduction:\r\n  database: ${DB-NAME}\r\n\r\n</pre>\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nLoad and use bash/system ENV variables in config YML files \n\n--Description--\nIn some scenarios, where Redmine is automatically deployed, \r\nit would be of good use to read EXPORT or ENV variables and use them in config .yml files like database.yml\r\n\r\nFor example like elsastic\r\nhttps://www.elastic.co/guide/en/beats/winlogbeat/current/using-environ-vars.html\r\n\r\n<pre>\r\nexport DB-NAME = \"something\" \r\n\r\n</pre>\r\nand in yml file \r\n<pre>\r\nproduction:\r\n  database: ${DB-NAME}\r\n\r\n</pre>\n\n-- Ticket2\n--Subject--\nExtend config.ru to support sub-uri ootb and cleanup all wiki pages\n\n--Description--\nHi folk,\r\n\r\nAlmost all of the solutions on the wiki pages are outdated and either never worked or don't work anymore with version 4.x as discussed several times. From my point of view, the only sensible way is to extend config.ru. This approach works as expected. Unfortunately, I have wasted days over past few years at this point trying to get Redmine working under a sub-URI. This even led to me losing almost all of my beautiful hair. And just as ugly as it makes me look now, is trying through all the possibilities enumerated over several wiki pages.\r\n\r\nMy suggestion: The config.ru should therefore look like this out-of-the-box:\r\n\r\n<pre>\r\n# This file is used by Rack-based servers to start the application.\r\n\r\nrequire ::File.expand_path('../config/environment', __FILE__)\r\nmap ENV['REDMINE_RELATIVE_URL_ROOT'] || '/' do\r\n    run RedmineApp::Application\r\nend\r\n</pre>\r\n\r\nThis can then be used to configure the Docker image by one variable, for example if you want to update a legacy system and can't reassign the uri because of backwards compatibility.\r\n\r\nThe config.ru would be usable unchanged with the default configuration and optionally for people who want or need to run redmine under a sub-URI.\r\n\r\nIs there anything against changing the delivered config.ru in the codebase as mentioned above?\r\n\r\nTHX\r\nTiemo"}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nExpose Redmine server settings via REST API\n\n--Description--\nI have some automated tests for Redmine Java API. The unit-tests do not  require any external systems, while the integration ones use a pre-configured Redmine instance (actually, several instances - 1.2.2, 1.3.0, ...).\r\n\r\nI could modify the integration tests to start a Redmine server, \r\nideally - provide a pre-configured test database instance,\r\nthen set some settings like \"authentication required\" and run tests with it.\r\nthen turn this setting OFF and run the tests again.\r\n\r\nThis would eliminate the need to have Redmine running and accessible for everyone running integration tests, plus cover more execution paths.\r\n\r\nSo, is it possible to support at least some settings manipulation using REST API?\r\n\r\nI can list the ones most important for me at this moment:\r\n* \"authentication required\"\r\n* provide database settings on Redmine startup (ideally would be if Redmine supported in-memory database like Atlassian Jira)\r\n"}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAutomated Plugin installer\n\n--Description--\nIt would be great if Redmine could support Plugins installation in a \"Wordpress\" manner, where user can browse a plugin from a repository (or simply uploads ZIP file) and Redmine does the rest.\r\n"}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n"}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nDisable API authentication with username and password when two-factor authentication is enabled for the user\n\n--Description--\nIn Redmine 4.2, two-factor authentication has been introduced.\r\n\r\nWhen two-factor authentication is enabled, it becomes difficult for an attacker to log in to Redmine even if he knows the username and password.\r\n\r\nHowever, API authentication is not covered by two-factor authentication. Currently, there are three methods of API authentication:\r\n\r\n1. send the user's API key via X-Redmine-API-Key header\r\n2. basic authentication with the user's API key ( username is the API key and password is a random string)\r\n3. basic authentication with user name and password\r\n\r\nIf you have two-factor authentication enabled, I think the third method will be problematic. This is because even though the web UI can prevent an attacker from logging in with an illegally obtained username and password, they can still use that username and password to access the data via the API.\r\n\r\nTo address this risk, I suggest disabling basic authentication with username and password for users who have two-factor authentication enabled.\r\n"}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nDefine Workflow per Project\n\n--Description--\nWe are using Redmine for our project management with Agile Plugin.\r\n\r\nI am unable to define workflows for multiple projects. I have created status and the workflow is also defined. \r\n\r\nLet's say for Project1 the workflow is \"InDiscussion->InDevelopment->InQA->ReadyForDeployment\"\r\n\r\nI would like to create a workflow for Project2 with workflow \"Start->Approve->Done\"\r\n\r\nLet me know how to achieve this.\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable\r\n  Ruby version                   2.6.5-p114 (2019-10-01) [x86_64-linux]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\nSCM:\r\n  Subversion                     1.7.14\r\n  Git                            1.8.3.1\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_agile                  1.5.4"}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nAPI json/xml responses based on Accept header\n\n--Description--\nThis is a follow-up to #34766 and #26709.\r\n\r\nCurrently, Redmine API requires to append @xml@ or @json@ to URL in order to respond with the desired format and completely ignore the @Accept@ header. Pavel Rosick\u00fd wrote more details about this in #26709.\r\n\r\nIn order to be more consistent with how Rails works by default (and other frameworks as well), we should accept the @Accept@ header as alternative to @json@/@xml@ format in URL.\r\n\r\n\r\n"}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAsk more specific confirmation questions when closing/reopening/archiving projects\n\n--Description--\nThe attached patch improves the usability when closing / re-opening / archiving projects by replacing the generic (and not really helpful) confirmation \"Are you sure\" with a specific question.\r\n\r\nWe also remove the redundant confirmation when deleting a project from @admin/projects@. When deleting a project, we will always explicitly ask for a confirmation by requiring the user to enter the project identifier using a dedicated confirmation page.\r\n\r\nThe patch should apply on current trunk @ r21522.\n\n-- Ticket2\n--Subject--\nArchive/close a project via API\n\n--Description--\nHi!\r\n\r\nIt would be great to archive or close a project via the API"}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAsk more specific confirmation questions when closing/reopening/archiving projects\n\n--Description--\nThe attached patch improves the usability when closing / re-opening / archiving projects by replacing the generic (and not really helpful) confirmation \"Are you sure\" with a specific question.\r\n\r\nWe also remove the redundant confirmation when deleting a project from @admin/projects@. When deleting a project, we will always explicitly ask for a confirmation by requiring the user to enter the project identifier using a dedicated confirmation page.\r\n\r\nThe patch should apply on current trunk @ r21522.\n\n-- Ticket2\n--Subject--\nQuery system for Projects page\n\n--Description--\nThe attached patch adds the existing query system (from issues and time entries) to the projects page, including the possibility to save custom queries and export to csv.\r\n\r\nAvailable columns: \r\n* Name (default column)\r\n* Status\r\n* Short Description (default column)\r\n* Identifier (default column)\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nAvailable filters:\r\n* Status with active, closed and archived\r\n* Name\r\n* Description\r\n* Subproject of\r\n* Public\r\n* Created\r\n* Project custom fields\r\n\r\nBoard view (default):\r\n!board_view.png!\r\n\r\nList view:\r\n!list_view.png!\r\n\r\nSome mentions:\r\n- I chose to open a new ticket because the patch implements multiple related issues\r\n- More filters and columns can be added, but I wanted to keep this patch as small as possible. \r\n\r\nAny feedback is welcome."}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAsk more specific confirmation questions when closing/reopening/archiving projects\n\n--Description--\nThe attached patch improves the usability when closing / re-opening / archiving projects by replacing the generic (and not really helpful) confirmation \"Are you sure\" with a specific question.\r\n\r\nWe also remove the redundant confirmation when deleting a project from @admin/projects@. When deleting a project, we will always explicitly ask for a confirmation by requiring the user to enter the project identifier using a dedicated confirmation page.\r\n\r\nThe patch should apply on current trunk @ r21522.\n\n-- Ticket2\n--Subject--\nPrevent close project\n\n--Description--\nPlease add feature to prevent closing project with opened tasks\r\n"}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAsk more specific confirmation questions when closing/reopening/archiving projects\n\n--Description--\nThe attached patch improves the usability when closing / re-opening / archiving projects by replacing the generic (and not really helpful) confirmation \"Are you sure\" with a specific question.\r\n\r\nWe also remove the redundant confirmation when deleting a project from @admin/projects@. When deleting a project, we will always explicitly ask for a confirmation by requiring the user to enter the project identifier using a dedicated confirmation page.\r\n\r\nThe patch should apply on current trunk @ r21522.\n\n-- Ticket2\n--Subject--\nAdd Copy and Archive to the project context menu\n\n--Description--\nCurrently, the context menu for a project has four items, \"New subject\", \"Close\", \"Delete\", and \"Settings\". I suggest adding two more buttons, \"Copy\" and \"Archive\". This will allow you to perform most operations on a project without having to go to the Administration page.\r\n\r\n* The copy project feature is frequently used The copy feature is a frequently used feature in teams that create new projects by copying template projects. Adding \"Copy\" to the context menu can reduce steps to complete the work\r\n* Archiving a project is preferable to deleting a project because deleted projects cannot be undone. Therefore, the preferable \"Archive\" should be in the context menu if \"Delete\" is in there\r\n* I think adding these two items will not have any negative impact on UI/UX because they are usually hidden in the context menu. In addition, non-admin users cannot see the items even if they open the context menu\r\n\r\n!{width: 226px; border: 1px solid grey;}.add-copy-and-archive.png!"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAsk more specific confirmation questions when closing/reopening/archiving projects\n\n--Description--\nThe attached patch improves the usability when closing / re-opening / archiving projects by replacing the generic (and not really helpful) confirmation \"Are you sure\" with a specific question.\r\n\r\nWe also remove the redundant confirmation when deleting a project from @admin/projects@. When deleting a project, we will always explicitly ask for a confirmation by requiring the user to enter the project identifier using a dedicated confirmation page.\r\n\r\nThe patch should apply on current trunk @ r21522.\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove wording on password change form\n\n--Description--\nAs changing new password, I would like to change as below for better understanding. Just change password and misunderstanding the form.\r\n\r\n*Password -> Old Password*\r\nNew Password\r\nConfirmation\r\n\n\n-- Ticket2\n--Subject--\nUpdate password hash function\n\n--Description--\nnan"}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nUpdate Rails to 5.2.3\n\n--Description--\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/\r\n"}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nAs released on May 18, 2020 with the following \"announcement\":https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/:\r\n> Hi everyone! Rails 5.2.4.3 and 6.0.3.1 have been released! These releases contain important security fixes, so please upgrade when you can.\r\n> \r\n> Both releases contain the following fixes:\r\n> \r\n> [CVE-2020-8162] Circumvention of file size limits in ActiveStorage\r\n> [CVE-2020-8164] Possible Strong Parameters Bypass in ActionPack\r\n> [CVE-2020-8165] Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore\r\n> [CVE-2020-8166] Ability to forge per-form CSRF tokens given a global CSRF token\r\n> [CVE-2020-8167] CSRF Vulnerability in rails-ujs\r\n\r\nNote: the fix for CVE-2020-8167 might also result in a requirement to manually update the bundled @rails-ujs@ code.\r\n\r\nI'll set this issue to _private_ given the possible implications."}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nRuby 3.0 support\n\n--Description--\nRuby 3.0.0 has been released on 25 Dec 2020.\r\nhttps://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/\r\n"}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nCommunicate end of 4.x development\n\n--Description--\nGiven:\r\n* the present Redmine release cycle;\r\n* the \"Maintenance Policy for Ruby on Rails\":https://guides.rubyonrails.org/maintenance_policy.html and the Rails release cycle;\r\n* the _assumption_ that Redmine will not bring major Rails upgrades (5.x <notextile>-></notextile> 6.x) in a minor 4.x release;\r\n* that the Rails 6.1 port has already been committed to the trunk;\r\n\r\nI conclude that it has been decided to end the 4.x development after the recent 4.2 release.\r\n\r\nYet, I see that this is not clear for (close) community members who are referring to a (potential) 4.3 release (see eg. #30820#note-15, #32424#note-36, #32424#note-37).\r\n\r\nThis could be solved by addressing this subject in a news post.\r\n"}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nRuby 3.1 support\n\n--Description--\nnet/* libraries were gemified, see https://bugs.ruby-lang.org/issues/5481\r\n\r\n<pre><code class=\"diff\">\r\ndiff --git a/Gemfile b/Gemfile\r\nindex 949fe86d2..624d40216 100644\r\n--- a/Gemfile\r\n+++ b/Gemfile\r\n@@ -26,6 +26,12 @@ gem 'tzinfo-data', platforms: [:mingw, :x64_mingw, :mswin]\r\n gem 'rotp'\r\n gem 'rqrcode'\r\n \r\n+unless Gem.ruby_version < Gem::Version.new('3.1.0')\r\n+  gem 'net-smtp', '~> 0.3.0'\r\n+  gem 'net-imap', '~> 0.2.2'\r\n+  gem 'net-pop', '~> 0.1.1'\r\n+end\r\n+\r\n # Optional gem for LDAP authentication\r\n group :ldap do\r\n   gem 'net-ldap', '~> 0.17.0'\r\n</code></pre>"}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nMigrate to Rails 7.2\n\n--Description--\nnan"}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released\n\n-- Ticket2\n--Subject--\nUpdate Rails to 7\n\n--Description--\nnan"}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nDistinguish closed subprojects on the project overview\n\n--Description--\nI closed a subproject, however, Project Overview father still appears without reference to their status or ability to filter it.\r\nAgradeceria option for not listed closed subprojects."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud"}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nHide projects user is only admin but not has assigned any role in the project overview (as it is already done in the project dropdown)\n\n--Description--\nDear developers,\r\n\r\ncurrently redmine lists all projects on the projects page if a user is admin of a redmine instance.\r\n\r\nI think it might be more sensible to hide the projects the user is not a regular team member of.\r\nWe use Redmine in our organisation and have currenty 90 projects.\r\nThere are several admins assigned via the LDAP attribute and it works quite fine.\r\n\r\nThough, if the number of projects increases, the project overview page renders quite useless because you will effectively be unable to find your projects.\r\nOk, the own projects are highlighted by a little yellow star. But I think it might be quite helpful to hide the projects I have administrative access to per default and show these on demand.\r\n\r\nMaybe I can assist you on implementing this behaviour but I need a advise where to start from.\r\nOrganisations and companies with a large user base and an elaborated project structure might be very grateful.\r\n\r\nThank a lot in advance!\r\n\r\nJ. Stein"}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nUpdating project status, or archiving with REST\n\n--Description--\nHi Redminers,\r\n\r\nI've searched and checked google, the forums and documentation, but cannot find any way to close projects while using the REST api.\r\nOur redmine instance is synced with another platform, and is updated using the REST api. But now projects are closing in the other platform and stay open in redmine. This is resolving in quite some clutter at the moment.\r\n\r\nI would like to do a patch request with status=0 for example.\r\n\r\nIs this a bug, existing but undocumented or a new feature?\r\n\r\nThanks a lot in advance!\r\n\r\n( if it's currently not possible, could someone help me creating a patch for this? )\r\n\r\n- Jonas\r\n"}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?\n\n-- Ticket2\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!"}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdmin status messages on every page\n\n--Description--\nDue to the current situation, I wish there was a way to display a message at the top of every page you visit, so that everyone knows that we are currently having a technical problem ;)\n\n-- Ticket2\n--Subject--\nShow warning when an issue cannot be closed because of blocking issue relations\n\n--Description--\nSame as/inspired by #31589, but for the case that issues cannot be closed as a result of blocking issues."}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdmin status messages on every page\n\n--Description--\nDue to the current situation, I wish there was a way to display a message at the top of every page you visit, so that everyone knows that we are currently having a technical problem ;)\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdmin status messages on every page\n\n--Description--\nDue to the current situation, I wish there was a way to display a message at the top of every page you visit, so that everyone knows that we are currently having a technical problem ;)\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
