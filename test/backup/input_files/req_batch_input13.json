{"custom_id": "1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure."}]}}
{"custom_id": "5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nStoring credentials in the browser\n\n--Description--\nThe Redmine tool is not properly defining the parameters of the login form, delegating the decision to store credentials in the user's browser to the user.\r\n\r\nThis possibility, while widely used for user convenience, poses a considerable risk of allowing an attacker to steal the session and credentials of any user who stores such information in the browser of a machine compromised by an attacker or credential-stealing malware.\r\n\r\nSolution:\r\n\r\nIt should be possible to set a control from the redmine configuration to always request the username and password when logging in.\r\n\r\nThe code that is usually used to do this is to include the following line of code in the HTML file:\r\n<INPUT TYPE=\"password\" AUTOCOMPLETE=\"off\">\r\n"}]}}
{"custom_id": "6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nExport spent time report as PDF\n\n--Description--\nI guess this plugin doesnt work for redmine 5.x.\r\nI tried but couldn't start redmine with this plugin.\r\n"}]}}
{"custom_id": "8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n"}]}}
{"custom_id": "16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nGenerate snake-case file name by redmine_plugin_migration\n\n--Description--\nredmine_plugin_migration must generate snake-case file name when specifying migration name as camel-case due to the consistency of the behavior, but it generates camel-case file name.\r\n\r\nSo we have created the patch for fixing redmine_plugin_migration behavior.\r\n\r\nFYI: There was a similar issue that https://www.redmine.org/issues/28668"}]}}
{"custom_id": "19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nrbpdf Update\n\n--Description--\nrbpdf has been released today to 1.21.2\r\nI can be updated in Redmine's Gemfile.\r\n\r\nthanks\r\n"}]}}
{"custom_id": "20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nAdd support for GitHub\n\n--Description--\nGitHub is the dominant player in version control, and it would be very appealing to new adopters to use Redmine."}]}}
{"custom_id": "21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nLocalize test email text\n\n--Description--\nThere are 2 email views\r\n\r\n+ test_email.html.erb\r\n+ test_email.text.erb\r\n\r\nhaving no localized text:\r\n\r\n\r\n<pre><code class=\"ruby\">\r\n# test_email.html.erb\r\n<p>This is a test email sent by Redmine.<br />\r\nRedmine URL: <%= link_to @url, @url %></p>\r\n\r\n# test_email.text.erb\r\nThis is a test email sent by Redmine.\r\nRedmine URL: <%= @url %>\r\n</code></pre>\r\n\r\nSupporting a translated text also for test email is only little effort but would improve consistency and user experience.\r\n"}]}}
{"custom_id": "24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nUpgrade redmine 3.3.0 (windows) to latest\n\n--Description--\nHi,\r\nI have a old redmine 3.3.0 windows version, and i want to upgrade it to the latest version, what is the best way? I have a Ubuntu server created to do this upgrade. \r\n\r\nthanks and regards."}]}}
{"custom_id": "25", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "28", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nIssue's visibility for the watchers\n\n--Description--\nWould you please consider the feature of extending the issue's visibility for the role to this issue's watchers?\r\nThis is a moderate choice for administrator between the none-private and assign & author.\r\nMaybe there's influence for current role's authorization. You guys please think about it. Thank you so much.\r\n"}]}}
{"custom_id": "29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "31", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nAdd links to Users, Projects and Versions (at least) in timelog report\n\n--Description--\nThis issue is extracted from 24568#note-8.\r\n\r\n*Before:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report_before.png!\r\n\r\n*After:*\r\n!{width: 60%; border: 1px solid grey;}timelog_report.png!\r\n\r\n In this way, the locked users will have the grey out style and can be differentiated by the active users.\r\n"}]}}
{"custom_id": "32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nAdd notification reason to the email instead of the default static email footer\n\n--Description--\nThe default email footer setting is:\r\n> You have received this notification because you have either subscribed to it, or are involved in it.\r\n> To change your notification preferences, please click here: http://hostname/my/account\r\nThis setting can be changed from Settings -> Notifications -> Email footer.\r\n\r\nThis approach have several issues:\r\n* the text can be removed by an admin\r\n* the text is not translatable\r\n* the text is too generic and the user cannot understand why he received that notification\r\n\r\nMy proposal is to replace this text with the real reason of why the user received the notification. In this phase, I propose the following reasons with the according translations:\r\n\r\n| *Reason* | *Message* | *Details* |\r\n| @INVOLVED@ | You have received this notification because you are involved in. | user is either author, assignee or previous assignee |\r\n| @MENTIONED@ | You have received this notification because you have been mentioned in. | user in mentioned in that event |\r\n| @SUBSCRIBED@ | You have received this notification because you have subscribed to it. | user is subscribed to that event |\r\n| @WATCHER@ | You have received this notification because you are watching it. | user is a watcher |\r\n| @ADMIN@ | You have received this security notification because you are an administrator. | user is an admin and he received a security notification |\r\n\r\nIn the future, we can add even a more granular reason for the involved reason: author, assignee or previous assignee.\r\n\r\nAlso, I propose to always display the text \"To change your notification preferences, please click here: %{link to my account}.\"\r\n\r\nBelow is an example from a security notification with both messages (first message is the new one; second message is the old one).\r\n!{border: 1px solid grey; width: 30%}sn.png!"}]}}
{"custom_id": "34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. \n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "35", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "36", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nNew notfication settings value in role setting \n\n--Description--\nit's possible to implement a fourth value for notifications type in role setting -> issue visibility -> \"issue created by or assigned to the user or user is watcher\" ? \r\n\r\nIn a project / issue in which the user is not the creator or assignee, he cannot receive updates via e-mail although he is an watcher. This fourth value could change this behaviour?\r\n\r\nThanks and best regards, \r\nHeiko\r\n\r\n"}]}}
{"custom_id": "38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "39", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nShow warning and the reason when the issue cannot be closed because of open subtasks or blocking open issue(s)\n\n--Description--\nYou cannot close an issue if it has open subtasks (#10989).\r\n\r\nThis rule is not obvious and difficult to know for users. In my company, \"why I cannot close this issue?\" is an FAQ. When they come across the behavior, they spend a long time to check workflows. Of course, there is no problem with workflows. It is really hard for ordinary users to find the cause of the behavior.\r\n\r\nI think it will be a great help to prevent confusing users if a warning icon with a tooltip is displayed on the edit issue form like the following screenshot.\r\n\r\n!{border: 1px solid #ccc; width: 562px;}.warning-unable-to-close-parent@2x.png!"}]}}
{"custom_id": "40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nAdd notification reason to the email instead of the default static email footer\n\n--Description--\nThe default email footer setting is:\r\n> You have received this notification because you have either subscribed to it, or are involved in it.\r\n> To change your notification preferences, please click here: http://hostname/my/account\r\nThis setting can be changed from Settings -> Notifications -> Email footer.\r\n\r\nThis approach have several issues:\r\n* the text can be removed by an admin\r\n* the text is not translatable\r\n* the text is too generic and the user cannot understand why he received that notification\r\n\r\nMy proposal is to replace this text with the real reason of why the user received the notification. In this phase, I propose the following reasons with the according translations:\r\n\r\n| *Reason* | *Message* | *Details* |\r\n| @INVOLVED@ | You have received this notification because you are involved in. | user is either author, assignee or previous assignee |\r\n| @MENTIONED@ | You have received this notification because you have been mentioned in. | user in mentioned in that event |\r\n| @SUBSCRIBED@ | You have received this notification because you have subscribed to it. | user is subscribed to that event |\r\n| @WATCHER@ | You have received this notification because you are watching it. | user is a watcher |\r\n| @ADMIN@ | You have received this security notification because you are an administrator. | user is an admin and he received a security notification |\r\n\r\nIn the future, we can add even a more granular reason for the involved reason: author, assignee or previous assignee.\r\n\r\nAlso, I propose to always display the text \"To change your notification preferences, please click here: %{link to my account}.\"\r\n\r\nBelow is an example from a security notification with both messages (first message is the new one; second message is the old one).\r\n!{border: 1px solid grey; width: 30%}sn.png!"}]}}
{"custom_id": "41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd tooltips for clarifying non-notifiable user mentions\n\n--Description--\nCurrently, when a user without permission to view a particular issue is mentioned, they do not receive a notification email. However, visually, the mention link appears identical to others, which can be misleading as there's no indication that no email was sent.\r\n\r\nIn issue ##39528, I proposed changing the background color of mention links for such users to make it clear they are non-notifiable. However, I believe that visual change alone may not sufficiently convey the intent to users. Therefore, I suggest using tooltips to display a message clarifying the status of the mention.\r\nYet, since tooltips are only used for displaying title attributes right now, expanding their use might require some discussion, which is why I have created a separate ticket for this matter.\n\n-- Ticket2\n--Subject--\nChange mention link color for users without access to view issues\n\n--Description--\nI propose a feature enhancement for better visibility regarding user permissions and mention notifications. Currently, when a user who does not have the permission to view a particular issue is mentioned, they do not receive a mention notification email. However, this is not visually apparent since the mention link looks identical to others, potentially leading to confusion over whether a notification was sent.\r\n\r\nTo improve clarity, I suggest altering the background color of mention links for users who cannot view the issue. This visual cue would instantly inform others that the mentioned individual may not be notified due to permission restrictions. "}]}}
{"custom_id": "43", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\nCustom Field - Version - Combo list to be grouped by projects..\n\n--Description--\nCurrently the Versions are not grouped according to the projects version inherited.\r\nCan you please show  this combo as grouped.\r\n\r\nThank You.\r\n"}]}}
{"custom_id": "44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\nTracker based field ordering.\n\n--Description--\nCurrently you can define only order of custom fields only. Standard fields are non sortable and always top of list.\r\nIt would be nice to be able to sort these fields separately for each trackers.\r\n"}]}}
{"custom_id": "46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\nPossibility to move custom fields before the built-in fields\n\n--Description--\nI would like to know whether it's possible to move a custom field before built-in ones (e.g., description)?\r\n\r\nThis is important in cases where we want the dev team see/fill-in a field before the description or even subject."}]}}
{"custom_id": "47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\ncustom field sorting\n\n--Description--\nHi everyone;\r\nI would like to request a custom fields sorting / overview. In the mean time, we have too many of them (and yes - we need them all :) ) and it is really hard as administrator to have an overview.\r\n(administration section - custom fields - list of custom fields)\r\nAre there any patches out there, which will allow a better sorting? Not only up and down. For example group fields to the projects, where they are used.\r\nThanks everyone for contributing to Redmine.\r\nMartina\r\n\r\nour current environment please see jpg"}]}}
{"custom_id": "48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072.\n\n-- Ticket2\n--Subject--\nAbility to group issues by project fields and custom fields\n\n--Description--\nIn the issues listing page, there is a \"group result by\" that has groupable fields (& custom fields) of Issue.\r\nIs it possible to add Project fields (& custom fields) to doing @group by@ on issues? "}]}}
{"custom_id": "49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nREST API to expose the Redmine version\n\n--Description--\nAfter reading Alexey Skor's forum post about the \"API versions\":http://www.redmine.org/boards/4/topics/15631, I think it would make 3rd party development easier if Redmine had a REST API method to find out what version of Redmine the server is running.\r\n\r\nThat way a client can check to see if the server supports the API requests it needs (e.g. 1.0+ has an issues API, 0.9 doesn't).\r\n\r\nThoughts?"}]}}
{"custom_id": "50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "51", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAPI for Redmine configuration & information\n\n--Description--\nHello,\r\nIs it possible to have an API allowing to get info (Redmine Version, environment, SCM, plugins, etc.) of a Redmine instance, and also to get and set the configuration (the \"settings\" page)?\r\n\r\nFor instance, I have to code an node app differently depending on the version of the Redmine instance."}]}}
{"custom_id": "53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nPossibility of auto updates to the latest stable version?\n\n--Description--\nAs an example, Simple Machines Forum software, while is made in PHP, but can notify a user with a red text about availability of a new version on simplemachines.org in it's admin panel, and then has the button to update itself to the latest version. It will then check the integrity of the current version and if everything is valid and ready for an upgrade, it would then install the update and migrate everything required. This makes it very convenient for the user.\r\nWould anything like this be possible with Redmine?"}]}}
{"custom_id": "54", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop support for MySQL 5.5\n\n--Description--\nSupport for MySQL 5.5 ended in December 2018:\r\n\r\nResources:\r\n- https://en.wikipedia.org/wiki/MySQL#Milestones\r\n- https://www.fromdual.com/support-for-mysql-from-oracle\r\n\r\nThere are no changes in the code from what I've found, I think that we should just update the wiki and add this ticket to the Changelog. \r\n\r\nI propose to drop support in version:\"4.1.0\"."}]}}
{"custom_id": "55", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nExpose repository version via REST API\n\n--Description--\nFor Redmine clients interacting with different versions of the Redmine server it would be beneficial to have an easy way to identify the server version. Currently this information is available in the web UI: <your-host>/admin/info and can be scrapped from the page (e.g. with Jsoup), but it's a hack. Having a REST endpoint with that information exposed would be great.\r\n\r\nOr is there a more convenient workaround than the one mentioned above?"}]}}
{"custom_id": "57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nSupport for Git repositories with default branch \"main\"\n\n--Description--\nSince GitHub renamed the default branch name from \"master\" to \"main\" in 2020, more and more Git repositories in the world have the default branch of \u201cmain\u201d instead of \u201cmaster\u201d. However, Redmine does not recognize \"main\" branch as the default branch.\r\nhttps://github.com/github/renaming\r\n\r\nAfter applying the attached patch, \"main\" will be recognized as the default branch in addition to \"master\"."}]}}
{"custom_id": "60", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nReview and update supported database engines and versions \n\n--Description--\nSupported database engines and versions were not been updated for a while and we should do it in Redmine version:\"6.0.0\". \r\n\r\n|_/2-. Redmine version|_/2-. Supported Ruby versions        |_/2-. Rails version used |_\\4=. Recommended Databases                      | \r\n                                                                                      |*PostgreSQL* |*MySQL*     |*MSSQL*    | *SQLite* | \r\n|trunk (>= r22053)    |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |14           |8.0 - 8.1   |>2012      | 3        |\r\n|5.1                  |2.7, 3.0, 3.1, 3.2                   |Rails 6.1                |>9.2         |5.7 - 8.1   |>2012      | 3        |\r\n|5.0                  |Ruby 2.5[1], 2.6[1], 2.7, 3.0, 3.1   |Rails 6.1                |>9.2         |5.7 - 5.7   |>2012      | 3        |\r\n|4.2                  |Ruby 2.4[1], 2.5[1], 2.6, 2.7[2]     |Rails 5.2                |>9.2         |5.5 - 5.7   |>2012      | 3        |"}]}}
{"custom_id": "61", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nCommunicate end of 4.x development\n\n--Description--\nGiven:\r\n* the present Redmine release cycle;\r\n* the \"Maintenance Policy for Ruby on Rails\":https://guides.rubyonrails.org/maintenance_policy.html and the Rails release cycle;\r\n* the _assumption_ that Redmine will not bring major Rails upgrades (5.x <notextile>-></notextile> 6.x) in a minor 4.x release;\r\n* that the Rails 6.1 port has already been committed to the trunk;\r\n\r\nI conclude that it has been decided to end the 4.x development after the recent 4.2 release.\r\n\r\nYet, I see that this is not clear for (close) community members who are referring to a (potential) 4.3 release (see eg. #30820#note-15, #32424#note-36, #32424#note-37).\r\n\r\nThis could be solved by addressing this subject in a news post.\r\n"}]}}
{"custom_id": "62", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nShow warning in admin/info when there are pending migrations\n\n--Description--\nThe attached patch adds an indication to the admin/info page whether all database migrations have been run or not.\r\n\r\nSome users forget to run the rake task @db:migrate@ when they update Redmine and encounter errors. Sometimes it is difficult for users new to Ruby on Rails to identify that the cause is that database migrations have not been run (examples: message#56635, message#62323).\r\n\r\nThe new indication that the patch introduces gives such users a chance to know the cause. It is also useful for people who are asked help from such users to figure out the cause.\r\n\r\n!{width: 676px; border: 1px solid grey;}.pending-migrations-indicator.png!"}]}}
{"custom_id": "64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nSupport for MySQL > 5.7 or MariaDB\n\n--Description--\nGiven that I cannot see anything on the roadmap I'd like to ask what the state of MySQL support is. As stated on the Install page the latest officially supported release is MySQL 5.6, which has been EOL since February of 2021. MySQL 5.7 seems to work just fine but is not yet officially supported (it's on the roadmap for the next major release after 5.0!) and has an EOL date of October 2023 (aka slightly over 2 years from today). At the current speed of development I fear that MySQL will be EOL long before it is officially supported by Redmine. MariaDB is not supported at all.\r\n\r\nAny insight?"}]}}
{"custom_id": "65", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "67", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nRelax rouge version dependency in Gemfile\n\n--Description--\nThe @rouge@ gem \"claims to follow\":https://github.com/rouge-ruby/rouge/blob/master/CHANGELOG.md#changelog Semantic Versioning 2.0.0. As such, most releases of the gem in the past bumped the minor version.\r\n\r\nI think it is not necessary to bump every minor release in our @Gemfile@, thereby forcing users on older Redmine releases to stay on an older rouge version unnecessarily.\r\n\r\nAs such, I think we should relax the @rouge@ dependency to something like\r\n\r\n<pre>\r\ngem \"rouge\", \"~> 3.28\"\r\n</pre>\r\n\r\nAs with this change, people might have different languages available (as different @rouge@ versions support different languages). Accordingly, I propose we also dynamically generate the list of highlighted languages (currently in @public/help/code_highlighting_languages.html@) with a controller action.\r\n"}]}}
{"custom_id": "68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "69", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!"}]}}
{"custom_id": "70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nUpdate Chart.js to 3.7.1\n\n--Description--\nRedmine is now using 2.8.0 which was released almost 3 years ago (14 Mar 2019). There are use cases in which plugin developers would want to use Chart.js but to use latest features they have to ship another js bundle.\r\n\r\n\"Chart.js 2.8.0\":https://github.com/chartjs/Chart.js/releases/tag/v2.8.0\r\n\"Chart.js 3.7.1\":https://github.com/chartjs/Chart.js/releases/tag/v3.7.1\r\n\r\nI looked into code, there are only few usages, so it should not be hard to upgrade.\r\n\r\nAlso it would be nice to upgrade jQuery to latest (3.6.0 atm).\r\nI wonder why jQuery is shipped in single bundle with jQueryUI and Rails UJS making them harder to upgrade.\r\n\r\n"}]}}
{"custom_id": "71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nMigrate Wiki needs an update.\n\n--Description--\nThis wiki(https://www.redmine.org/projects/redmine/wiki/RedmineMigrate) was marked as \"Obsolete: Does not work\" in Trac and Mantis sections. Please make them work for latest Redmine stable release. Thank you!"}]}}
{"custom_id": "72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nHalt Redmine boot entirely instead of showing a warning in admin/info when there are pending migrations\n\n--Description--\nStarting with Redmine version#155 admin/info shows a warning when there are pending migrations (#35562). I think it makes no sense to let Redmine boot at all if there are pending migrations. It might even lead to data corruption in the DB.\r\nIt might be better to raise an exception and halt the boot process altogether with an initializer (e.g. _/config/initializers/05-check_pending_migrations.rb_) containing:\r\n<pre><code class=\"ruby\">\r\nif Rails.env.production?\r\n  ActiveRecord::Migration.check_pending!\r\nend\r\n</code></pre>\r\n\r\nWhat do you think?"}]}}
{"custom_id": "73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "74", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure."}]}}
{"custom_id": "76", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nUpgrade Admin/Users list to use the query system\n\n--Description--\nThis patch series that was extracted from \"Planio\":https://plan.io/redmine-hosting introduces a UserQuery\r\nand upgrades the Admin/Users list with corresponding filter, sort and (CSV) export capabilities.\r\nAlso introduced are a context menu and an option to delete multiple users at once. The third patch just\r\nadds flash messages to the (single) user deletion operation, for symmetry with the messages rendered by the bulk delete.\r\n\r\nThis relates to issues #4295, #18193, #21055 (probably there are more I didn't find)."}]}}
{"custom_id": "77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nFew Details required\n\n--Description--\nHi,\r\n1) Want to know the difference between version 4.2.8 and 5.0.3\r\n2) List of plugin support by both of the version\r\n3) Can we install plugin omniauth_google for v5.0.3, if not can you provide other way or option\r\nhttps://github.com/twinslash/redmine_omniauth_google\r\n\r\n* Note :- Please look into it, as its urgent request\r\n\r\nAlso when i tried to install omniauth_google for 5.0.3 version got below error \r\n\r\n\r\nrake aborted!\r\nLoadError: cannot load such file -- redmine_omniauth_google/hooks\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/zeitwerk-2.6.1/lib/zeitwerk/kernel.rb:35:in `require'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/zeitwerk-2.6.1/lib/zeitwerk/kernel.rb:35:in `require'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/dependencies/zeitwerk_integration.rb:51:in `require_dependency'\r\n/data/taskman/plugins/redmine_omniauth_google/init.rb:2:in `<top (required)>'\r\n/data/taskman/lib/redmine/plugin_loader.rb:31:in `load'\r\n/data/taskman/lib/redmine/plugin_loader.rb:31:in `run_initializer'\r\n/data/taskman/lib/redmine/plugin_loader.rb:108:in `each'\r\n/data/taskman/lib/redmine/plugin_loader.rb:108:in `block in load'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:427:in `instance_exec'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:427:in `block in make_lambda'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:198:in `block (2 levels) in halting'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:604:in `block (2 levels) in default_terminator'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:603:in `catch'\r\n/usr/local/rvm/gems/ruby-3.0.0/gems/activesupport-6.1.7/lib/active_support/callbacks.rb:603:in `block in default_terminator'\r\n"}]}}
{"custom_id": "79", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.6 support\n\n--Description--\nThe normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.\r\n\r\nRedmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara."}]}}
{"custom_id": "80", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "81", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDrop official support for MySQL 5.5, 5.6 and 5.7\n\n--Description--\nIn Redmine version:6.0.0, we should display a warning during boot or on the Administration page if Redmine is using a MySQL version lower than 8.0:\r\n\r\n|_.Version|_.Release Date|_.End of life|\r\n|MySQL 8.0|April 19, 2018|April, 2026|\r\n|MySQL 5.7|October 21, 2015  |October 21, 2023|\r\n|MySQL 5.6|February 5, 2013  |February 5, 2021|\r\n|MySQL 5.5|December 3, 2010 | December 3, 2018|\r\n\r\nCloud providers also drops support for MySQL 5.7.\r\n\t\t\r\n\t\t\n\n-- Ticket2\n--Subject--\nUpgrade redmine 3.3.0 (windows) to latest\n\n--Description--\nHi,\r\nI have a old redmine 3.3.0 windows version, and i want to upgrade it to the latest version, what is the best way? I have a Ubuntu server created to do this upgrade. \r\n\r\nthanks and regards."}]}}
{"custom_id": "84", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nCould not add clickable Link to a local windows directory when creating redmine demand\n\n--Description--\nHello,\r\n\r\nIs-it possible with Redmine to add hypertext links that points to local windows directories when creating redmine demand?\r\nExample :If we add a link to network directory (\\\\machine_test\\tmp), it will not be clickable ?\r\n\r\nThank you in advance.\r\n\r\nBest regards,\r\n\r\nRiadh\r\n"}]}}
{"custom_id": "85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "86", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "88", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "89", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "90", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "93", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "94", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "96", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "97", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\nPossibility to move custom fields before the built-in fields\n\n--Description--\nI would like to know whether it's possible to move a custom field before built-in ones (e.g., description)?\r\n\r\nThis is important in cases where we want the dev team see/fill-in a field before the description or even subject."}]}}
{"custom_id": "98", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\npermissions in custom fields for time entries\n\n--Description--\nHello\r\n\r\nFor fields and custom fields in issues you can assign permissions, e.g. some roles can only read fields, not edit them.\r\nIs there a way to have this functionality also in custom fields for time entries?\r\n\r\nI can set the visibility of the time entry fields for different roles, but all should be able to see it, only not all should be allowed to edit.\r\n\r\nkind regards\r\nIrmgard"}]}}
{"custom_id": "99", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\nAdd \"Statuses\" filter when creating new \"Issue\" custom fields\n\n--Description--\nCustom fields on issues can be associated with specific Trackers, so a custom field that is associated with \"Bug\" will be hidden on issues of other types.  However, if that custom field is \"required\" then it is required for every status of that issue throughout its workflow.  \r\n\r\nIn many workflows, specific pieces of information are added to an issue throughout its workflow and not all at the beginning, so it would be most useful if custom fields could reflect this.  For example, in the workflow of a \"Bug\" when the tester sets the status to \"Verified\" that tester should note the version number that they tested and the environment that they tested it in.  If a user sets the bug to \"Rejected\" they should provide an explanation for why it is rejected.\r\n\r\nCurrently, we keep all of this information in \"Notes\" and it is the responsibility of each user to remember what needs to be added based on the status they're switching from/to.  However, if we could keep this in custom fields that are selectively shown at specific points in the workflow this would both better enforce compliance and would store that information in a more structured way that we could leverage better in custom queries and reports."}]}}
{"custom_id": "100", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd comment on custom fields\n\n--Description--\nHi, \r\n\r\nWe had a lot of customfields on our projects and we would appreciate to add more information on it.\r\n\r\nThere is a description but it only to be visualized by users.\r\n\r\nWe'd like to have a field like 'Comment' to add comment on custom field in order to add information of the context.\r\nThis field could be only view by super administrator\r\n\r\nExemple 1 : 2 custom fields witch same visible name (but one with 1 space in name), i'd like to specify the use of those fields\r\nExemple 2 : custom field are too short, the comment can help the administrator to best maintain this custom field\r\n\r\nWill it be usefull for other people ?\n\n-- Ticket2\n--Subject--\nFeature to Group Custom Fields by Category\n\n--Description--\nEnhance custom fields with a category that will be used to group all custom fields within a single table/frame for a very same category at display.\r\n\r\nInitial topic discussion for context of this request is there: message#69072."}]}}
{"custom_id": "101", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "102", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "103", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "104", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "105", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nAdd column project_id to Spent time report\n\n--Description--\nHello. can you add \"project_id\" to Spent time report.\r\nIf i upload several reports by time. And when build general reports in csv, then, if someone changed the name of the project over time, it will be very difficult to correlate them late. question, is it possible to somehow display unique id value?"}]}}
{"custom_id": "106", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd technical identifier on some objects\n\n--Description--\nHi,\r\n\r\nActually Lot of objects in redmine had an id or a name (visible by users) but no reliable field between several redmine environnements (several database, several uses)\r\n\r\nI work with several environnements with databases which are not synchronized (so ID are diff\u00e9rents between them, and name can evolved et be different)\r\n\r\nI need to synchonize parts of Redmine between environnements (always in the same way environnement A -> environnement B)\r\n\r\nFor me, it's not reliable to create my synchronization on an ID or a Name, i think we should have a technical name/identifier on the objects.\r\n\r\nSo what do you think of adding an identifier at least on those elements :\r\n\r\n- custom fields\r\n- trackers\r\n- workflows\r\n- -projects (already exists)\r\n- roles\r\n\r\nWhat do you think of this feature ?\r\n\r\nRegards\r\n\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "107", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nAdd ability to change issue author\n\n--Description--\nSometimes, I submit an issue, but down the road am no longer responsible for tracking it.  I'd like to be able to change the owner of the issue so that I no longer receive emails on the issue and it is clearer who is responsible for tracking issue.  The new owner can already make themselves watcher to get the emails but this change would eliminate that step."}]}}
{"custom_id": "108", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nEmail Notifications for Custom field with User type\n\n--Description--\nWe want to add new custom field for Issue with User type that lists all the users in the project.\r\nfor eg., Tester is the field added to the project it has the list of users.\r\nOnce the development is complete we want to pass on the issue to 'Tester'. On selecting the user in \"Tester\" field, \r\nWill 'Tester' receive email notifications when a user in 'Tester' field is choosen?\r\nDeveloper will be tracked by using OOTB 'Assignee' field. We dont want to change as we want to track who owns the issue."}]}}
{"custom_id": "109", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nLast assigned to option in the Assignee selection list\n\n--Description--\nVery often in the flow of working on an issue you want to assign the issue to the last person which had the ticket.\r\n\r\nMy suggestion is that below the _<< me >_ option a second special option with the label\r\n<pre>\r\n<< last: account_anme >>\r\n</pre>\r\n\r\nshould be added.\r\n\r\nI call this \"giving back\" the _Ping Pong Feature_ ;-)\r\n\r\n\r\nWhat do you think about this feature request?\r\n\r\nWe have working code in our plugin to implement this. It requires a change of the @principals_options_for_select@ application_helper and a method in the issue model which returns the id of the last assignee, based on the Journals.\r\n\r\nand could implement a patch for this."}]}}
{"custom_id": "111", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nShow assignee on gantt\n\n--Description--\nNeedless to say, assignee is important information to manage projects. It would be great if assignee is displayed on gantt.\r\n\r\nI have found some similar requests on the forum:\r\n\r\n* message#51259\r\n* message#28056\r\n* message#33695"}]}}
{"custom_id": "112", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nSearch Assignee\n\n--Description--\nHello,\r\n\r\nIt will be very useful to have search for assigners when editing issue. I have a bunch of people I need to pick from, and a search as in watchers can be great. "}]}}
{"custom_id": "113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "114", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nOption to automatically add user as watcher to an issue if they edit an issue they're not currently involved with\n\n--Description--\nWe occasionally get users updating issues that they didn't create, nor are they watching.\r\n\r\nWhat happens then is they don't get email -- neither for the update they made, nor for any future updates.\r\n\r\nWhat we would like is to automatically have such a user added as watcher to the issue.\r\n\r\nSuggest that this be made an option, with it default to \"off\" for old behaviour."}]}}
{"custom_id": "115", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "116", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "117", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nassigne contact in issues\n\n--Description--\nhello,\r\n\r\ndo we know any way to add a contact to issue? I have a big progect with many issues, so i want if it's possible to add a contact each time.\r\n\r\nthanks"}]}}
{"custom_id": "118", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "120", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nAdd \"Assign to creator\" option in the dropdown to issue edit form.\n\n--Description--\nSince we have \"<<me>>\" option in issue edit form for user to assign to himself quickly, \r\nwould it be possible to add one more option \"<<creator>>\"?\r\n\r\nI think it will be very convenient to return issue back to the creator of each issue."}]}}
{"custom_id": "121", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd 'Assigned to You' Tag in Email Subjects for Personal Assignments\n\n--Description--\nI'm proposing a feature to add an \"Assigned to You\" tag in the email subject for issues personally assigned to a user.\r\nThis tag will be optional and can be enabled or disabled based on user preference.\r\nThe goal is to make it easier for users to quickly identify emails related to issues they are responsible for, enhancing productivity and email management efficiency.\r\nThis small change could make a significant difference in daily workflow for many users.\n\n-- Ticket2\n--Subject--\nChange the default notification option for users to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option for a new user is *\"Only for things I watch or I'm involved in\"* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *created* by the user\r\n* The issue is *assigned* to the user\r\n\r\nI think the default option should now be *\"Only for things I watch or I am assigned to\"* (internal name: only_assigned) which sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *assigned* to the user\r\n\r\nThis is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.\r\n\r\nConsider the following scenario:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue\r\n\r\nIf the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher\r\n\r\nAs illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned."}]}}
{"custom_id": "122", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs."}]}}
{"custom_id": "124", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "125", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "126", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nAdd check in Redmine information page if default queue adapter is used in production\n\n--Description--\nUsing the default queue adapter (@:async@) in production is not recommended because the queue is stored in memory and you can easily lose the items from the queue (https://api.rubyonrails.org/classes/ActiveJob/QueueAdapters/AsyncAdapter.html).\r\n\r\nSince #26791, there were multiple issues reported caused by the default queue adapter (for example: #31241).\r\n\r\nMy proposal is to add the following check in Redmine information page:\r\n\r\n!{border: 1px solid grey;}.redmine_info.png!"}]}}
{"custom_id": "127", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nRedmine Docker - Easy deploy upgrade, administer\n\n--Description--\nGood Day All,\r\n\r\nI want to find documentation or a walkthrough to install Redmine with MySQL DB on Docker with persistent volumes and an easy way to import plugins.\r\n\r\nWith this, I want to only worry about pushing/updating/upgrading the environment by pulling the latest image and possibly running the site/upgrade URL.\r\n\r\nHopefully, with this my DB stays intact, and also my color scream/templates remain intact.\r\n\r\nIt would be great if you could import the plugins via the Redmine site and press a Rake button to consume the plugin.\r\n\r\nThis would make Redmine the easiest to install and work with.\r\n\r\nThis is my pipe dream at the moment.\r\n\r\nAnd add the functionality to import SSL/ certificate on the Redmine administrator site to make it secure."}]}}
{"custom_id": "128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "129", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "130", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nMake it possible to change the logo with a custom image (support svg, png etc) via UI\n\n--Description--\nAt this moment, there are various ways to change the official redmine logo with your company logo: generally you need to edit the application.css file or use node npm in the case of sass-based themes. It would be appropriate to make this operation more user friendly, allowing you to change the image via the UI (perhaps from administration-settings-display).\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "131", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.3\n\n--Description--\nRails 5.2.3 has been released on March 28, 2019.\r\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/"}]}}
{"custom_id": "132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nUpdate Rails to 5.2.3\n\n--Description--\nhttps://weblog.rubyonrails.org/2019/3/28/Rails-5-2-3-has-been-released/\r\n"}]}}
{"custom_id": "133", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "134", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nRuby 3.0 support\n\n--Description--\nRuby 3.0.0 has been released on 25 Dec 2020.\r\nhttps://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/\r\n"}]}}
{"custom_id": "135", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nCommunicate end of 4.x development\n\n--Description--\nGiven:\r\n* the present Redmine release cycle;\r\n* the \"Maintenance Policy for Ruby on Rails\":https://guides.rubyonrails.org/maintenance_policy.html and the Rails release cycle;\r\n* the _assumption_ that Redmine will not bring major Rails upgrades (5.x <notextile>-></notextile> 6.x) in a minor 4.x release;\r\n* that the Rails 6.1 port has already been committed to the trunk;\r\n\r\nI conclude that it has been decided to end the 4.x development after the recent 4.2 release.\r\n\r\nYet, I see that this is not clear for (close) community members who are referring to a (potential) 4.3 release (see eg. #30820#note-15, #32424#note-36, #32424#note-37).\r\n\r\nThis could be solved by addressing this subject in a news post.\r\n"}]}}
{"custom_id": "136", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nUpdate to Rails 5.2.7/6.1.5\n\n--Description--\nFrom the \"RoR-blog\":https://rubyonrails.org/blog/:\r\n> March 11, 2022\r\n> \"Rails 5.2.7 has been released\":https://rubyonrails.org/2022/3/11/Rails-5-2-7-has-been-released\r\n>\r\n> March 10, 2022\r\n> \"Rails 6.1.5 has been released\":https://rubyonrails.org/2022/3/10/Rails-6-1-5-has-been-released"}]}}
{"custom_id": "137", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.5 support\n\n--Description--\nRecently, more and more of the Gems that Redmine depends on have dropped support for Ruby 2.5. Redmine still supports Ruby 2.5, but this complicates the maintenance of Gemfile.\r\n\r\nI think it is time to drop Ruby 2.5 support."}]}}
{"custom_id": "138", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nAdd Ruby 3.2 support\n\n--Description--\nnan"}]}}
{"custom_id": "139", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.6 support\n\n--Description--\nThe normal maintenance phase of Ruby 2.7 ended on 2022-04-22 (see https://www.ruby-lang.org/en/news/2022/04/12/ruby-2-7-6-released/). And some gems dropped the support for Ruby 2.7.\r\n\r\nRedmine currently supports Ruby 2.6, but this prevents us from updating some gems such as Rouge and Capybara."}]}}
{"custom_id": "140", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nRuby 3.3 support\n\n--Description--\nRuby 3.3.0 is going to be released on December 25th, 2023.\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "141", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "142", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "143", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "144", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "145", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "146", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "147", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "148", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "149", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAdd context menu for attributes in issue details\n\n--Description--\nIn addition to the nice improvements in #10485 and #28067 I would like to propose to also add the context menu to the attributes in the issue details view.\r\nOne can move through the stack of issues and quickly change the status or priority without the need of entering the edit mode.\r\nThis allows the user to manipulate attributes of the issue without leaving the context."}]}}
{"custom_id": "150", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "151", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "152", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nissue delete button confusion\n\n--Description--\nIn 3.4.3, if your last issue history item is only one or two lines, you end up with the history item delete button (trashcan) directly above the whole-issue delete button (trash can plus \"delete\") so that it is really unclear whether the \"delete\" text button goes with the history item or the whole issue, leading to accidental issue deletion.\r\n\r\nWe should add a separator between the history list and the item action buttons.\r\n\r\nTo reproduce: \r\n\r\n* Add a one line Note to an issue and save it.\r\n* look at the delete buttons a the bottom right corner of the page.  \r\n\r\n!redmine_issue.png! \r\n\r\nIf we put some <hr>'s in the issue show template (patch attached) it becomes obvious that the \"delete\" text does not go with the history item, but with the whole issue.\r\n\r\n!after_patch.png!"}]}}
{"custom_id": "153", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "154", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "155", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issue and issue journal\n\n--Description--\nWhen you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.\r\n\r\nI think it would be convenient to be able to copy a simple URL from the view.\r\n\r\n* URL of the issue to be copied\uff1a @https://<your redmine>/issues/1@\r\n* URL of the issue journal to be copied\uff1a @http://<your redmine>/issues/1#note-1@"}]}}
{"custom_id": "157", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "158", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issues list\n\n--Description--\nAdded the feature to copy issue and journal links by #34703.\r\nI think it would be convenient if that feature could also be used in the context menu.\r\n\r\nIf you have selected one issue:\r\n* Copy to https://redmine-host/issues/:id\r\n\r\nIf you have selected multiple issue:\r\n* Copy to https://redmine-host/issues?issue_id=1%2C2&set_filter=1&status_id=%2A (https://redmine-host/issues?issue_id=1,2&set_filter=1&status_id=*)\r\n!{width: 50%; border: 1px solid #ccc}after-accessing-the-copied-url.png!"}]}}
{"custom_id": "159", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "160", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "161", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nRequest for reconsideration of removal of 'View all issues' link\n\n--Description--\nYesterday I started doing some development work on Redmine again. The first thing that I stumbled upon was that the 'View all issues' link in the issues sidebar was removed in r18304. Although I see the merit of its removal with #30294, it really annoys me not having that link available (to such an extend that I quickly created a \"small plugin\":/plugins/redmine_add_all_issues_link_in_issues_sidebar to restore it on the issues show view).\r\nThe reason for this annoyance is that it was the only way to clear the current, not-saved query straight from the issues show view without first going back to the issues index view and then subsequently clicking on the clear button. With the link on issues show it is possible to go back to the default issues list without the need of an additional click on the clear button to clear the in-memory query. All the other (currently available) links that go back to the issues index view (project menu and query links on the index show view) retain the current query.\r\n\r\nSo, to make a long story short, I'd like to request a reconsideration of the decision for the removal of this link. This is also rooted in the fact that I think more (power) users will be/have been bitten by this change.\r\n\r\nFTR:\r\n* I have no problems with the move of the other links ('Summary' and 'Import') to the drop-down menu. This request is just about the 'View all issues' link.\r\n* I haven't looked into the changes of the 'Spent time' sidebar yet, but the points of the 'Issues sidebar' might also apply to those views.\r\n* If the removal decision is indeed reverted then it would be viable to subsequently also revert the addition of the clear query buttons added in #31640, as they would become obsolete if the 'View all issues' link is added back in.\r\n* I am also ok if my request will be declined. I'll then just keep using my plugin to restore the old situation...\r\n"}]}}
{"custom_id": "162", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "163", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nDon't show issues without spent time on the issues list with 0.00/0:00 spent time values\n\n--Description--\nCurrently issues without spent time are rendered on the issues list with 0.00/0:00 spent time values.\r\nI think it would make more sense to completely omit showing any spent time values for such issues instead. Such would tidy up the issue list some more, rendering only actually set values."}]}}
{"custom_id": "164", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAdd a link to (with count of) targeted but not-estimated issues to versions show view\n\n--Description--\nThis feature request/proposal is loosely extracted from #1671#note-7:\r\n\r\n_Artem Vasiliev wrote:_\r\n> [...]\r\n> \r\n> Version page: show not estimated (undone) issues count.\r\n> Count is a link that leads to relevant issues list.\r\n> [...]\r\n\r\nCutout from screenshot posted in #1671#note-8 by Artem Vasiliev:\r\n\r\n!{width: 50%;}.2021-08-22_13-12-09.png!\r\n\r\nI think this feature, albeit with some less prominent coloring, can really ease version scheduling/planning."}]}}
{"custom_id": "165", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "166", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "167", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "168", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "169", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAdd regexps to parse more SCM messages\n\n--Description--\nWe are using commit messages like @feature/#ID-sometext@ or @feature/#ID_sometext@ where ID is a Redmine issue ID.\r\nCurrently Redmine does not add commits with such messages to the associted revisions because of the @/@ before the #ID.\r\nAlso these strings will not have a clickable link to the issue id because the the @-@ or @_@ behind the #ID.\r\nWith this patch Redmine will add such commits to an issues revisions and also the #ID in the message will become a clickable link."}]}}
{"custom_id": "170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nHow to access the \"Link values to URL\" using API\n\n--Description--\nHi,\r\nI would like to know how to access the \"Link values to URL\" of any issue using the REST API.\r\n\r\nFor eg. the tickets in our system can be accessed like below:\r\n\r\nhttps://ticket.my_company.de/redmine/issues/ABC-659\r\n\r\nSo, instead of the legacy issue id, I would like to get the id \"ABC-659\" from the REST API when I get a list of Issue objects.\r\n\r\nI could not find that under the custom fields. \r\n\r\nThanks in advance for any tips and ideas.\r\n\r\n"}]}}
{"custom_id": "171", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "172", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "173", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n"}]}}
{"custom_id": "176", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nRedirect to repositories#show after repositories#fetch_changesets to avoid the user-visible browser URL\n\n--Description--\nWhen POST'ing to repositories#fetch_changesets, we fetch changesets and then just render the @show@ page This retains the URL of the @fetch_changesets@ action in the browser bar, e.g.\r\n\r\n<pre>\r\nhttps://redmine.example.com/projects/test/repository/demo/fetch_changesets\r\n</pre>\r\n\r\n\r\nFurthermore, the rendered page is the result of a POST and is thus not easily reloaded. Thus, I propose that instead of directly showing the repository again, we issue a redirect to the repository's show page. That way, the @fetch_changesets@ URL is not visible ion the browser's address bar and the page can be easily reloaded.\r\n\r\nThis is implemented in the attached patch.\r\n"}]}}
{"custom_id": "177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nOption to disable Issue Navigation or URL Parameters\n\n--Description--\nWe request the ability to either disable the issue navigation feature or to remove the URL parameters it generates.\r\n\r\nWhile the navigation icons themselves are not the issue, the resulting lengthy URLs are a significant inconvenience for our users.\r\n\r\nA streamlined URL, such as @https://redmine.com/issues/1234@ is much preferred over the extended format that includes issue_count, issue_position, next_issue_id, and prev_issue_id parameters (@https://redmine.com/issues/1234?issue_count=12345&issue_position=1234&next_issue_id=1233&prev_issue_id=1235@).\r\n\r\nA user-centric setting for this preference would be ideal, but a global system setting or another effective method would also be acceptable.\n\n-- Ticket2\n--Subject--\nChange URL in automatic e-mail\n\n--Description--\nWe would like to change the link in the automatic emails that Redmine sends to users. The current link, https://redmine.frankfurt-main.ihk.de/, is no longer up to date. The link needs to be changed to: https://ffms246/. Where can we change this in the options?"}]}}
{"custom_id": "178", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nNotification when deleting an issue\n\n--Description--\nCurrently, issue deleted are ... deleted :-)\r\nTo avoid to lost something, it would be great to have a final notification (same notifications rules + Redmine administrators). This notification should have the full history instead of final deletion step. I don't know how to handle attachments (attached or not - not so important).\r\n\r\nIf you prefer to have a 'soft delete' like #1380 or #6666, this feature is useless and you can cancel it. But please, try to handle this deletion differently soon."}]}}
{"custom_id": "179", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nIssue visibility \"watched by, created by or assigned to\" for roles\n\n--Description--\nThere's been a bit of discussion (parts of #8488 and other) and some patches already for this or similar (#14318#note-22) and others.\r\n\r\nWe wanted to contribute our \"minimal\" solution for this. This is a new ticket to avoid discussing ever more diverging patches on for example #8488."}]}}
{"custom_id": "180", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\ncannot know who delete issue\n\n--Description--\nwe don't know who delete issue, can we add a notification mail to the project manager notify him that user \"x\" delete an issue  from the project at \"date\"+\" time\"\r\n "}]}}
{"custom_id": "181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "183", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nissue delete button confusion\n\n--Description--\nIn 3.4.3, if your last issue history item is only one or two lines, you end up with the history item delete button (trashcan) directly above the whole-issue delete button (trash can plus \"delete\") so that it is really unclear whether the \"delete\" text button goes with the history item or the whole issue, leading to accidental issue deletion.\r\n\r\nWe should add a separator between the history list and the item action buttons.\r\n\r\nTo reproduce: \r\n\r\n* Add a one line Note to an issue and save it.\r\n* look at the delete buttons a the bottom right corner of the page.  \r\n\r\n!redmine_issue.png! \r\n\r\nIf we put some <hr>'s in the issue show template (patch attached) it becomes obvious that the \"delete\" text does not go with the history item, but with the whole issue.\r\n\r\n!after_patch.png!"}]}}
{"custom_id": "184", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "185", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "187", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd logging for issue deletion\n\n--Description--\nThe attached patch introduces a new feature in the Issue model to log every issue deletion, enhancing audit trails.\r\n\r\nMy clients sometimes ask me to identify when and who deleted an issue, especially when deletions are accidental. For a single issue, you can pinpoint the responsible user by finding a line in the production.log that begins with \"DELETE /issues/\". From the following log, for instance, shows that \"admin\" deleted issue @#1@ at 2023-12-04 21:30:11.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:30:11 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"ivRuWNmGQjuDdNNgG6EeQLCF5b82SF3lx8-AwC-ML7CZ39cktgG40TiwjsmfOk0Wexs3UQsFt-cjT7dGOHt3Lg\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 31ms (ActiveRecord: 5.7ms | Allocations: 14032)\r\n</pre>\r\n\r\nHowever, identifying deletions is not possible when multiple issues are involved. For example, if issue @#1@ with subtask @#15@ and @#16@ is deleted, the log does not record the deletion of these subtasks. This lack of detailed logging poses a significant auditing problem.\r\n\r\nTo address this, the attached patch ensures that a \"Deleted issue: ...\" line is output to the production.log for each deleted issue, as shown below. This enhancement allows for comprehensive tracking of issue deletions.\r\n\r\n<pre>\r\nStarted DELETE \"/issues/1\" for 127.0.0.1 at 2023-12-04 21:45:17 +0900\r\nProcessing by IssuesController#destroy as HTML\r\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"i6hBpwCTeMt_ZpTAeq5zWyOlVMCi0Lxdv2n7SM7y0hKIrzgAIsxdNIqavoyNgpRIfQFOwqc6TLzBexEphZR2Ug\", \"ids\"=>[\"1\"], \"todo\"=>\"destroy\", \"reassign_to_id\"=>\"\", \"commit\"=>\"Apply\", \"id\"=>\"1\"}\r\n  Current user: admin (id=1)\r\nDeleted issue: 'Feature request #15: Add a great feature' by Redmine Admin\r\nDeleted issue: 'Bug #16: Serious bug that must be fixed ASAP' by Redmine Admin\r\nDeleted issue: 'Bug #1: Cannot print recipes' by Redmine Admin\r\nRedirected to http://localhost:3000/projects/ecookbook/issues\r\nCompleted 302 Found in 54ms (ActiveRecord: 10.1ms | Allocations: 32921)\r\n</pre>\n\n-- Ticket2\n--Subject--\nNew issues filter operators \"has been\", \"has never been\", and \"changed from\"\n\n--Description--\nThe attached (unfinished) patch adds new filter operators \"changed from\", \"has ever been\" and \"has never been\". The difference from the existing operators is that they check past values in the journal_details table. These new operators are available for Status, Tracker, Priority, Assignee, Target version, and Category filters.\r\n\r\n* \"changed from\": selects issues where the value has ever changed from the given value\r\n* \"has ever been\": selects issues where the value has ever changed from the given value, or the current value is the given value (equivalent to \"changed from\" + \"is\")\r\n* \"has never been\": selects issues where the value has never been the given value (the negative of \"has ever been\")\r\n\r\nExamples:\r\n* [Assignee][has ever been][<< Me >>]: selects issues you have been assigned in the past or are currently assigned to\r\n* [Assignee][changed from][<< Me >>]: selects issues that were assigned to you in the past but the current assignee is not you\r\n* [Assignee][has never been][<< Me >>]: selects issues that have never been assigned to you\r\n\r\nThe following feature requests will be fulfilled if the operators are implemented.\r\n\r\n* ##3001\r\n* ##3586\r\n* ##9714\r\n* ##31381"}]}}
{"custom_id": "188", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "189", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "190", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAuthors name in from  address of email notifications\n\n--Description--\n\r\nIn mail notification created by Redmine 'FROM' address in headers\r\nis set to Setting.mail_form. It would be useful to add name of\r\nauthor to this address. You would know who is working on issue\r\nwithout opening mail. I've changed line in app/models/mailer.rb\r\nin initialize_defaults method:\r\n\r\nfrom Setting.mail_from\r\n\r\nto \r\n\r\n@author ||= User.current\r\nfrom \"#{@author.name} <#{Setting.mail_form}>\"\r\n\r\nIt seams to work, but I'm not sure if it wont break anything."}]}}
{"custom_id": "191", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAllow assigning issues and/or watcher status to authenticated non members\n\n--Description--\nThis feature request is vaguely similar to #7342 but that issue doesn't particularly fulfill this request.\r\n\r\nOur redmine installation is configured to require authentication for access and for manual account activation for self registered accounts.\r\n\r\nSince we require authentication for access, most projects on this system are configured as public and the Non member role set to permit view access and edit to forum, issue tracking, wiki, etc. This was done to allow all within the organization to have limited access to all public projects and was working as expected.\r\n\r\nBut while the majority of the activity within a project is accomplished by the active members of the project team who are all assigned to the project and associated with some role, it is not uncommon for an issue to require action by someone who is not a direct member of the team however, unless a user is actually a member of a project, as Non members they cannot be assigned tasks or designated as watchers.\r\n\r\nAs a work around, we have an 'Associated' role cloned from the Non member role and an 'Authenticated User' group that includes all (authenticated) users. This Authenticated user group is assigned to every public project with the 'Associated' role but as the number of workflow permutations is a function trackers X roles, a new role requires configuring (and maintaining) an additional workflow for each tracker.\r\n\r\nThis work around gives us the results we need but it also requires an additional step to ensure each user gets put into the 'Authenticated user' group.\r\n\r\nWhile this work around is more or less acceptable, it would be friendlier if the issue Assignee selection list on the New Issue view and the add watcher list on the update issue view could be sorted and grouped by roles. Or better yet, sorted by roles and have the roles expandable/collapsable! Also, the issue Watcher list on the New Issue view would also be more friendly if it also were a select list as on the update issue view or at least expandable/collapsable as described above.\r\n\r\n \r\n\r\n\r\n"}]}}
{"custom_id": "192", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAdd project identifier to List-Id header in notification emails for better Gmail filtering\n\n--Description--\nThis gives the possibility to filer mail-updates from different project into different folders.\r\n\r\n<pre>\r\n--- ./redmine-2.1.6/app/models/mailer.rb        2013-01-09 17:34:07.000000000 +0100\r\n+++ /opt/redmine-2.1.6/app/models/mailer.rb     2013-03-05 15:33:38.438398984 +0100\r\n@@ -386,7 +386,7 @@\r\n             'X-Auto-Response-Suppress' => 'OOF',\r\n             'Auto-Submitted' => 'auto-generated',\r\n             'From' => Setting.mail_from,\r\n-            'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n+            'List-Id' => \"<#{@issue.project.identifier}.#{Setting.host_name}>\"\r\n\r\n     # Removes the author from the recipients and cc\r\n     # if he doesn't want to receive notifications about what he does\r\n</pre>\r\n\r\nThe resulting List-Id could look like this:\r\n\r\n<pre>\r\nList-Id: <cantemo-ab.vvv.cantemo.com>\r\n</pre>"}]}}
{"custom_id": "193", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nSend E-Mail to Redmine: Copy E-Mail Header into Ticket Note\n\n--Description--\nI frequently bcc redmine, when I send project updates to clients. \r\n\r\nIn the case redmine is not the only receipient, I'd appreciate an option to hardcopy the email header into the ticket note like: \r\n\r\n<pre>\r\nUpdate from E-Mail \r\nTo: <recipients list>\r\nCc: <cc list>\r\n</pre>"}]}}
{"custom_id": "194", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAuthor name in mail from\n\n--Description--\nThis feature was already discussed in #5913 and #2406 is but still missing in the current version. As it's the way \"github\":http://github.com issues notifications I've decided to push this patch.\r\n\r\n<pre><code class=\"diff\">\r\n--- app/models/mailer.rb        (revision 15732)\r\n+++ app/models/mailer.rb        (working copy)\r\n@@ -438,7 +438,7 @@\r\n             'X-Redmine-Site' => Setting.app_title,\r\n             'X-Auto-Response-Suppress' => 'All',\r\n             'Auto-Submitted' => 'auto-generated',\r\n-            'From' => Setting.mail_from,\r\n+            'From' => \"#{User.current.name} <#{Setting.mail_from}>\",\r\n             'List-Id' => \"<#{Setting.mail_from.to_s.gsub('@', '.')}>\"\r\n \r\n     # Replaces users with their email addresses\r\n</code></pre>"}]}}
{"custom_id": "195", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "196", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nMultiple Asignee ticket\n\n--Description--\nCurrently Redmine can assign to user or group a ticket, but it would much usefull to assign multiple users or groups to a ticket (if it's enabled). At my company we don't have specified groups for each type of task and we creating groups on the fly when some issue are submited.\r\n\r\nWe dont want to create bunch of groups for the possible combinations because the ticketing system lack of an important feature, and this should be implemented into the core without use of a plugin."}]}}
{"custom_id": "197", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAdd option to decide default value for \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nIt looks to me that the option *\"I don't want to be notified of changes that I make myself\"* is set by default, and there is no way to revert this.\r\n\r\nThis is specially an issue with users that get automatically created by the rdm-mailhandler.rb-script.\r\n\r\nPlease add an option either to settings->authentication->Default values for new users, or a parameter in the rdm-mailhandler.rb-script."}]}}
{"custom_id": "198", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nSend individual notification mails per mail recipient\n\n--Description--\nWith this patch series, we are introducing the general concept to send multiple mails per notification event. Specifically, we are sending one mail per recipient user. Each of those mails is rendered in the context of the recipient (i.e. with @User.current@ set to the recipient). The mails can be sent immediately or optionally delayed using ActiveJob.\r\n\r\nThis approach has a couple of advantages over the existing approach of sending a single mail to multiple recipients:\r\n\r\n* We ensure object visibility for the rendered mails in the most generic way. Since each mail is rendered with @User.current@ set to the recipient, all content rendered in the mail (including shown issue attributes, macros and links in rendered textile text, ...) is guaranteed to only be visible to the user without having to ensure this manually for each mail using the same visibility rules as used for the HTML views already.\r\n* The mail will always be sent in the recipients language, even if multiple users with different languages are notified\r\n* There is no risk of the whole notification mail being rejected because of a single invalid recipient address (see #8157, #6829, #8733 and a lot of duplicates)\r\n\r\nIn the long run, it will also allow us to introduce user-specific additional information in the rendered notification, e.g. related issues, links to assign the issue, ...\r\n\r\nWith this new approach, we do have a some challenges which we are trying to address separately:\r\n\r\n* Since each mail is always rendered with an adapted @User.current@, any mail views which expected to use the original @User.current@ need to be adapted. In Redmine core, this only affects the security notifications.\r\n* Depending on the number of recipients for a notification, there might be many rendered mails which can take some time in the request. To ensure a snappy response, we can use ActiveJob to render and send the mails in the background. This can make the @async_*@ delivery methods obsolete.\r\n\r\nh2. Reminder: How mail sending works in plain Rails (and Redmine)\r\n\r\nThis patch series changes how mails are generated and delivered. Let's first look at how a mail normally gets generated and delivered in ActionMailer.\r\n\r\n* @mail = Mailer.news_added(news)@ - The user calls a class-method of the Mailer class (a child-class of ActionMailer::Base). This method is usually not implemented in the @Mailer@ class itself. Instead, there is a \"@method_missing@\":https://github.com/rails/rails/blob/v5.1.2/actionmailer/lib/action_mailer/base.rb#L576-L582 method on @ActionMailer::Base@. Here, ActionMailer creates a @ActionMailer::MessageDelivery@ object. Which is basically a delegator to an _eventually rendered_ mail object. Now, the mail is not actually rendered here. The @MessageDelivery@ object only collects all arguments it needs to eventually render the mail. This happens implicitly when any method on the mail is accessed (e.g. when the mail is about to be delivered). The @MessageDelivery@ delegator is returned to the user.\r\n\r\nNow that we have the (delegated) mail, we can deliver it with @mail.deliver@. This method used to be the only delivery method. With newer Rails versions, there is (with some variations) @deliver_now@ and @deliver_later@. Redmine usually calls @deliver@ which in source:trunk/config/initializers/10-patches.rb#L160 calls @deliver_now@ currently.\r\n\r\nWhen calling @mail.deliver@, the delegator starts to render the mail:\r\n\r\n* \"@MessageDelivery#processed_mailer@\":https://github.com/rails/rails/blob/v5.1.3/actionmailer/lib/action_mailer/message_delivery.rb#L103-L107 creates a new @Mailer@ instance and calls @process@ on it.\r\n* @Mailer#process(:news_added, news)@ - The @process@ method is part of ActionMailer (and in turn part of the @ActionController@ framework on which ActionMailer is based on). Among things, it calls the specified action, i.e. the instance method.\r\n* @Mailer#news_added(news)@ - This instance method is implemented on the Mailer class and is responsible to render the actual mail message. Here, we set headers, instance variables for the view and basically do the usual controller stuff. With a final call to @mail@, we eventually render a single mail and return a @Mail::Message@ object.\r\n* This returned @Mail::Message@ object is delivered with a call to @Mail::Message#deliver_now@.\r\n\r\nh2. How we hook into this process\r\n\r\nNow, in order to send multiple mails, we hook into this process to render (and deliver) multiple mails. We want to ensure two things:\r\n\r\n* We want to create multiple mails, one per recipient and deliver them all in one go.\r\n* When rendering the mail (i.e. when calling the Mailer's instance method), we want to set @User.current@ to the recipient user and set it back to the original value after the rendering is done\r\n\r\nThese two goals are achieved with two specific changes to our Mailer:\r\n\r\nWe introduce a wrapper class called @Mailer::MultiMessage@. Instances of this class wrap multiple @Mail::Message@ objects (or rather @ActionMailer::MessageDelivery@ objects which delegate to @Mail::Message@ objects). The class provides the same @deliver_*@ methods as the original @Mail::Message@ objects. When calling such a method, we are calling it on each of the wrapped messages. This allows us to use an instance of this class in place of a @ActionMailer::MessageDelivery@ object.\r\n\r\nWe use this class by implementing _class methods_ for each mailer action. These class methods implement the same external interface (i.e. accept the same arguments) as the old instance methods. This ensures that we keep the existing public interface. The class methods fetch the recipient users for the respective object (i.e. the issue, news, comment, ...). We use @Mailer::MultiMessage#for@ to add an @ActionMailer::MessageDelivery@ object for each recipient which eventually renders the mail.\r\n\r\nWhen creating the delegator, we also pass the recipient user to the arguments for the mail rendering. We use this user in the overwritten @Mailer#process@ method to set @User.current@ and their language before actually rendering the message. This convention allows us to keep the interfaces clear: the user is only passed between the class method and @Mailer#process@ but doesn't need to be specified on the instance action. Here, it is already set as @User.current@ for each rendered mail.\r\n\r\nWe also extend @Mailer.method_missing@ (on the class) to create a single-mail @Mailer::MultiMessage@ object with the current user in case the class method for an action is not explicitly overwritten. This ensures that our convention of always passing a user to @Mailer#process@ is kept up even if a plugin only adds an instance method (which was valid before).\r\n\r\nh2. What we tried and did not work\r\n\r\nI first attempted to set the current user directly in the action's class method. and reset it directly afterwards. That would have made the code much more localized. However, due to the delayed rendering of the mail with the @ActionMailer::MessageDelivery@ object, the mail will be rendered only after we have already reset the current user.\r\n\r\nOne way to work around this would be to introduce @deliver_*@ methods (like the now obsolete @Mailer.deliver_issue_add@ method). However doing so would have changed the intended external interface of our @Mailer@ class and would likely lead to integration pain with all existing Redmine plugins sending mail.\r\n\r\nh2. What we ship\r\n\r\nWe ship three patches here:\r\n\r\n* @0001-Send-individual-emails-for-each-mail-recipient.patch@ - The main implementation including tests.\r\n* @0002-Cleanup-Remove-Issue-each_notification-and-Journal-e.patch@ - Removes unneccessary methods for grouping recipients based on custom field visibility\r\n* @0003-Optional-Ensure-that-ActiveRecord-Base-objects-are-f.patch@ - An optional patch which changes the serialization behavior when sending mails with ActiveJob (e.g. with @Mailer.news_added(news).deliver_later@). By default, Rails serialized the arguments as a globalid (which is basically a reference to the object in the database identified by its ID). If there are concurrent changes to e.g. a newly created issue, this might result in notifications using the new state instead of the original state. With this patch, we serialize the exact attributes of the given objects into the job. Since this also causes nested attributes to be serialized along, care must be taken to avoid reference errors. In general, we should probably try to use mostly immutable state in the database where it is an important consideration that the notification state is exactly shown in the DB.\r\n\r\nh2. Future work\r\n\r\nh3. ActiveJob sending\r\n\r\nIf the general direction of this patch is accepted, it is probably desireable to move the mail sending to ActiveJob completely. This could replace the @async_*@ delivery methods [[EmailConfiguration#Asynchronous-delivery_methods|currently configurable]] in @configuration.yml@. This change can either be hardcoded in source:trunk/config/initializers/10-patches.rb#L160 or made configurable with a setting. I'll be glad to provide a patch for this. It would only be a few lines of code.\r\n\r\nBy default, we could use the in-process ActiveJob runner to send mails. More advanced users with a dedicated job worker (e.g. delayed job) can easily switch to that without changes to the Redmine code itself.\r\n\r\nh3. BCC recipients\r\n\r\nSince each user gets their own mail, we can probably remove the setting to send mails with BCC completely. If plugins want to send mails to non-user recipients, we would have to make sure to either set the recipients manually on BCC or group them appropriately. It is not a required setting in Redmine core anymore though."}]}}
{"custom_id": "199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nregarding watcher added in private project but not getting notification \n\n--Description--\nHi \r\n   Created private project in redmine with role and permission called (viewownissue). when adding watchers , their are not getting notification nor email with ticket link \r\n\r\nCan anyone help with this "}]}}
{"custom_id": "200", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "201", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAdd option for append mail header to ticket\n\n--Description--\nCurrently, if a user isn't registered at redmine and you allow to receive mails from unknown users, a ticket will created assigned to no one.\r\nIts okay, but somehow it should possible to find out, who has send that mail. I suggest, add the header of the mail to the ticket so the sender mail address and name if exists is available."}]}}
{"custom_id": "202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nMake other destinations visible in the Redmine notification email\n\n--Description--\nMake other destinations visible in the Redmine notification email\r\n\r\nh1. Proposal\r\n\r\nIn Redmine4.0, other destinations are no longer displayed in the notification email.\r\n\r\nThis is a side effect of the following changes in Redmine 4.0.\r\nhttps://redmine.org/issues/26791\r\n\r\nDepending on the contents of the ticket, it may be necessary to confirm who is notified.\r\nFor example, the response may change depending on whether the trouble ticket content is delivered to the CEO.\r\n\r\nIn Redmine3.4, it was found from the To / Cc column of the notification email that the email was sent to someone else.\r\nIn Redmine 4.0 or later, you can not understand without checking the ticket.\r\n\r\nAlso, the amount sent to the person who has been set to \"notify all\" in the personal settings cannot be confirmed on the ticket.\r\n\r\nh1. Solution\r\n\r\nThere is no problem in sending individual emails.\r\nThe only inconvenience is that you can no longer check the simultaneous notification destination directly from the email.\r\n\r\nIt seems that the conventional To / Cc (watch) can be added to the beginning of the email text by setting the individual ID unit.\r\n\r\nh1. Supplement\r\n\r\nIn Redmine3.X, there was a side effect that other destinations could be known by batch mailing. (Specification changed in 4.0)\r\nIt seems that it was not recognized that there were cases where this was used as a substantial function.\r\n(In some cases, it may be necessary to respond depending on the email notification destination)\r\n\r\nYou can tell by checking the ticket from the link on the notification email, but it will be a burden if there are many cases.\r\n\r\n/* The following is a Japanese supplement */\r\n\r\nRedmine\u306e\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u3001\u4ed6\u306e\u5b9b\u5148\u3092\u8868\u793a\u53ef\u80fd\u306b\u3059\u308b\r\n\r\n\u25a0\u63d0\u6848\u5185\u5bb9\r\n\r\nRedmine4.0\u306b\u3066\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u3067\u4ed6\u306e\u5b9b\u5148\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u3002\r\n\r\n\u3053\u308c\u306fRedmine4.0\u306e\u4e0b\u8a18\u5909\u66f4\u306b\u3088\u308b\u526f\u4f5c\u7528\u3067\u3042\u308b\u3002\r\nhttps://redmine.org/issues/26791\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u306e\u5185\u5bb9\u306b\u3088\u3063\u3066\u306f\u3001\u4ed6\u306e\u8ab0\u306b\u901a\u77e5\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u5fc5\u8981\u306a\u5834\u5408\u3082\u3042\u308b\u3002\r\n\u4f8b\u3048\u3070\u3001\u30c8\u30e9\u30d6\u30eb\u306e\u30c1\u30b1\u30c3\u30c8\u5185\u5bb9\u304cCEO\u306b\u914d\u4fe1\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u5bfe\u5fdc\u304c\u5909\u308f\u308b\u5834\u5408\u3082\u3042\u308b\u3002\r\n\r\nRedmine3.4\u306e\u6642\u306f\u3001\u901a\u77e5\u30e1\u30fc\u30eb\u306eTo/Cc\u6b04\u304b\u3089\u3001\u4ed6\u306e\u8ab0\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u5224\u3063\u305f\u304c\u3001\r\nRedmine4.0\u4ee5\u964d\u3067\u306f\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3057\u306a\u3044\u3068\u5224\u3089\u306a\u3044\u3002\r\n\r\n\u307e\u305f\u3001\u500b\u4eba\u8a2d\u5b9a\u3067\u300c\u3059\u3079\u3066\u901a\u77e5\u300d\u306b\u3057\u3066\u3044\u308b\u4eba\u3078\u306e\u9001\u4fe1\u5206\u306f\u3001\u30c1\u30b1\u30c3\u30c8\u4e0a\u304b\u3089\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\r\n\r\n\u25a0\u89e3\u6c7a\u7b56\r\n\u30e1\u30fc\u30eb\u306e\u500b\u5225\u9001\u4fe1\u81ea\u4f53\u306b\u306f\u554f\u984c\u306a\u3044\u3002\r\n\u540c\u6642\u901a\u77e5\u5148\u3092\u30e1\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u78ba\u8a8d\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u306e\u304c\u4e0d\u4fbf\u306a\u3060\u3051\u3002\r\n\r\n\u500b\u4ebaID\u5358\u4f4d\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u3001\u5f93\u6765\u306eTo/Cc(watch) \u3092\u30e1\u30fc\u30eb\u30c6\u30ad\u30b9\u30c8\u5148\u982d\u306b\u4ed8\u3051\u3089\u308c\u308c\u3070\u826f\u3044\u3068\u601d\u308f\u308c\u308b\u3002\r\n\r\n\u25a0\u88dc\u8db3\r\nRedmine3.X\u3067\u306f\u3001\u30e1\u30fc\u30eb\u4e00\u62ec\u9001\u4fe1\u306b\u3088\u308a\u4ed6\u306e\u9001\u4fe1\u5148\u304c\u5224\u308b\u3068\u3044\u3046\u526f\u4f5c\u7528\u304c\u3042\u3063\u305f\u3002\uff084.0\u3067\u4ed5\u69d8\u5909\u66f4\uff09\r\n\u3053\u308c\u3092\u5b9f\u8cea\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u3001\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\r\n\uff08\u30e1\u30fc\u30eb\u901a\u77e5\u5148\u306b\u3088\u308a\u5bfe\u5fdc\u5fc5\u8981\u306a\u30b1\u30fc\u30b9\u3082\u3042\u308b\uff09\r\n\r\n\u901a\u77e5\u30e1\u30fc\u30eb\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c1\u30b1\u30c3\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5224\u308b\u304c\u3001\u4ef6\u6570\u304c\u591a\u3051\u308c\u3070\u8ca0\u62c5\u306b\u306a\u308b\u3002\r\n\r\n\u672c\u30c1\u30b1\u30c3\u30c8\u306e\u5bfe\u5fdc\u306f\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u307e\u3059\r\nhttps://redmine.tokyo/issues/1083\r\n"}]}}
{"custom_id": "204", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAbility to set default value for  \"I don't want to be notified of changes that I make myself\"\n\n--Description--\nHello,\r\n\r\nI search many possibilites to change the default value of no_self_notified when creating a new user.\r\nActually default is true.\r\n\r\nline 54 to 56 in /app/models/user_preference.rb\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = true\r\nend\r\n</code></pre>\r\n\r\nmight be :\r\n\r\n<pre><code class=\"ruby\">\r\nunless attributes && attributes.key?(:no_self_notified)\r\n  self.no_self_notified = Setting.default_users_no_self_notified\r\nend\r\n</code></pre>\r\n\r\nand add in config/settings.yml\r\n\r\n<pre><code class=\"yaml\">\r\ndefault_users_no_self_notified:\r\n  default: true\r\n</code></pre>\r\n\r\nWith this change, we can modify the default value without changing source code of Redmine.\r\n\r\nthis may be implemented in a future release ?\r\n\r\nRegards, \r\n\r\nPierre"}]}}
{"custom_id": "205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAllow redmine to provide reply-to email header\n\n--Description--\nRedmine outgoing email does not provide a reply-to header.  Many email relays which require a user-id/pw login (e.g. smtp.gmail.com) replace the sender@domain with the user-id of the login account.  Consequently, when the receiver replies to the email, it goes to the login user-id and domain, rather than the sender user@domain set by redmine where the issue originated.\r\n\r\nThis patch provides a check-box in the email-notifications settings which, when set, causes redmine to provide a reply-to header identical to the sender (user@domain).  This allows replies to be routed to the redmine instance where they originated, and be incorporated into the issue.\r\n\r\nThe attached tarball of .diff files is for:\r\n  redmine-4.1.1\r\n  ruby 2.6.6p146  (not relevant)\r\n  Rails 5.2.4.2   (provides base mailer, not especially relevant)\r\n  mysql 5.7       (not relevant)\r\n  plugins: Additionals (not relevant)"}]}}
{"custom_id": "206", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nEmail notifications on specified filters\n\n--Description--\nDear all,\r\n\r\nis there a plugin working for latest redmine releases enabling us to create filters in \r\nredmine and then sending emails in case of new entries to these?\r\n\r\n\r\ne.g. we have several custom fields we use. We create filters on these. \r\nIf a new ticket falls into this filter, we'd like to receive email notifications. \r\n\r\nThere has been the issue reminder plugin, but it seems it's not working in latest versions anymore,\r\nso that we now search for a plugin filling our needs.\r\n\r\nThx\r\nRgds\r\nBenjamin"}]}}
{"custom_id": "207", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nSitewide news plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original news feature with following:\r\n\r\n* notifies a news to every active users via e-mail on-demand and with the permission to do so\r\n\r\nWe are using this feature to distribute such as system suspension notice .\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nShow notifications for all Redmine users\n\n--Description--\nThis patch adds the feature to display text throughout the site once it has been set in Settings > Administration.\r\n\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.31.png!\r\n!{width: 500px; border: 1px solid #ccc}screenshot-2021-11-11-10.41.49.png!\r\n\r\nThere is already a famous plugin called Redmine banner that is used by many people. https://www.redmine.org/plugins/redmine_banner\r\nThis patch only provides very simple functionality, so I think you will need the Redmine banner plugin to change the notification destination and design."}]}}
{"custom_id": "209", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nsent notice to members  while objects be changed  in DMS\n\n--Description--\nHow can the admin or owner specify a number of recipients as a consistent-property of the DMS's folders ,no matter updated or added new files in the willing DMS folders, Redmine will sent notice to the recipients automatically? \r\nIt would be efficient to our daily office works.\r\n\r\nunder version :\r\nRedmine 4.1.1.stable ; DMSF 2.4.5"}]}}
{"custom_id": "210", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nVarious features for MailHandler\n\n--Description--\n  Hi,\r\n\r\n  For my local redmine instance (4.0.7-1~bpo10+1 from Debian package), I needed to improve the MailHandler behavior.\r\nI'm sharing here my work in case it can be useful to others. Perhaps some modification might be added to official redmine, it is up to you.\r\nI'm new in ruby, so do not hesitate to correct me if they are improvement that can be done.\r\n\r\n  My patch add the following behaviors:\r\n\r\n1) keep some headers in messages\r\n  It occurs several time I've been missing some information present in the original mail. So, I added some functions to keep them (to, cc, bcc (and subject for replies))\r\n  This is the part about headers_as_text and header_as_text\r\n  It is my first try. All is hardcoded in the code (no option)\r\n\r\n2) Allows one to specify the start of a line as a regexp when matching redmine keyword\r\n  So, invoking redmine:email:receive_imap with reprefix='Redmine:? ?' forces redmine to only look at line starting with this motif (before all keywords such as Project: ...). This avoid false positive line in the mail...\r\n  For this, there is a small modif to read the option from env and a small modif in extract_keyword! to add this prefix (and to use named match group as the prefix can add new groups '()')\r\n\r\n3) And the biggest part: something that allows to answer to an issue without knowing the issue number.\r\n  One of my initial goal was to be able to keep track of icinga problems in Redmine.\r\n  Initially, I setup icinga to send notification to redmine. It works, but all messages creates new issues (either for new problems, but also for notification of fixed problem).\r\n  So, redmine was having lots of issues, and manual work was required if we want to close issue correctly.\r\n  I was difficult to do more things from icinga because icinga runs on a machine that cannot access to the web interface of redmine (no way for me to change this politic), so I cannot imagine icinga to look for the correct issue number (and I would not even know how to do this if the systems was on the same machine).\r\n\r\nSo, I imagine another idea. I use a specific custom field. Icinga sets up this field in all its mails, making unique by problem.\r\nOn redmine part, in the dispatch_to_default, before creating an issue, I first check if\r\na) the custom field is set\r\nb) and an issue is opened with the custom field set to this value\r\nIf both conditions are present, I add a reply to the issue (instead of creating a new issue)\r\n\r\nOn redmine part, there is just an option to choose the custom field to use (ext_ref in my implementation)\r\nOn icinga, I added this kind of things in the message (it is prepared by a bash script):\r\n<pre>\r\n## Redmine links\r\ncat << EOF\r\nRedmine external reference: icinga-service: ${SERVICENAME}@${HOSTNAME}\r\nRedmine machine: ${HOSTNAME}\r\nRedmine service: ${SERVICENAME}\r\nEOF\r\nif [ \"$SERVICESTATE\" = OK ]; then echo \"Redmine Status: Termin\u00e9(e)\"; fi\r\n</pre>\r\n  Machine and Service being to other custom fields in my tracker (and \"External Reference\" is the name of the custom field I'm using and that I give with the ext_ref='...' new parameter)\r\n\r\nSo now, new icinga problems creates new tickets. But futher notifications for the same problem (host/service) are added to the same redmine issue, until the problem is gone (\"$SERVICESTATE\" = OK) that will close the ticket. If another problem occurs with the same host/service, a new ticket will be created. I a separate problem occurs with different host and/or service, another ticket will be used.\r\n\r\nA few word about my code:\r\n1) I'm not sure I correctly use IssueQuery. I do not find lots of examples (from ruby point of view) and I'm under the impression that the way I add the custom field filter (from its name and the searched value) is a hack.\r\n2) I'm pretty sure that IssueQuery won't work with no_permission_check=1 (but again, I did not find any doc about the restriction on issues that IssueQuery return (visible to the current user?, ...?))\r\n3) I needed to find a keyword (the custom field value) at the start, before the place where it will be extracted and write into the issue.\r\n  With the initial implementation of get_keyword/extract_keyword!, the custom field value would be erased at the start, and not seen later when the issue must be updated.\r\n  So I added a parameter to these to function that allows one to avoid to modify the message.\r\n  It is not a proper code (extract_keyword! can be a method that do *not* modify the text, ...), it would probably need to be rewritten correctly.\r\n\r\nAnd, for the end, an idea that I will perhaps implement (not yet done): two different options for allow_override: one used for new issues, one used when replying to an issue.\r\n\r\nEven if these ideas are not added to core Redmine, I think they can be useful for other people. Having looked on Internet, I was not the only one trying to make icinga and redmine work together.\r\nAnd this framework can (and will in my case) be use in other contexts:\r\n- linking issues from redmine and another ticket system (just an idea for now, but it should be doable)\r\n- allowing an external pipeline to create and update the good issue by mail (based on an external unique pipeline run ID)\r\n- ...\r\n\r\nRegards,\r\n    Vincent"}]}}
{"custom_id": "211", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "212", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nIncrease email address length limit from 60 to 254\n\n--Description--\nHello,\r\n\r\nIn REDMINE, mail length is limited to 60 characters (MAIL_LENGTH_LIMIT in app/models/user.rb)\r\n\r\nTo accept all mails, it could be updated to 254 characters. \r\n\r\n(cf. https://blog.moonmail.io/what-is-the-maximum-length-of-a-valid-email-address-f712c6c4bc93)\r\n\r\nThanks."}]}}
{"custom_id": "213", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAllows an option to temporarily mute email notification per user and/or per role\n\n--Description--\nIt is very useful to have an option that allows you to temporarily disable email notifications for users or groups that have permission (aka the Redmine stealth plugin). This especially for Team Leaders who frequently vary the position / priority of the issues of the ToDo lists of their collaborators. In this way, they could avoid intruding a not small number of useless emails."}]}}
{"custom_id": "214", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nOptions to manage Mail replies on closed Tickets\n\n--Description--\nHi,\r\ncurrently its possible to send Mail to closed tickets and they are processed in the same way like the ticket is open.\r\n\r\nI think it is very helpful to add an option that if a mail comes for a closed ticket\r\na) an answer mail is sent with a customizable text like \"This Ticket is closed; Please open a new one\" or\r\nb) a new Ticket should be created with reference to the closed ticket.\r\nc) leave default behaviour active\r\n\r\nIt would be perfect, if the configuration could be made at project level.\r\n\r\nI think this Features is an \"normal\" Feature compared to other Project Management Tools.\r\n"}]}}
{"custom_id": "215", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nCustom email sender per project\n\n--Description--\nI need to set a custom email sender per project. There used to be plugins for very old redmine versions, but these don't work with current versions any more:\r\n\r\nhttps://github.com/Warecorp/redmine_project_specific_email_sender\r\nhttps://github.com/eashman/redmine_author_notification_emails\r\n\r\nMy current solution is to add a custom mail_from field to projects and patch app/models/mailer.rb like this:\r\n\r\n<pre>\r\n678a679,686\r\n>     # CE: project specific mail from address\r\n>     if @issue\r\n>       new_mail = @issue.project.custom_field_values[0].value\r\n>       if !new_mail.nil?\r\n>         headers.merge!('From' => new_mail)\r\n>       end\r\n>     end\r\n> \r\n</pre>\r\n\r\nI'm wondering if someting like this could be add to redmine.\r\n"}]}}
{"custom_id": "216", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "217", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nReceive e-mail replies to news and news comments\n\n--Description--\nCurrently e-mails sent in reply to notifications from news or news comments are ignored. The proposed patch adds the ability to import answers to news and news comments.\r\n\r\nThis patch requires https://www.redmine.org/issues/38273"}]}}
{"custom_id": "218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nChange the default notification option to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option of a user is \"Only for things I watch or I'm involved in\". This means that a user will receive notifications about issues of which the user is an author, assignee, or watcher. I think it would be better to change the default value to \"Only for things I watch or I am assigned to\". With the option, the user will receive notifications about issues of which the user is an assignee or watcher.\r\n\r\n* \"Only for things I watch or I'm involved in\" (internal name is @only_my_events@): issues of which the user is an *author*, assignee, or watcher\r\n* \"Only for things I watch or I am assigned to\" (internal name is @only_assigned@): issues of which the user is an assignee, or watcher\r\n\r\nIn Redmine 5.1, we will have \"Auto watch issues on issue creation\" feature (#38238). Since the new feature is enabled by default for newly created users, new users in Redmine 5.1 automatically become a watcher of issues they create. Becoming an issue watcher automatically means that the user will always receive notifications for issues they create even if the user's notification option is set to \"only_assigned\". Whether the setting is \"only_my_events\" or \"only_assigned\", the type of notifications received will be the same.\r\n\r\nGiven that \"only_my_events\" and \"only_assigned\" behave the same when the user's settings are left at their defaults, I think it would be better to change the default setting for email notifications (@Setting.default_notification_option@) from \"only_my_events\" to \"only_assigned\" because of the following reasons:\r\n\r\n* Users can stop notifications of issues they created by unwatching those issues. This fulfills feature requests such as #6914 and #27135\r\n* The behavior is confusing if \"Auto watch issues on issue creation\" is enabled and the notification setting is \"only my events\". The user will assume that the reason they receive notifications about issues they created is that they watch the issues. And if they want to stop receiving notifications, they will unwatch the issue. However, unwatching will not stop notifications when the notification setting is \"only_my_events\".\r\n\r\n\r\n"}]}}
{"custom_id": "219", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nCustom templates for email notifications\n\n--Description--\nCurrently email notifications is hardcoded into soources but they are not intuitive and non-usable for automation.\r\nI want to have possibility to create filters in my mail client to sort different notifications using different rulles.\r\n\r\nIt will be nice to have customizable mail templates for subject and body in some future releases but for now I made next changes to have this for now:\r\n\r\n* I added some templates in localization file looking like:\r\n\r\n<pre>\r\n  # project - project name\r\n  # tracker - tracker name\r\n  # id      - issue id\r\n  # status  - issue status\r\n  # subj    - issue title\r\n  # from    - user made changes\r\n  # to      - assigned to\r\n  mail_subject_issue_new: 'ISSUE NEW: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n  mail_subject_issue_update: 'ISSUE UPDATE: by \"%{from}\" for \"%{to}\" %{status} in \"%{project}\": %{subj}'\r\n\r\n  # no args\r\n  mail_subject_test: 'Remine test message'\r\n</pre>\r\n\r\n* Changed code in \"Redmine\\app\\models\\mailer.rb\" to use them like this:\r\n\r\n<pre>\r\n    s = l( \"mail_subject_issue_new\", \r\n           project:    issue.project.name, \r\n           tracker:    issue.tracker.name, \r\n           id:         issue.id, \r\n           status:     issue.status.name, \r\n           subj:       issue.subject,\r\n           from:       issue.author.name,\r\n           to:         issue.assigned_to.name )\r\n\r\n    mail :to => user,\r\n      :subject => s\r\n</pre>\r\n\r\nNow I have possibility to easy change subject templates as I need.\r\n\r\nMay be you found this way to implement this feature easy enought to add such changes.\r\n\r\nIn attachments both changed files.\r\nAll based on current trunk version and works on:\r\n\r\n<pre>\r\n Redmine version                5.0.5.stable\r\n  Ruby version                   2.7.6-p219 (2022-04-12) [x86_64-linux]\r\n  Rails version                  6.1.7.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                sendmail\r\n</pre>\r\n\r\n"}]}}
{"custom_id": "220", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nProvide some ways to find the issues where an user Is mentioned \n\n--Description--\nAt this time there isn't a way to find all issues where an user is mentioned nor via filter nor via email.\r\nShould be possibile to:\r\n* to search issue where i'm mentioned \r\n* customize the subject of the email related to comment where i'm mentioned.\r\n\r\nThe old plugin used before the landing of this feature in redmine-core, was implement the way 2\r\n"}]}}
{"custom_id": "221", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "222", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEmail notification settings\n\n--Description--\nHi \r\n\r\nIt would be great if we had more flexibility in email setup for non registered users - I hope you can help?\r\n\r\nWould it be possible to look at having a per project option of using default email address or custom address when sending out email alerts?\r\n\r\nAlso at present its only project members who are able to receive ticket updates, could it be possible to have a cc field in which you could specify other email address (non registered users) when making ticket updates.\r\n\r\nThese two options combined would make the workflow of ticket handling for non registered users a lot slicker.\r\n\r\n\r\nI found these in the forums which are similar https://www.redmine.org/boards/1/topics/48847\r\nhttps://www.redmine.org/boards/2/topics/2476\r\n\r\n\r\nThanks in advance for your time and keep up the great work \r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nChange the default notification option for users to \"Only for things I watch or I am assigned to\"\n\n--Description--\nCurrently, the default notification option for a new user is *\"Only for things I watch or I'm involved in\"* (internal_name: only_my_events) . This sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *created* by the user\r\n* The issue is *assigned* to the user\r\n\r\nI think the default option should now be *\"Only for things I watch or I am assigned to\"* (internal name: only_assigned) which sends notifications when any of the following conditions are met.\r\n\r\n* The issue/object is *watched* by the user\r\n* The issue is *assigned* to the user\r\n\r\nThis is because Redmine 5.1.0 has an auto watch for newly created issues (#38238) and the option is enabled by default for newly created users, and the behavior of the combination of auto watch and only_my_events is somewhat confusing.\r\n\r\nConsider the following scenario:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_my_events\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# But the user still receives notifications because the notification option is only_my_events, and they are the author of the issue\r\n\r\nIf the default notification option is changed from only_my_events to only_assigned, this confusion will be eliminated. Here is a scenario in this case:\r\n\r\n# Admin creates a new user. The user has all auto watches enabled by default, and the email notification option is set to only_assigned\r\n# The user creates an issue. Since all auto watches are enabled for the user, they are added as a watcher\r\n# The user receives notifications about the issue\r\n# The user decides they do not want to receive notifications anymore and unwatches the issue\r\n# The user does not receive notifications anymore because the notification option is only_assigned, and they are no longer a watcher\r\n\r\nAs illustrated above, in Redmine 5.1, the behavior is more understandable if the notification option defaults to only_assigned."}]}}
{"custom_id": "223", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdd journal count on issues list\n\n--Description--\nI think that viewing journal count is better than nothing.\r\nBecause it is easy to understand issues's activity.\r\nso I make this patch."}]}}
{"custom_id": "224", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFiltering using more than one instance of each field\n\n--Description--\nI would like to filter issues using more than one instance of each field.\r\nExample:\r\nissues with subject containing \"email\" but not containing \"server\"..."}]}}
{"custom_id": "225", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nList of tasks filtered as OR and not AND\n\n--Description--\nHello\r\n\r\nUp to now in the list of task you can filter upon some values but the list of filters are \r\nList of tasks that has\r\nfilter1=value1 AND filter2=value2 AND filter3=value3\r\n\r\nI think it could be interesting to have the possibility of\r\nList of tasks that has\r\nfilter1=value1 OR filter2=value2 OR  filter3=value3\r\n\r\nDo you think it is possible? thank you"}]}}
{"custom_id": "226", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "227", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdd filters for \"Author's group\" and \"Author's role\" to issues list\n\n--Description--\nIs it  possible to add group of auther for filtering of tasks?"}]}}
{"custom_id": "229", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nPer-tracker issue categories\n\n--Description--\nIt would be very useful when defining categories inside a Project if one could select what trackers this category is valid for (similar to the way one selects what trackers are used in a Project).\r\n\r\nCase example:\r\n\r\nFor our \"feature\" tracker we only need 3 categories, each assigned to one of three users who will follow up the feature request and do a design for that area. However for \"bugs\" tracker there are a lot more categories as these are assigned to individual engineers responsible for a given area. Having to see (and be able to select!) all these categories in the \"feature\" tracker makes our users submit a lot of requests that end up in the wrong place.\r\n\r\nOf course we could split every single project into sub-projects and have only one tracker (and one set of categories) in each sub-project, however this is a less than optimal workaround..."}]}}
{"custom_id": "230", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "232", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Updated by\" and \"Last updated by\"\n\n--Description--\nThere appears to be no good way to filter by involvement. I think that maybe there are 2 filters needed here.\r\n\r\n*updated by* (this would be general involvement, other users could have updated an issue afterwards)\r\n*last updated by* (this would be specifically to find issues by _who touched it last_)\r\n\r\nSimilarly I think that these need to be added as _available columns_.\r\n\r\nBTW I did try this plugin (https://github.com/neowit/redmine_last_updated_by_column) but it was kind of broken, and I don't think it quite addresses this general need."}]}}
{"custom_id": "233", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "234", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "235", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "236", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdd the possibility to filter issues after Target Version's Status and Due Date\n\n--Description--\nCurrently, we have the possibility to filter issues only after target version name and target version's custom fields (that have the \"Used as a filter\" checked). \r\n\r\nIt'll very helpful to have the possibility to filter after target version status (open/locked/closed) and target version due date (effective_date). With these 2 new filters you can cover most of the use cases related to target version. \r\nSome examples:\r\n- a query that returns all the issues that are assigned in open versions\r\n- a query that returns all the issues that are assigned in versions with due date\r\n\r\nThe attached patch:\r\n- implements these new 2 filters\r\n- groups the target version status and target version due date with target version's custom fields under the label Target Version . I wasn't sure that is a good idea to move also the existing target version filter (name) to this group. (attached target_version_group.png)\r\n- adds 2 new tests\r\n- breaks an existing tests (QueryTest#test_total_by_project_group_for_spent_hours), but  I'm not sure how to fix the problem. The respective test have also a to do comment to remove some code after this \"issue\":https://github.com/rails/rails/issues/21922 is fixed (and is was fixed). \r\n\r\nI think that this ticket is related to #21249  \r\n"}]}}
{"custom_id": "237", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "238", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAllow updating existing issues via CSV import when their ID's are the same\n\n--Description--\nI'd like to have the possibility to update issues with a csv import.\r\nAtm, if i import a task with an already existing ID, the ID changes and a new task is created."}]}}
{"custom_id": "240", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nCalculate parent Issue's done ratio from subtasks in case of 'Use the issue status'\n\n--Description--\nAdmin -> Settings -> Issue Tracking:\r\n> Calculate the issue done ratio with => 'Use the issue status'\r\n> Parent tasks attributes : % Done => Calculated from subtasks\r\n\r\nIf I set NEW is 0%, CLOSED is 100%.\r\nWhen all subtasks are closed, the parent issue still is 0% (status is NEW).\r\nBut I hope it be 100%.\r\n\r\nCan you add a switch? Force calculate the parent done ratio from subtasks?"}]}}
{"custom_id": "241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nTarget version filter should get an entry 'All open versions'\n\n--Description--\n_This is my request #10412-20 as an own issue:_\r\n\r\nThe filter for target versions should also get another entry so I can choose all open versions with a single selection. This could be helpful if you consider that filters can be stored in queries."}]}}
{"custom_id": "243", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud"}]}}
{"custom_id": "244", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "245", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nMerging issues\n\n--Description--\nUser story:\r\nSometimes people in team are creating different tickets for the same problem. Moreover in both tickets I see useful information. To avoid copying data from one issue to another, assigning as duplicated etc, I'd like to have posibility to marge selected issues.\r\nIt can be available in issues report under right mouse  button.\r\n\r\n"}]}}
{"custom_id": "246", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "247", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nEnabling creating issue within the project regarding the subproject\n\n--Description--\nHey,\r\n\r\nIm managing many projects, which do not have trackers as they are something general. \r\nUnder each project I have a lot of subprojects, in which I do have trackers for issues creation. \r\nI would like to be able to create an issue straight from project (*without* accessing the subproject), but the issue *must be* related to specific subproject\r\nIs it possible to create such option? I could not find any info regarding it. \r\n\r\nThanks "}]}}
{"custom_id": "248", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFiltering by two or more values for parameters without choosable options\n\n--Description--\nHi!\r\nIs there an opportunity to insert for parameter \"Subject\" several values for filtering?\r\nFor example, I want to exclude issues which contain two or more values (as I can do with \"Tracker\" or \"Status\" parameters)"}]}}
{"custom_id": "249", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nSubtasks inherit parent settings during copy\n\n--Description--\nHi,\r\noften I copy issues across versions. My issues have a lot of subtasks.\r\nIt would be useful if when I set, for example, version or status on  parent issue the same are set on the subtasks.\r\nWithout this I must modify them afterwards, and this in not always easy.\r\n\r\nRegards\r\nAlessandro\r\n "}]}}
{"custom_id": "250", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "251", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nSupport issue relations when importing issues\n\n--Description--\nAs promised in #22701, I now would like to propose a patch, which adds handling of issue relations to the CSV importer.\r\n\r\nh3. Usage\r\n\r\nThe attached patch extends the import configuration view with a new block, so that users may select a column for each relation type. The parent issue field also moved to the new block, since it's conceptually related.\r\n\r\nWithin the CSV file the columns may define multiple relations of the same type, each separated with @,@. Related issues follow the same rules as parent issues. A string preceded with a @#@ is supposed to be an existing issue. Without the @#@ it's supposed to be another row within the import file. For _follows_ and _precedes_ relations an additional delay may be present, e.g. @#12 3d@ specifying a relation to issue @#12@ and a delay of 3 days.\r\n\r\nh3. Technical notes\r\n\r\nSince issue relations may only be created when the issue was already saved, I've added a second step to the import. Additionally to @build_object@, which needs to be implemented by @Import@ sub classes, there's also a @extend_object@ method now. This is used by the @IssueImporter@ to save the relations after the issue was already saved successfully.\r\n\r\n\r\nh3. Additional considerations\r\n\r\nInitially, I wanted to build the import, so that issue relations exported from Redmine could be imported directly. But the format that's used by the exporter was designed for humans, not so much for computers. Most importantly, to parse this format we would need to grep for the localized relation names, which might even change between versions of Redmine. Therefore I settled for the proposed approach of having separate columns for each relation type."}]}}
{"custom_id": "252", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "253", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter by issue statuses on reminder task\n\n--Description--\nI need an issue statuses filter on reminder task in order to send the notification only for specific issue statuses.\r\n\r\nThe attached patches provide the option statuses that accept a comma separated list of issue_statuses ids (defaults to all issue_statuses).\r\nusage example:\r\n\r\n<pre>\r\nbundle exec rake redmine:send_reminders statuses='1,2' RAILS_ENV='development' \r\n</pre>\r\n\r\nI ask for a review of the patches and their implementation in Redmine code."}]}}
{"custom_id": "254", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssues filter: Adding a <<Nobody>> special entry to the user list\n\n--Description--\nSometimes it would be useful to have a special entry like <<Nobody>> in the user list, when filtering issues. The use case is the following: A user wants to filter issues, that are assigned to him OR are assigned to nobody, so that he can find issues to work on. Currently he can only filter for one specific user or a list of existing users, but he cannot select \"nobody\" as an additional user. So he has to open the issue list two times with different filters.\r\n\r\nThere was already a similiar request in #689, but it is no possible to have a filter like: \"Assigned to <<Me>> OR <<Nobody>>\"\r\n\r\nThank your for considering this feature request."}]}}
{"custom_id": "255", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "256", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter out issues from closed projects in My Page blocks\n\n--Description--\nUsers see issues assigned to them on My Page, even when the project is closed.\r\nSo it's difficult because someone with rights to open/close project needs to re-open project, close affected issues (or change Assignee) and then close project again.\r\nI think that the best solution is NOT to display issues of closed projects on the user's My Page."}]}}
{"custom_id": "257", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "258", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAdd has source revisions/check-ins to issue filters\n\n--Description--\nit would be very handy to have a filter criteria for if the ticket is associated with any source code revisions/check-ins.  \r\n\r\nIf set, the issues list would only contain tickets that are associated with source code Revisions."}]}}
{"custom_id": "259", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "260", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\n[ISSUE RELATIONS] Add several relations at a time\n\n--Description--\nFor the moment the relations can be added one by one.\r\nIt could be great to add a group of relations, sending an array of relations, for example."}]}}
{"custom_id": "261", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "262", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "263", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFilter OR / AND for issues and repeated columns in filter settings\n\n--Description--\n1. For what:\r\nI can't do filter now about \"this version or that version\", \"this dates or that dates\", \"this version and status or that version and status\"\r\n\r\n2. What need to do:\r\nIn filter for task add:\r\n* 2.1. Ability to use column many times\r\n* 2.2. Blocks AND / OR\r\n\r\nPS Cool, if i could filter tags with this logic"}]}}
{"custom_id": "265", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "266", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "268", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAllow the user to properly override Setting.display_subprojects_issues on Issue Reports if a project has subprojects\n\n--Description--\nI'd like to know if there is interest in a feature like this:\r\n\r\n!{width:95%;}.2021-07-31_10-49-52.gif!\r\n"}]}}
{"custom_id": "269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nMove subtasks section on issues show view into a separate partial\n\n--Description--\nSubject says it all.\r\n\r\nI'll attach a patch that does this."}]}}
{"custom_id": "270", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "271", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "272", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "273", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "274", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nREST API: Filter issues by multiple tracker ids\n\n--Description--\nCurrently, filtering issues by multiple tracker ids is possible with analyzing issues query filter.\r\n* http://localhost:3000/issues?f%5B%5D=tracker_id&op%5Btracker_id%5D=%3D&v%5Btracker_id%5D%5B%5D=1&v%5Btracker_id%5D%5B%5D=2&v%5Btracker_id%5D%5B%5D=3\r\n\r\nBut building above URL path is not strait forward, and it's preferable to support like the following understandable parameter.\r\n* http://localhost:3000/issues.json?tracker_id=1,2,3\r\n* (On current trunk, this request returns 500 Internal Server Error)\r\n\r\nAttached patch file enables above simple and understandable multiple tracker ids filter issues request.\r\n\r\nNote that this patch was made by @rbt, @tohosaku, @mbasa and me from Redmine patch meetup 14th."}]}}
{"custom_id": "275", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "276", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nTree view for issues list\n\n--Description--\nDear all, please introduce tree view in issue list where it will be possible to expand/collapse subtask list. It will increase readability of issues list. \r\nIn my case there are a lot of tasks with lot of subtasks and it is very hard to use it this way."}]}}
{"custom_id": "277", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "278", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "279", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n"}]}}
{"custom_id": "280", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nOR search with multiple terms for \"starts with\" and \"ends with\" filter operators\n\n--Description--\nCurrently, two filter operators \"contains\" and \"contains any\" support multiple terms. When multiple terms are given, those filters perform AND search or OR search.\r\n\r\nI propose adding support for multiple terms to \"starts with\" and \"Ends with\" operators as well. If multiple terms are given, those operators will perform OR search.\r\n\r\nHere is one of the uses of this feature. Suppose that you want to find issues with PowerPoint or PDF file attached. The result you want is the list of issues that have files whose filenames end with \".pptx\" or \".pdf\". But it is impossible to make a query to get such a result because the current \"ends with\" filter only supports a single term.\r\n\r\nIf the operator supports multiple keywords, the following filter can be applied to get the result you want.\r\n\r\n!{width: 609px; border: 1px solid grey;}.clipboard-202304161138-0fzse.png!\r\n\r\nThe attached patch adds support for OR search with multiple terms for \"starts with\" and \"ends with\" operators. After this patch applied, all operators except \"any\" and \"none\" for string/text filters will support multiple terms."}]}}
{"custom_id": "281", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n"}]}}
{"custom_id": "282", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nNew issues filter operators \"has been\", \"has never been\", and \"changed from\"\n\n--Description--\nThe attached (unfinished) patch adds new filter operators \"changed from\", \"has ever been\" and \"has never been\". The difference from the existing operators is that they check past values in the journal_details table. These new operators are available for Status, Tracker, Priority, Assignee, Target version, and Category filters.\r\n\r\n* \"changed from\": selects issues where the value has ever changed from the given value\r\n* \"has ever been\": selects issues where the value has ever changed from the given value, or the current value is the given value (equivalent to \"changed from\" + \"is\")\r\n* \"has never been\": selects issues where the value has never been the given value (the negative of \"has ever been\")\r\n\r\nExamples:\r\n* [Assignee][has ever been][<< Me >>]: selects issues you have been assigned in the past or are currently assigned to\r\n* [Assignee][changed from][<< Me >>]: selects issues that were assigned to you in the past but the current assignee is not you\r\n* [Assignee][has never been][<< Me >>]: selects issues that have never been assigned to you\r\n\r\nThe following feature requests will be fulfilled if the operators are implemented.\r\n\r\n* ##3001\r\n* ##3586\r\n* ##9714\r\n* ##31381"}]}}
{"custom_id": "283", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nAbility to group issues by project fields and custom fields\n\n--Description--\nIn the issues listing page, there is a \"group result by\" that has groupable fields (& custom fields) of Issue.\r\nIs it possible to add Project fields (& custom fields) to doing @group by@ on issues? "}]}}
{"custom_id": "284", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nEnable to display notes count on issues list\n\n--Description--\nI have added the query column to display the Journal Note count in the issues list and made it sortable.\r\nThis feature allows you to easily find issue with a high number of notes directly from the issues list.\r\n\r\n!{width:800px}enable_to_display_notes_count_on_issues_list.png!"}]}}
{"custom_id": "285", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nfilter parent issue no\n\n--Description--\nat Filter \r\nYou can specify multiple ticket numbers separated by commas as the parent issue.\r\nIf it is \"equal\", multiple specified items will be reflected.\r\nIf \"include\", only the first ticket number will be reflected\r\n\r\n\uff70\uff70JP\uff70\uff70\r\n\u30d5\u30a3\u30eb\u30bf\u306b\u3066\r\n\u89aa\u30c1\u30b1\u30c3\u30c8\u3068\u3057\u3066\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u8907\u6570\u306e\u30c1\u30b1\u30c3\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\r\n\u300c\u7b49\u3057\u3044\u300d\u3067\u3042\u308c\u3070\u3001\u8907\u6570\u6307\u5b9a\u3057\u305f\u3082\u306e\u304c\u53cd\u6620\u3055\u308c\u307e\u3059\u304c\r\n\u300c\u542b\u3080\u300d\u3060\u3068\u3001\uff11\u3064\u76ee\u306e\u30c1\u30b1\u30c3\u30c8\u756a\u53f7\u3057\u304b\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\r\n\r\n\u542b\u3080\u306e\u5834\u5408\u3067\u3082\u3001\u30c1\u30b1\u30c3\u30c8\u30ca\u30f3\u30d0\u30fc\u3092\u8907\u6570\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u305b\u3093\u304b\uff1f\r\n"}]}}
{"custom_id": "286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID.\n\n-- Ticket2\n--Subject--\nExport attachments of several issues simultaneous\n\n--Description--\nHi, How to export attachments from multiple simultaneous issues?"}]}}
{"custom_id": "287", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove filter rendering on narrow screens by replacing the layout tables with a flex layout\n\n--Description--\nThe current query filters and options use HTML tables for the layout, which introduces issues with wide form elements on narrow screens.\r\n\r\nThe attached patch which was extracted from \"Planio\":https://plan.io/redmine-hosting replaces the layout tables with a flex layout. The look and feel in desktop browsers should stay unchanged, but on narrow screens like mobile phones filter rows that previously just exceeded the screen width will now wrap to a new row.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "288", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove filter rendering on narrow screens by replacing the layout tables with a flex layout\n\n--Description--\nThe current query filters and options use HTML tables for the layout, which introduces issues with wide form elements on narrow screens.\r\n\r\nThe attached patch which was extracted from \"Planio\":https://plan.io/redmine-hosting replaces the layout tables with a flex layout. The look and feel in desktop browsers should stay unchanged, but on narrow screens like mobile phones filter rows that previously just exceeded the screen width will now wrap to a new row.\r\n\r\n\n\n-- Ticket2\n--Subject--\n\"contains any of\" operator for text filters to perform OR search of multiple terms\n\n--Description--\nThe attached patch adds a new operator \"contains any of\" for string/text filters and \"Any searchable text\" filter introduced by #38402. With this new operator, you can perform an OR search with multiple terms specified in single filter.\r\n\r\nFor example, if you choose the \"Subject\" filter and specify the \"contains any of\" operator and give \"close block\" as the value, issues containing either \"close\" or \"block\" in the subject will be displayed.\r\n\r\nI believe this new OR search support in addition to the AND search added in Redmine 5.0 (#35764) will make Redmine's query system even more powerful.\r\n\r\n!{width: 576px; border: 1px solid grey;}.clipboard-202304121202-2fiuq.png!\r\n"}]}}
{"custom_id": "289", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove filter rendering on narrow screens by replacing the layout tables with a flex layout\n\n--Description--\nThe current query filters and options use HTML tables for the layout, which introduces issues with wide form elements on narrow screens.\r\n\r\nThe attached patch which was extracted from \"Planio\":https://plan.io/redmine-hosting replaces the layout tables with a flex layout. The look and feel in desktop browsers should stay unchanged, but on narrow screens like mobile phones filter rows that previously just exceeded the screen width will now wrap to a new row.\r\n\r\n\n\n-- Ticket2\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n"}]}}
{"custom_id": "290", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nDrop OpenID support\n\n--Description--\nRedmine currently supports OpenID authentication.\r\n\r\nHowever, OpenId was obsoleted by OpenID Connect some years ago and most OpenID providers discontinued their services. Now it is very difficult to find a web service with an OpenID provider service. This means that it is difficult for Redmine users to start using OpenID login. And it is not easy for us to test if Redmine's OpenID support is working properly.\r\n\r\nGiven this situation, probably very few users are using OpenID login in Redmine. I think it is time to remove OpenID support from Redmine."}]}}
{"custom_id": "291", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "292", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nUpgrade Admin/Users list to use the query system\n\n--Description--\nThis patch series that was extracted from \"Planio\":https://plan.io/redmine-hosting introduces a UserQuery\r\nand upgrades the Admin/Users list with corresponding filter, sort and (CSV) export capabilities.\r\nAlso introduced are a context menu and an option to delete multiple users at once. The third patch just\r\nadds flash messages to the (single) user deletion operation, for symmetry with the messages rendered by the bulk delete.\r\n\r\nThis relates to issues #4295, #18193, #21055 (probably there are more I didn't find)."}]}}
{"custom_id": "293", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald\n\n-- Ticket2\n--Subject--\nAutomatic deletion of unactivated accounts\n\n--Description--\nHi\r\n\r\nin the context of #38511 I noticed that even after one week my unactivated account @henk_test was not deleted but still waited for me to click the confirmation link.\r\n\r\nI see a similar issue with my own redmine instance where registrations require administrator approval: I have to delete a lot of accounts registered by bots.\r\n\r\nIt would be great to have redmine expire unconfirmed/unactivated accounts after a configurable amount of time."}]}}
{"custom_id": "294", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nDelete users documentation\n\n--Description--\nHi\r\n\r\nI see this message when deleting users \"Are you sure you want to delete this user and remove all references to them? This cannot be undone. Often, locking a user instead of deleting them is the better solution\"\r\n\r\nSo I've been looking to see what the references are and wether it affects our setup, I would preferably delete users than have an endless list of locked users. Looking at this link it looks to be well out of date https://www.redmine.org/projects/redmine/wiki/RedmineUsers#Deleting-a-User - can it be updated  detailing what is lost when a user is deleted?\r\n\r\nThanks\r\n\r\nDonald\n\n-- Ticket2\n--Subject--\ndo not disclose login account names (public projects disclose some user info)\n\n--Description--\nAs message#67884 did not get any reaction, I think it is worth submitting a ticket:\r\n\r\nFollowing the message#51163 discussion:\r\n\r\nWe recently observed the fact that Redmine (at least until Remdmine 4.2) has the somewhat doubtable default setting that role 2 (anonymous) has the right to see all users and not only members of visible projects. I would say the latter would be a better default.\r\n\r\nFurthermore, when there are public projects, all members of these projects are still visible to the public, together with their (login) account name, which is, in case of directory integration, their user name.\r\n\r\nThis clearly is an information that should not go to the public.\r\n\r\nSo I would suggest to\r\n\r\n* not disclose redmine login account names to the public, even in public projects (this could probably be reached by adding a nick for public display)\r\n* provide an option to add noindex directives to search bots for user and group information\r\n\r\nKind regards, Tom\r\n\r\n> Environment:\r\n> Redmine version 5.0.5.stable\r\n> Ruby version 2.7.5-p203 (2021-11-24) [x86_64-linux-gnu]\r\n> Rails version 6.1.7.2\r\n> Environment production\r\n> Database adapter PostgreSQL\r\n> Mailer queue ActiveJob::QueueAdapters::AsyncAdapter\r\n> Mailer delivery smtp\r\n> Redmine settings:\r\n> Redmine theme Default\r\n> SCM:\r\n> Subversion 1.13.0\r\n> Mercurial 5.3.1\r\n> Cvs 1.12.13\r\n> Bazaar 3.0.2\r\n> Git 2.39.2\r\n> Filesystem\r\n> Redmine plugins:\r\n> no plugin installed\r\n"}]}}
{"custom_id": "295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nKeyboard shortcuts\n\n--Description--\nIt would be so convinient and productive if redMine supports keyboard shortcuts like Trac or some nifty web apps.\r\nFor example,  press Ctrl+R to preview, Ctrl+S to submit, Ctrl+/ to enter search text, ...\r\n\r\nTo support above, we would only need to add \"accesskey\" attribute to elements (like input, a).\r\n\r\nThanks,"}]}}
{"custom_id": "296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "297", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nCreating global (default) categories.\n\n--Description--\nIt would be great if Categories could be created globally for all projects besides for each project independently. In my case I have too many project where almost all of them features the same categories and it is kinda tiresome creating categories for each project.\r\n\r\nRedmine is the Best!!!"}]}}
{"custom_id": "298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "299", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "300", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAuto upgrade of redmine and plugins making it much easier to manage the versions\n\n--Description--\nCan we get a feature much like Jenkins already has where you can go to a management area for the readmine app and upgrade your app version. Also create a manage plugins area. \r\nPlease install jenkins and look at these areas they have, you need this stuff badly."}]}}
{"custom_id": "301", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow selecting subprojects on new issue form\n\n--Description--\nhappy new years!\r\nAs you know, redmine sub task mechanism supported cross-project since version 2.2. \r\nBut there is no project field on the new issue form. This is a need, when we creating new issue by the link \"Sub task Add\" on the parent issue."}]}}
{"custom_id": "302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "303", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\ndefault sort email reminders by due date (and list due date in email)\n\n--Description--\nI think this should be default behavior.  I've already written the code to do this, but I'm not sure how to get the code to you since the [contribute](http://www.redmine.org/projects/redmine/wiki/Contribute) page says not to use pull requests.  What is the preferred method of getting the code to you on github?  I see the link to creating patches on git, but I didn't really follow it.  Can someone give me a more detailed explanation?\r\n\r\nI uploaded a file of what our email reminders look like now after the changes."}]}}
{"custom_id": "304", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nEnable External links\n\n--Description--\nI think an interesting new feature is the enabling optional  of the External links in redmine.\r\n\r\nIt's a feature that is required in some projects"}]}}
{"custom_id": "305", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nTotal Estimated Time should be available on Totals options\n\n--Description--\nThe _Total estimated time_ and _Total spent time_ are missing from the _Totals_ options on query filters. See the attached image.\r\n\r\nThis would be useful when working with subtasks grouped by target version. So we can sum the total estimated time on subtasks, not only directly estimated time.\r\nAs a workaround we are using the filter _Parent Task_ with the operator _Any_ to sum the subtasks estimated time.\r\n\r\nRedmine 3.3.0 (bitnami install) here."}]}}
{"custom_id": "306", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "307", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nOption to disable file upload\n\n--Description--\nHow to restrict the file type upload in Redmine because the security team has raised an vulnerability "}]}}
{"custom_id": "308", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nInclude new statuses allowed by workflow in Issues REST API\n\n--Description--\nRedmine API provide no possibility to get informations about workflows. This feature is important to get informations about next allowed status for issues. \r\n\r\nThere a lot of posts from people which need this feature. \r\n\r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "309", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nEnforcing Strong Password in Redmine\n\n--Description--\nEnforcing Strong Password in Redmine for the admin users so new user can be created with strong password credentials "}]}}
{"custom_id": "310", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd links to spent time report table elements\n\n--Description--\nWhen working with spent time report, I would like to be able to click on tickets, versions and other elements - just like on any other page in Redmine."}]}}
{"custom_id": "311", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow project selection when editing timelog entries\n\n--Description--\nWhen you go to create a new time entry, and there's nothing project or issue related in the URL, you're given a project selection dropdown.\r\n\r\nThis patch adds that same project selection dropdown when editing a timelog entry. Also duplicates the javascript that's run on new entries and changes it so it also works with existing time entries so the type of hours, etc get updated when changing projects.\r\n\r\nThe need for this crops up when project managers have to fix time entries logged on the wrong projects.\r\n\r\nThis patch is for Redmine version 3.3.2-stable"}]}}
{"custom_id": "312", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "313", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow import issues and time entries on multiple projects (map Project field to a column from CSV)\n\n--Description--\nWhen I use Import menu to create new issues, I found I could't import all issue in different project all same time.\r\nI had to import one project at once, that feel not convenience.\r\nSo I wish redmine can support Project Feild dynamic mapping via csv file."}]}}
{"custom_id": "314", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine Should have Defeult Categories for Project trackers. See description.\n\n--Description--\nRedmine should allow users to define project's default Categories (so, the user does not have to be creating the default ones for every project)... For example, i use the Category Field for specifying that the users is a Data, Design, Functionality, Usability, or any other needed for the project.. so, if i would like not to have be type it every time i create a project or sub, i want to be able to define it in an administrative module.\r\n\r\nThanks in Advance."}]}}
{"custom_id": "315", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "316", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nOption not to block closing a parent issue when it has open subtask(s)\n\n--Description--\nHello,\r\n\r\nI saw that: r16108.\r\n\r\nBut actually, it could be great to be able to close a parent task.\r\nIs it possible to allow this in the \"configuration\" of Redmine? For example:\r\n\r\n> \"Allow a parent tracker to be closed even if the sub-task aren't: YES/NO\".\r\n\r\nThanks"}]}}
{"custom_id": "317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nhook: controller_issues_bulk_edit_after_save\n\n--Description--\nFrom https://www.redmine.org/issues/8757\r\n\r\nTo avoid the problems with stopping the bulk update if something fails on the hook, iterate over the saved issues after saving them"}]}}
{"custom_id": "318", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDefault due date for issues\n\n--Description--\nIt would be nice if we can configure Redmine to set a default due date for issues (N days from today).\r\n\r\nDue date is important in Redmine. Issues without a due date are not notified by email reminders and sometimes forgotten by users. I am sure that this feature is simple but helpful for users."}]}}
{"custom_id": "319", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd configured theme to Redmine::Info\n\n--Description--\n*Administration | Information* \r\n\r\nDisplays various info about system, but doesn't display which theme is currently being used.\r\n\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.4.10.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux]\r\n  Rails version                  4.2.11.1\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.9.3\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n</pre> \r\n\r\nIt is important to know which theme is used, because there is many themes available on internet, \r\nand some themes don't show everything, or have bugs."}]}}
{"custom_id": "320", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nThe English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\n\n--Description--\nPreconditions: The localization of the site must be \"Russian\"\r\n\r\n1. Open the site http://www.redmine.org/ and log in\r\n2. Click the \"\u041f\u043e\u043c\u043e\u0449\u044c\"\r\n3. Pay attention to the page\r\n\r\nActual result: The English version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button\r\nExpected result: The Russian version of \"Help\" content is displayed on the page after clicking the \"\u041f\u043e\u043c\u043e\u0449\u044c\" button"}]}}
{"custom_id": "321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nProject Responsible Field\n\n--Description--\nHello,\r\n\r\nI'll try to explain the feature with my real life example. \r\nOne day person came and asked me to create a project for him, so I duplicated a template for him and all fine. The problem is: now when I click in \"My Page\", it shows to me the issues related to that project which I don't care and I also used to receive e-mails from it (not sure if the e-mail is still being sent after Redmine 4).\r\nSo, what I imagine, is a simple way on the settings of selecting another person to be the responsible one, maybe a checkbox similar to adding member to a project. I imagine that this information is stored somewhere.\r\n\r\nThanks!\r\nBR,\r\nJean"}]}}
{"custom_id": "322", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "323", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpgrade Rails to 5.2.4.5\n\n--Description--\nCVE-2020-8165 (https://nvd.nist.gov/vuln/detail/CVE-2020-8165)\r\n\r\nIt would be very helpful if Redmine would work with the latest versions of Ruby and Rails. My server has been shut down for testing, since older versions are in use."}]}}
{"custom_id": "324", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "325", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSave ticket by pressing keyboard key\n\n--Description--\nFrom other systems like Mediawiki I know the feature that pressing ALT+S saves all changes. Unfortunately the more obvious CTRL+S is used by the browser itself. It would be very helpful to have the same in Redmine as an abreviation for scrolling down and pressing the button \"Anlegen\" (German version, Englisch \"Create\"?)."}]}}
{"custom_id": "327", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nOutput test coverage report to the console\n\n--Description--\nRedmine has its own html formatter for SimpleCow. Would be great to see \"default generated report\":https://github.com/simplecov-ruby/simplecov-html/blob/3a30b47964e74ac810edc02629d420fa1cb1bc12/lib/simplecov-html.rb#L31 in console log for LOC coverage.\r\nIt's useful for collecting metrics in gitlab."}]}}
{"custom_id": "328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSetup GITLAB and Redmine work together\n\n--Description--\nGitlab must use redline as a tool for tracking issues."}]}}
{"custom_id": "329", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAPI to archive/unarchive projects\n\n--Description--\nnan"}]}}
{"custom_id": "330", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nGit: View annotation prior to the change\n\n--Description--\nThe \"Blame\" view of GitHub and Gitlab has a feature called \"View blame prior to this change\". With the feature, you can easily jump to an older change of the line.\r\n\r\nI think it would be useful if Redmine also has the feature. Currently, it requires some manual steps to see older changes in the \"Annotate\" view of Redmine.\r\n\r\n!{width: 634px; border: 1px solid grey;}.gitlab-view-blame-prior-to-this-change.png!\r\n"}]}}
{"custom_id": "331", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAssistance to update redmine server\n\n--Description--\nhi there, I\u00b4m a real noob and although tried I have failed to update my server. is there any one with patience to help me out ?"}]}}
{"custom_id": "332", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAPI to close/reopen projects\n\n--Description--\nAPI to archive/unarchive projects has been implemented for Redmine 5.0.0 (#35420). I think it is better to implement API to close/reopen projects as well.\r\n\r\nThis is because archive and close of a project are similar choices for admins. Depending on the situation, admins may want to archive a project, or close a project."}]}}
{"custom_id": "333", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nissue assignee limitation to a group or a role\n\n--Description--\nI have a large population in my projects >200\r\nThe assignee dropdown menu is very long and make the proper person is made difficult and time consuming.\r\n\r\nA good improvement would be:\r\nin the project settings, having he possibility to define the \"assignee\" as follow:\r\n- all -> the entire project members (default)\r\n- group -> list of users within a designated group (could be more than one group selected)\r\n- role -> list of users within a given role (could be more than one role selected) ie: my_exerts\r\n\r\nThis is not perfect as some users would require having the list of assignee to be customize base on the issue position within a given workflow. But, nevertheless, it would be a nice improvement.  \r\n\r\nbest regards\r\n\r\nreference found not working with redmine 4.1/4.2 : \r\nhttps://www.redmine.org/issues/8313\r\nhttps://github.com/luisr9/redmine_filter_assignable/blob/master/lib/Issues/patches/IssueController_patch.rb"}]}}
{"custom_id": "334", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "335", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "336", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "337", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "338", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nWe are not able to install plugin\n\n--Description--\nHello Team,\r\n\r\nWe are not able to install kanban plugin on redmine server. So please help me how to install plugins on redmine.\r\n"}]}}
{"custom_id": "339", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nADFS Integrations \n\n--Description--\nI am not able to ADFS Integration on Redmine "}]}}
{"custom_id": "340", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSpread sheet import plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original import features with following:\r\n\r\n* ODX aware, means you do not need to convert the importing data to CSV\r\n** this feature uses roo gem\r\n* pre-auto-mapping and pre-validation on mapping page, to avoid being dropped importing records\r\n* mapping is not data columns to internal entity one, but entity one to data one\r\n* project members import\r\n\r\nIf this UX is built in to original Redmine, I'm happy!"}]}}
{"custom_id": "341", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nredmine_cost_admin plugin\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which allow:\r\n\r\n* registering contracts of the users\r\n* converting estimated hours and spent hours into money amount\r\n* registering budgets and expenses per project\r\n\r\nIf this plugin help your organization, I'm happy w"}]}}
{"custom_id": "343", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine Calendar is not listing issues\n\n--Description--\nDear team,\r\n\r\nI have upgraded the Redmine from version 2.5.2 to version 4.2.3.stable. Before, the issue was shown in the calendar after upgrade the issue did not show anymore.\r\n\r\nThe attached file send to you for referent.\r\nCould you provide me the advice I could see the list of all issues on the calendar again?\r\n\r\nRegards,\r\n"}]}}
{"custom_id": "344", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nget tags via API\n\n--Description--\nHello\r\nI'm working on Redmine 4.x, I d'ont know the X as I'm not the administrator but I would to retrieve tags values associated with an issue via the REST API. I have found no way to retrieve these tags via API and no documentation that could let me think that there is such information in a more recent version of redmine/plugin tag\r\nI know that to retrive comments on an issue I have to add include=journals but I did'nt find any equivalent for tags"}]}}
{"custom_id": "345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nLazy load inline images\n\n--Description--\nSet *lazy: loading* for images and thumbnail images that Redmine will display as follows:\r\n@<img src=\"image.jpg\" alt=\"...\" loading=\"lazy\">@\r\n\r\nlazy loading document: https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading\r\nIt can be displayed more quickly, for example, when a issue has many comments and many images are displayed."}]}}
{"custom_id": "346", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine Timesheets Application compatible with Redmine 4.2.3\n\n--Description--\nIs it possible to upgrade Redmine Timesheets Application that can compatible with Redmine version 4.2.3 ?\r\n\r\n"}]}}
{"custom_id": "347", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd language filter to redmine.org page\n\n--Description--\nOpen translation tasks can be roughly filtered by category, but it would be even better if the number of tasks displayed could be reduced using another, searchable \"Language\" filter.\r\nAlternatively, at least the language should be included in the title..."}]}}
{"custom_id": "349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "350", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine plugin was not sync in Windows \n\n--Description--\nHi Team,\r\nI installed Redmine on a Windows PC and everything is working properly, but I can't find a plugin in Redmine. Please assist us.\r\n\r\nKiran KR"}]}}
{"custom_id": "351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nExport a version as changelog text\n\n--Description--\nI suggest a feature to export a version as text. One of the uses of the text is a changelog.\r\n\r\nYou will be able to get the text by clicking \"Also available in: TXT\" link placed in the bottom right of the version page.\r\n\r\nIf you export https://www.redmine.org/versions/5 as text, you will get the following output:\r\n\r\n<pre>\r\n# Changelog\r\n\r\n## 0.7.3\r\n\r\n2008-07-06\r\n\r\nSecurity+Bug fix release\r\n\r\n* Defect #52: bulgarian language issue\r\n* Defect #1426: User model does not allow person's first name to contain a dot '.'\r\n* Feature #1506: Add title length note and error info when creating project or creating news\r\n* Patch #1218: Patch for relative links to icon images in 'public/help/wiki_syntax.html'\r\n* Patch #1425: Entourage (and some old client) fails to correctly render notification styles\r\n* Patch #1524: back_url redirects inappropriately when blank\r\n* Patch #1527: Add Project Name to Cross-Project Atom Feed\r\n</pre>"}]}}
{"custom_id": "352", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nBackground job and dedicated status for project deletion\n\n--Description--\nDue to the deletion of dependent objects (issues etc) and child projects,\r\nproject deletion may take a long time.\r\n\r\nThis patch, which was extracted from [Planio](https://plan.io/redmine-hosting),\r\nmoves the actual project deletion into an ActiveJob job. It also introduces a \r\nnew project status (SCHEDULED_FOR_DELETION) that is used to effectively hide\r\nthe project that is about to be deleted (and any potential descendant projects)\r\nfrom the system immediately.\r\n\r\nA security notification is sent out to the user who deleted the project,\r\ninforming about success / failure.\r\n\r\nThe projects list is extended to be able to filter for the new status,\r\nso in case of a failure, the project can still be accessed for\r\nexamination."}]}}
{"custom_id": "353", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nConnect email office 365 with REDMINE\n\n--Description--\nHello, i'd like to be guided to connect an email with REDMINE.\r\nCan you help me ?"}]}}
{"custom_id": "354", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRSS Feed of all Projects\n\n--Description--\nFor my Browser-Bookmarks I need a RSS/Atom Feed, which delivers a list of all Projects. With a Link to each Ticket page.\r\nIt should be like here: https://www.redmine.org/projects\r\nBut the Atom-Feed on this page delivers the \"newest projects\" instead of \"all projects\" as in the HTML view.\r\nIs there any way to get this?\r\nThank you for your support."}]}}
{"custom_id": "355", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "356", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nInclude workflow creation in REST API \n\n--Description--\nRedmine API provide no possibility to create workflows. \r\nThis feature is important for synchronization of workflow with another system. \r\nPlease plan to implement this enhancement for the Redmine API - thank you!"}]}}
{"custom_id": "357", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\n Option to search active projects only\n\n--Description--\nIf you usually close old projects that are only occasionally viewed, it may be annoying that so many issues from closed projects are shown in a search result.\r\n\r\nI think it would be a nice improvement if Redmine will have an option to search for active projects only, like \"Open issues only\" option implemented by #10734."}]}}
{"custom_id": "358", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "359", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDrop redcarpet dependency for common_mark formatter\n\n--Description--\nRedmine fails to start when it's installed without markdown group (#36892).\r\n\r\nWe should fix this and drop the redcarpet dependency for common_mark."}]}}
{"custom_id": "360", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd solar date to Redmine\n\n--Description--\nRedmine is a very useful tool for project management, but due to lack of +solar date+ we can not use it.\r\nPlease add the *solar date feature* to the project if possible."}]}}
{"custom_id": "361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd hook on versions form\n\n--Description--\nHello,\r\n\r\nOn redmine we have hook on issue form, project form but not on version form.\r\n\r\nCan you add it ?\r\n\r\nThanks"}]}}
{"custom_id": "362", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nExport spent time report as PDF\n\n--Description--\nI guess this plugin doesnt work for redmine 5.x.\r\nI tried but couldn't start redmine with this plugin.\r\n"}]}}
{"custom_id": "363", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "364", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd non-members as watchers\n\n--Description--\nIt's a little annoying to have to add someone to a project in order to add them as a watcher on an issue, because they don't normally need to be on the project, they just need a reference to that one issue.  So, there should be some way to add any user as a watcher of an issue.  When you have a large organization, it's not practical to add everyone to a project just to be able to add them as watchers.\r\n\r\nRedmine version                4.2.1.stable\r\n"}]}}
{"custom_id": "365", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd Ruby 3.2 support\n\n--Description--\nnan"}]}}
{"custom_id": "366", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nWebP images support\n\n--Description--\n\"WebP image format\":https://developers.google.com/speed/webp/, introduced in 2010, are now supported by most browsers (see https://caniuse.com/webp).\r\n\r\nThe attached patch adds WebP support to Redmine. The following functions will be able to handle WebP.\r\n\r\n* Inline image\r\n* Thumbnail of the attached image\r\n* Inserting markup for an image uploaded by drag and drop"}]}}
{"custom_id": "367", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "368", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "369", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAbility to disable the priority field\n\n--Description--\nRedmine can disable core fields such as subject, description, and assignee per tracker (#1091). However, the priority field cannot be disabled currently. The attached patch adds the ability to the priority field as well.\r\n\r\nI have been asked many times how to disable the priority field. Since Redmine's flexible issue tracking features can be used for a wide range of purposes, there are use cases that don't need the priority field. The ability to disable the priority field will make Redmine easier to use in such use cases.\r\n\r\nAfter applying the patch, You will be able to disable priority as well as other fields in the tracker's edit page. When the priority field is disabled, the default status is set for the newly created issue.\r\n\r\n!{width: 606px; border: 1px solid grey;}clipboard-202304071523-ze6i8.png!"}]}}
{"custom_id": "371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n"}]}}
{"custom_id": "372", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSupport \"My bookmarks\" in the search\n\n--Description--\nThe search currently doesn't yet support the option for projects \"My bookmarks\" added in Redmine 4.1.0 (#31355). The \"Project\" filter already has the option \"<< my bookmarks >>\". I think it would be nice to add \"My bookmarks\" in the search as well. \r\n\r\n* All projects\r\n* My projects\r\n* current project and its subprojects\r\n* current project\r\n\r\n!{width: 726px; border: 1px solid grey;}.clipboard-202304181528-wnlmo.png!\r\n\r\n!{width: 636px; border: 1px solid grey;}.clipboard-202304181534-1nmfo.png!\r\n"}]}}
{"custom_id": "373", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nProvide some ways to find the issues where an user Is mentioned \n\n--Description--\nAt this time there isn't a way to find all issues where an user is mentioned nor via filter nor via email.\r\nShould be possibile to:\r\n* to search issue where i'm mentioned \r\n* customize the subject of the email related to comment where i'm mentioned.\r\n\r\nThe old plugin used before the landing of this feature in redmine-core, was implement the way 2\r\n"}]}}
{"custom_id": "374", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nNot able to add new project in project tab\n\n--Description--\nProject tab is not giving any option to add new project"}]}}
{"custom_id": "375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "376", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nRedmine upgrade path\n\n--Description--\nWe are current using a very old version of Redmine : Redmine 1.3.0.stable (MySQL)\r\n\r\nWe would like to upgrade to a newer version.\r\n\r\nIs it possible? And can you share documentation and process to perform the upgrade.\r\n\r\nThanks\r\nAlex\r\n"}]}}
{"custom_id": "377", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nrbpdf Update\n\n--Description--\nrbpdf has been released today to 1.21.2\r\nI can be updated in Redmine's Gemfile.\r\n\r\nthanks\r\n"}]}}
{"custom_id": "378", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAdd support for GitHub\n\n--Description--\nGitHub is the dominant player in version control, and it would be very appealing to new adopters to use Redmine."}]}}
{"custom_id": "379", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nA developer or project manager can relate an issue to another while editing the issue.\n\n--Description--\nWhen filing a ticket, that's often when i have the relationship to another ticket in mind.  Having to finish writing the issue, save it, and then remember to add the related issue always adds a bit of cognitive overhead.\r\n\r\nA flip side of #38839 but these are my main user experience hurdles with Redmine.\r\n\r\nFor this one, \"slash commands\" (like @/relate #38839@) that can be put into descriptions and notes and act on save would work for me also."}]}}
{"custom_id": "380", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nAutomatically recording activity into issue hours\n\n--Description--\nRedmine has a flexible framework but terrible UX.\r\n\r\nI am wishing for an automatic feature here.\r\n\r\nSince the activity of a user is recorded, why don't they be recorded as working hours related to particular issues, whether automatically or manually.  \r\n\r\nIt would be easier especially when someone is editing and expanding the contents of an issue, the working hours should be contributed to that issue."}]}}
{"custom_id": "381", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nUpgrade redmine 3.3.0 (windows) to latest\n\n--Description--\nHi,\r\nI have a old redmine 3.3.0 windows version, and i want to upgrade it to the latest version, what is the best way? I have a Ubuntu server created to do this upgrade. \r\n\r\nthanks and regards."}]}}
{"custom_id": "382", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "383", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nEnable \"+\" in the project menu tab from www.redmine.org\n\n--Description--\nnan\n\n-- Ticket2\n--Subject--\ndir=\"auto\" on all text fields\n\n--Description--\nMulti language text input require `dir=\"auto\"` on text input, this simple change would significantly improve redmine for all Multilanguage usage"}]}}
{"custom_id": "384", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "385", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n\n\n-- Ticket2\n--Subject--\nShow wiki toolbar for spent time custom fields with text formatting enabled\n\n--Description--\nBefore:\r\n!{width:70%; border: 1px solid grey}.before.png!\r\n\r\nUsing this patch:\r\n!{width:70%; border: 1px solid grey}.after.png!\r\n"}]}}
{"custom_id": "386", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nFavicon for a project (avatar for a project)\n\n--Description--\nPlease add to new release of redmine 3.3.x a new element for the Project List. I need to add icons to a each project, like a avatar."}]}}
{"custom_id": "387", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nAdd border around issue history to prevent accidental deletion of an issue\n\n--Description--\nIn my observation, some users accidentally delete an issue trying to delete last note. The misoperation is probably caused by the current UI of Redmine. The delete button at the bottom of IssuesController#show page looks as if it is a button for delete the last note, but actually it is a button to deletes the issue.\r\n\r\nSuch misoperation can be prevented by making a slight change to UI. Please see the following screenshots. By adding border around issue history, it becomes clear that the button is not a button for deleting the note. Our company have succeeded in significantly reducing accidents that our customers mistakenly delete an issue by implementing the change.\r\n\r\nThe patch was extracted from \"farend basic\":https://github.com/farend/redmine_theme_farend_basic theme.\r\n\r\n*Before:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-before@2x.png!\r\n\r\n*After:*\r\n!{width: 787px;border: 1px solid #ccc;}.border-around-history-after@2x.png!\r\n"}]}}
{"custom_id": "388", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nSpent time ratio column and filter\n\n--Description--\nI suggest adding a new column and a new filter to the issues list.\r\n\r\nThe name of the column and the filter is \"Spent time ratio\". \"Spent time ratio\" column displays the percentage of a spent time divided by an estimated time. The column is useful to see the sign of overspending of man-hours and find issues that took more time than estimated.\r\n\r\n\"Easy Redmine\":https://www.easyredmine.com/ already has the same column and filter.\r\n\r\n!{width: 1023px; border: 1px solid grey;}.spent-time-ratio.png!"}]}}
{"custom_id": "389", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nAdd configured theme and whether it includes JavaScript to Redmine::Info.\n\n--Description--\nGiven that a fair amount of (UI) issues are caused by a third-party theme (see e.g. recently closed #35258 and #35534), it would be really helpful if information about the configured theme and whether it includes JavaScript is added to @Redmine::Info@.\r\n\r\nExample:\r\n\r\n!2021-08-05_01-36-12.png!\r\n\r\nI'll leave a patch against current trunk."}]}}
{"custom_id": "390", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nSupport for multiple default data\n\n--Description--\nCurrently Redmine can load a single default data, but we would like to be able to select from multiple default data.\r\nThe current default data is intended for software management, but is difficult to use as is for other purposes. The system administrator needs to re-configure the tracker, status, workflow, etc., which is a hurdle for Redmine beginners.\r\n\r\nFor example, if, in addition to the current default data for software management, users could choose to load default data intended for simple task management, they would be able to quickly start using Redmine for a wider range of applications without having to perform complicated settings. It would also be possible to provide third-party default data specific to a particular use.\r\n\r\nWe request support for loading multiple default themes to simplify the initial configuration of Redmine and also to facilitate its use for a variety of purposes."}]}}
{"custom_id": "391", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nImprove progress bars\n\n--Description--\nI think that the UI of the progress bars in Redmine could benefit from some TLC:\r\n* improve and modernize the HTML structure (inspiration for this can be gathered from old ChiliProject issue \"CP #1056\":https://www.chiliproject.org/issues/1056 [\"PR #213 at GitHub\":https://github.com/chiliproject/chiliproject/pull/213]... );\r\n* add a small (3px?) border-radius to the outer borders.\n\n-- Ticket2\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n"}]}}
{"custom_id": "392", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nMake version description multiline and textilizable\n\n--Description--\nMade Version description support Textile markup to be in-sync with Trac milestone description (supporting its Wiki markup).\r\nWe needed this for migrating our projects from Trac, and it appears others need it also, e.g. #1256.\r\n\r\nContributed by Texuna Technologies."}]}}
{"custom_id": "393", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nCannot add new version if all versions are closed (from issues page)\n\n--Description--\nWith feature #4315 new versions can be added from the issues page. However, if all of the existing versions are closed, the Target version field does not appear and therefore this feature is not available. It would be nice for this option to be available, otherwise it defeats the purpose of this change."}]}}
{"custom_id": "394", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\n\"New issue\" link near roadmap issue lists.\n\n--Description--\nContext menu added to roadmap list at r3547 is nice.\r\n\r\nIt would be great if there is a link to new issue near roadmap list. When the link clicked, the user will see new issue form with target version is selected."}]}}
{"custom_id": "395", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nConfigure display of completed versions by default\n\n--Description--\nis there any method to show completed version in roadmap by default ?\r\n"}]}}
{"custom_id": "396", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nValues of version type custom fields should be grouped by project/subproject\n\n--Description--\nProject B is a subproject of project A.\r\n\r\nThe available versions of project A are 1.0 and 1.1.\r\nThe available versions of project B are 1.0, 1.1 and 1.2.\r\n\r\nAll versions are shared with project tree.\r\n\r\nCreating a new issue in project B, \"Target version\" field shows:\r\n!TargetVersion.png!\r\n\r\n\"Found in version field\" shows:\r\n!FoundInVersion.png!\r\n\r\nIt would be much better if \"Found in version\" values would be presented the same as \"Target version\"."}]}}
{"custom_id": "397", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nAbility to add issue to a version within the roadmap\n\n--Description--\nSo roadmaps is pretty good, but it would be nice to have the ability to add a issue regarding the version on the roadmap page itself. \r\n\r\nkinda like here\r\n\r\n!https://dl.dropboxusercontent.com/s/ey644ee8ksf1ovz/2016-11-23%20at%2019.54.png!"}]}}
{"custom_id": "398", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "399", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nAdd some space around the versions on the Roadmap\n\n--Description--\nCurrently it somewhat looks like versions are crammed together one after another on the Roadmap. I think it would be good to give them some additional space.\r\n\r\nThis can easily be accomplished with some additional CSS like:\r\n\r\n<pre><code class=\"diff\">\r\n public/stylesheets/application.css | 2 ++\r\n 1 file changed, 2 insertions(+)\r\n\r\ndiff --git a/public/stylesheets/application.css b/public/stylesheets/application.css\r\nindex e117bc1d0..d09310581 100644\r\n--- a/public/stylesheets/application.css\r\n+++ b/public/stylesheets/application.css\r\n@@ -640,6 +640,8 @@ div#roadmap .wiki h2 { font-size: 110%; }\r\n div#roadmap h2, div#roadmap h3 {padding-right: 0;}\r\n body.controller-versions.action-show div#roadmap .related-issues {width:70%;}\r\n \r\n+div#roadmap .version-article {padding-bottom: 12px;}\r\n+\r\n div#version-summary { float:right; width:28%; margin-left: 16px; margin-bottom: 16px; background-color: #fff; }\r\n div#version-summary fieldset { margin-bottom: 1em; }\r\n div#version-summary fieldset.time-tracking table { width:100%; }\r\n</code></pre>\r\n\r\nNote: the above given diff is against trunk @ r21131."}]}}
{"custom_id": "400", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nAdd a link to (with count of) targeted but not-estimated issues to versions show view\n\n--Description--\nThis feature request/proposal is loosely extracted from #1671#note-7:\r\n\r\n_Artem Vasiliev wrote:_\r\n> [...]\r\n> \r\n> Version page: show not estimated (undone) issues count.\r\n> Count is a link that leads to relevant issues list.\r\n> [...]\r\n\r\nCutout from screenshot posted in #1671#note-8 by Artem Vasiliev:\r\n\r\n!{width: 50%;}.2021-08-22_13-12-09.png!\r\n\r\nI think this feature, albeit with some less prominent coloring, can really ease version scheduling/planning."}]}}
{"custom_id": "401", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nAdd links from roadmap and a specific version to files associated with a version\n\n--Description--\nI can see links from *Files* to *Versions* but not the other way around.\r\n\r\nI was thinking about automatic submission of packages from a build server as *Files*. They would be much more accessible if one could get to them by clicking from an *Issue* to *Version* to a file or download release files from the *Roadmap*."}]}}
{"custom_id": "402", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nInline autocomplete for versions\n\n--Description--\nIn addition to issues, users and wiki pages autocompletes, I think we should add an inline autocomplete for versions. \r\n\r\nBeside @version:@ which is the current syntax to link to a version, we can use at least as triggers @!@ or even @v:@."}]}}
{"custom_id": "403", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nHighlight selected version on the Roadmap view\n\n--Description--\nIt can be helpful to have the selected version's heading highlighted on the Roadmap (@versions#index@) view. This would also be in line with what we currently already have for selected issue journals, forum topic replies (i.e. messages) and wiki page headings.\r\nThis proposed highlight could have a border-radius dependent of #39880.\n\n-- Ticket2\n--Subject--\nAdd a small border-radius to selected (author) headings\n\n--Description--\nNow that border-radius is already sparsely used in the Redmine core, there are three additional places that I've come across where a small border-radius (3px?) would be nice to have:\r\n* selected issue journals\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#history div:target h4.note-header</code></pre>\r\n}} \r\n* selected forum topic replies (i.e. messages)\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">#replies .reply:target h4.reply-header</code></pre>\r\n}}\r\n* selected wiki page headings\r\n** {{collapse(CSS selector:)\r\n<pre><code class=\"css\">div.wiki a:target + h1, div.wiki a:target + h2, div.wiki a:target + h3, div.wiki a:target + h4, div.wiki a:target + h5, div.wiki a:target + h6</code></pre>\r\n}}\r\n\r\nThere actually is a fourth place, but that one (the progress bars) needs, IMHO, more work first and in addition to it, so I'll leave it out of this issue to keep this small and easy.\r\n-- _author edit: this is now tracked in #39881._\r\n"}]}}
{"custom_id": "404", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nThe i18n of the help \n\n--Description--\nThis is an example of the i18n of the help.\r\n\r\noriginal http://redmine.rubyforge.org/svn/tags/0.6.3\r\n"}]}}
{"custom_id": "405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nCommit message shouldn't be rendered by Markdown or Textile\n\n--Description--\nHello, our team is using Redmine 3.30 and git as VCS.\r\nGitExtension is the default git client.\r\n\r\nRecently, we changed our project text formatting from Textile to Markdown, the problem happened:\r\n\r\n*The commit message in 'Repository' will rendered as Markdown format as well.*\r\n\r\n---\r\nReason:\r\n\r\nWhen merging a branch in GitExtension, it will automatically generating a commit message like the following:\r\n\r\n<pre>\r\n# Conflicts:\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n#\tpath/to/conflict/file\r\n</pre>\r\n\r\n---\r\n\r\nCompared with some other website(such as GitHub, Gitlab etc...)\r\n\r\nThey didn't treat these commit message as Markdown, just raw plain text.\r\n\r\n---\r\n\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.2.5-p319 (2016-04-26) [x86_64-linux]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.10\r\n  Mercurial                      3.1.2\r\n  Bazaar                         2.7.0\r\n  Git                            2.1.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  no plugin installed\r\n\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "406", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "407", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nChange default text formatter for new installations from textile to common_mark\n\n--Description--\nNowadays, markdown is much more used and known compared with textile. Also, in Redmine, Markdown has better support.\r\n\r\nMy proposal is to change the default setting from textile to markdown."}]}}
{"custom_id": "408", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nTextile and Markdown attachment rendering should support third-party formatters\n\n--Description--\nAs it is implemented currently with #29752, Textile and Markdown attachment rendering is supported +only+ for the core formatters for Textile and Markdown.\r\n\r\n* Textile attachment rendering currently relies on the _bundled_ (custom) RedCloth3 library.\r\n* Markdown attachment rendering currently relies on the _optional_ Redcarpet (or CommonMark, post #32424) libraries, with a fall-back to @Redmine::WikiFormatting::NullFormatter@.\r\n\r\nGiven the info above, currently:\r\n* Textile attachment rendering always works, always relying on RedCloth3 (since RedCloth3 is bundled);\r\n* Markdown attachment rendering +*only*+ works with one of the optional Markdown core formatters installed (relying on Redcarpet or CommonMark) and based on @Setting.text_formatting@.\r\n\r\nRedmine should also provide support for (custom) third-party Textile and Markdown formatters (e.g. RedCloth4 [via a formatter like provided by e.g. \"redmine_redcloth\":/plugins/redmine_redcloth], kramdown, Maruku, RDiscount, etc.), based on what formatters (core and third-party) are actually available.\r\nI think the easiest way to implement this is to let formatters provide a way to indicate that they provide support for either a Textile or Markdown flavor."}]}}
{"custom_id": "409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nUpdate sanitization rules to allow footnotes markup to match the original structure\n\n--Description--\nThis is related to #35892.\r\n\r\nThe sanitisation rules should allow footnotes markup to render as they are generated by commonmark gem for easier customisations."}]}}
{"custom_id": "410", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nJSON formatting\n\n--Description--\nIt looks that Redmine does not support JSON code formatting.\r\n\r\nPressing \"code\" button produces a list and there is no \"json\" in it.\r\n\r\nIt would be great to have this language added here."}]}}
{"custom_id": "411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nSupport multiple multi-word phrases in the search engine\n\n--Description--\nCurrently, the search engine does not support multiple multi-word phrases.\r\n\r\nFor example, we cannot search objects that contain two phrases \"closed issue\" and \"closed version\". If you give a search string @\"closed issue\" \"closed version\"@, the search engine search for objects containing three strings \"closed issue\", \"closed\", and \"version\". This is due to the behavior of @Redmine::Search::Tokenizer#tokens@.\r\n\r\n<pre><code class=\"ruby\">\r\nRedmine::Search::Tokenizer.new(%q|\"closed issue\" \"closed version\"|).tokens\r\n=> [\"closed issue\", \"closed\", \"version\"]\r\n</code></pre>\r\n\r\nIf the Tokenizer returns two tokens, \"closed issue\" and \"closed version\" for the same input, it will be possible to search for multiple multi-word phrases.\r\n\r\n"}]}}
{"custom_id": "412", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nDrop Ruby 2.7 and 3.0 support\n\n--Description--\nRuby 2.7 is EOL (https://www.ruby-lang.org/en/downloads/branches/)\r\nSince Redmine 4.2 supports Ruby 2.7 at most, this should also be set to EOL..."}]}}
{"custom_id": "413", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAllow multiple footnotes per single word\n\n--Description--\nI stumbled upon this while trying to update [[RedmineInstall]] earlier today (v.336). The mention of \"2.7\" in the \"Supported Ruby versions\" column on the \"4.2\" row in the \"Ruby interpreter and supported databases\" table needs to have a reference to footnote !#1 too, but this seems in no way possible to achieve currently.\r\n\r\nThis was found on redmine.org so applies to the Textile formatter. I haven't tested this with other formatters.\r\n\n\n-- Ticket2\n--Subject--\nSupport tab separated text in importers\n\n--Description--\nImporters in Redmine currently support comma-separated text and semicolon-separated text but don't support tab-separated text.\r\n\r\nSince tab-separated text is as widely used as CSV, it is nice to have the feature to import it in Redmine."}]}}
{"custom_id": "414", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Redmine::Plugin proxy method for Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type\n\n--Description--\nFollowing #39862 I wonder: wouldn't it be neater to add a dedicated proxy method to @Redmine::Plugin@ (something like @Redmine::Plugin#attachment_object_type@) for @Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type@?\r\nThis way plugin authors don't have to reach into Redmine core internals when implementing AAA(ActsAsAttachable) for their own plugin models themselves. How do other people think about this?\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "415", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Redmine::Plugin proxy method for Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type\n\n--Description--\nFollowing #39862 I wonder: wouldn't it be neater to add a dedicated proxy method to @Redmine::Plugin@ (something like @Redmine::Plugin#attachment_object_type@) for @Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type@?\r\nThis way plugin authors don't have to reach into Redmine core internals when implementing AAA(ActsAsAttachable) for their own plugin models themselves. How do other people think about this?\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Redmine::Plugin proxy method for Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type\n\n--Description--\nFollowing #39862 I wonder: wouldn't it be neater to add a dedicated proxy method to @Redmine::Plugin@ (something like @Redmine::Plugin#attachment_object_type@) for @Redmine::Acts::Attachable::ObjectTypeConstraint.register_object_type@?\r\nThis way plugin authors don't have to reach into Redmine core internals when implementing AAA(ActsAsAttachable) for their own plugin models themselves. How do other people think about this?\n\n-- Ticket2\n--Subject--\nUpdate Plugins \u00bb That Thread\n\n--Description--\nThere is a very useful plugin https://www.redmine.org/plugins/that_thread. But it was developed a year ago for Redmine 4.2.x, 4.1.x, 4.0.x, 3.4.x. \r\n\r\nNow it's not installed for Redmine 5.0.1.\r\n\r\nMaybe someone can improve it? (potential paid work, i really need this plugin)"}]}}
{"custom_id": "417", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "418", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "420", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "421", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nDynamic decimal separator, according to country setting\n\n--Description--\nCurrently, glide ratios must be entered with a point as a decimal separator. However, this is not common worldwide, in Germany the comma is used for this and the point as a thousand separator.\r\n\r\nIt would be great if Redmine could take this into account according to the country / language setting ..."}]}}
{"custom_id": "422", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nChange the default value for \"Time span format\" from \"decimal\" to \"minutes\"\n\n--Description--\nThe setting \"Time span format\" was introduced in Redmine 3.4.0 (#23996) and you can switch the format of time to \"minutes\", \"HH:MM\" style (\"0:45 h\" instead of \"0.75\").\r\n\r\nThe format \"minutes\" (\"0:45 h\") is much more natural and easier to understand than the format \"decimal\" (\"0.75\"). However, the default value of \"Time span format\" is still \"decimal\", and some users may not know this setting.\r\n\r\nSince the minutes format is more natural and convenient for most users, I think it is better to set the \"minutes\" format as the default for newly installed Redmine instances."}]}}
{"custom_id": "423", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "425", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\nAllow using ideographic space (U+3000) as a separator for search terms\n\n--Description--\nThe attached patch allows using \"\u3000\" (ideographic space, U+3000) as a separator for search terms in addition to \" \" (U+0020).\r\n\r\nYou can perform AND searches by separating terms with a space in the search box or issue filter. Currently, \"space\" means characters that match the regular expression `\\s` in this context. It is sufficient in many cases to consider `\\s` as space, but not enough in some languages at least Japanese (and perhaps Chinese). This is because they use \"\u3000\" (U+3000) when writing text, so they often mistakenly enter U+3000 instead of U+0020 when they want to separate search terms.\r\n\r\nActually, many services such as Google, Bing, and GitHub treat U+3000 as a separator. I think it is a small but nice improvement for those who use Redmine in languages that regularly use U+3000 if Redmine will support U+3000 as a separator for search terms."}]}}
{"custom_id": "426", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
{"custom_id": "427", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd an option to render values of Integer- and Float-format custom fields with thousands delimiters\n\n--Description--\n_This is extracted from #22024:_\r\n\r\n> Mischa The Evil wrote in #22024#note-10:\r\n> > Go MAEDA wrote in #22024#note-6:\r\n> > > The patch by Liane Hampe also adds the ability to display thousand delimiters. However, I think displaying thousand delimiters should be out of the scope of this patch. This is because not all users may agree with always displaying the thousand delimiter. Additionally, at this time, entering a value with a thousand delimiter into a custom field results in a validation error. In my opinion, the feature to display thousand delimiters should be discussed in another issue.\r\n> > A separate, additional feature providing a custom field option (using @field_attributes@?) to display thousand delimiters for selected @Float@ (but also @Integer@) custom fields could be nice to have in some cases when dealing with larger values, [...]\r\n> > However, I think that Redmine doesn't need to provide support for entering values with thousands delimiters into a custom field. It feels like overkill to me.\n\n-- Ticket2\n--Subject--\n Request for limitation of byte number to custom field\n\n--Description--\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
{"custom_id": "428", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nAdd Parent Task to 'Group Results By' drop down\n\n--Description--\nI just upgraded to the newest version of Redmine in order to take advantage of the subtask feature.  However I can't group tasks for a particular project by Parent Task.\r\n\r\nTo replicate go to a project and choose \"Issues\" from the top menu.  Choose the \"options\" section and then open up the drop down menu for \"group results by\".  I have attached a screenshot.\r\n\r\n\r\n---------------------\r\nserver info\r\n---------------------\r\nruby 1.8.6 (2007-09-24 patchlevel 111) [i386-linux]\r\nRails 2.3.5\r\nmysql  Ver 14.12 Distrib 5.0.77, for redhat-linux-gnu (i386) using readline 5.1\r\nredmine Revision: 3671\r\n"}]}}
{"custom_id": "429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nAssigned to issuelist filter: added <nobody> value\n\n--Description--\nthe filter in the issue list should list <nobody> as well, to make it possible to filter out issues that are assigned to user X OR not assigned at all\r\n"}]}}
{"custom_id": "430", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nSubtask display fields\n\n--Description--\nI would like to have the option to display certain fields in the Issue hierarchy panel.  It makes it really clear if a estimate of time is not in the total time and would need to be added.\r\n\r\nLike estimated time, start date, and end date.  This should be an overall configuration in settings with just a simple check box next to the field names.\r\n\r\nSo instead of\r\n|\\6.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\4.Parent Issue|\r\n|>New|Bug|#401:|Child Issue 1|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|New||\r\n|>New|Bug|#403:|Child Issue 3|New||\r\n|>New|Bug|#404:|Child Issue 4|New||\r\n|>New|Bug|#404:|Child Issue 5|New||\r\n|>New|Bug|#404:|Child Issue 6|New||\r\n\r\nYou would see\r\n|\\8.Issue hierarchy (Add a subtask) |\r\n|Bug|#400:|\\2.Parent Issue|Start Date:|Est Hrs:|Status|Pct Complete|\r\n|>New|Bug|#401:|Child Issue 1|>.1/1/2012|>.6.0|New|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\r\n|>New|Bug|#402:|Child Issue 2|>.1/1/2012|>.1.0 |New||\r\n|>New|Bug|#403:|Child Issue 3|>.1/2/2012|>.12.0|New||\r\n|>New|Bug|#404:|Child Issue 4|>.1/3/2012|>.4.0|New||\r\n|>New|Bug|#404:|Child Issue 5|>.1/3/2012||New||\r\n|>New|Bug|#404:|Child Issue 6|>.1/3/2012|>.4.0|New||"}]}}
{"custom_id": "431", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nFiltering out specific subprojects (using 'is not' operator)\n\n--Description--\nIt should be possible to select multiple subproject for which you don't want issues in the list. \r\n\r\nThat is besides currently existing @is, all, none@ there also needs to be @is not@. This can not be achieved by selecting multiple projects except specific ones with @is@ filter because new subprojects could be added."}]}}
{"custom_id": "432", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "433", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nAllow forward reference to parent when importing issues\n\n--Description--\nWhen importing issues via CSV with parent relations, the parent issues need to be positioned before child issues. Otherwise the relation will be ignored.\r\n\r\nTo work around this limitation, the issue import could be extended to use multiple passes:\r\n\r\n# one to import basic issue properties\r\n# one to import relations to other issues\r\n\r\nThis way it becomes easier to create the CSV files for imports, since order is no longer important.\r\n\r\nThis change would also be a prerequisite to import general issue relations. Since those cannot be more complex that parent relations and cannot necessarily be linearized properly.\r\n\r\n\r\n\r\nAttached you find a patch series based on trunk r15361.\r\n\r\nWhile implemented the changes, I tried to keep the @Import@ free from issue related information. Other existing @Import@ sub classes - within plugins e.g. - should need as little updates as possible.\r\n\r\n\r\nh3. 0001 Extend test data for issue import\r\n\r\nThis change adds two rows to the existing issue import fixture file. These rows contain a parent and a child issue, while the parent is placed after the child. This would not import properly given the current implementation.\r\n\r\nThe patch also updates the existing tests, where the number of imported issues is asserted.\r\n\r\nh3. 0002 Add test for issue relations to following rows\r\n\r\nThis patch extends the existing parent issue import test to also verify that the newly introduced parent child relation is properly imported. This test fails with the current implementation.\r\n\r\nh3. 0003 Multi-pass CSV import\r\n\r\nThis patch defines a @required_passes@ method within @Import@ which returns @1@ by default and may be overwritten in sub classes. The @IssueImport@ does so and returns @1@ if no @parent_id@ mapping was set, otherwise it returns @2@.\r\n\r\nThe @run@ method is split into @run@ and @run_pass@. The first one is recursive and called once for each pass. It also handles the @max_*@ options. The second is only responsible for reading the rows, creating or updating the ImportItems and passing everything to @build_object@.\r\n\r\nSince @build_object@ may now be called multiple times (once for each pass), the argument list was extended to provide more context. If somebody created a custom import in a plugin, this would need to be changed by the plugin's author.\r\n\r\nIn the @IssueImport@, @build_object@ is now split into @build_issue@ and @build_relations@, the first is called in the first pass, the second in pass 2.\r\n\r\nThe patch also contains a migration, which adds a @completed_passes@ field to @ImportItem@. This is needed to properly (re-)store progress for multi-step imports, like the ones via the web UI.\r\n\r\nFinally the patch adds some test to make sure, that the general behavior of multi-step imports did not change with the introduction of multi-pass imports.\r\n\r\n\r\n*Disclaimer*: I know, this is a rather large change to fix a minor nuisance. But as mentioned earlier, I think, this change is a necessary prerequisite to support importing \"Related Issues\" properly, which I would like to contribute next, if this patch is accepted."}]}}
{"custom_id": "434", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\n\"Updated by\" filter is needed\n\n--Description--\nWhen filtering issues, it is very helpful to have a filter named: \"Updated by\" to list issues changed or updated by some team member(s)."}]}}
{"custom_id": "435", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssue filter menu should have different logical operators like \"AND\", \"OR\", ...\n\n--Description--\nFiltering issues would be more helpful if the filter menu had different logical operators like \"AND\", \"OR\", ..."}]}}
{"custom_id": "436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssues List, Enhanced Filtering - Allowing Multiple Queries & \"OR\"-type constraints\n\n--Description--\nSome of our biggest \"problems\" that causes us to look elsewhere for a solution are:\r\n\r\n* there is no way to use an \"OR\" clause.\r\n* there is no good way to search for multiple issues (its possible to select multiple trackers, statuses, etc. but it is not possible to select multiple subjects nor is it possible to define separate filters per selected filter (e.g. different assignee for each selected tracker) and other similar use cases).\r\n\r\n-------\r\n\r\nOne proposed solution:\r\nI think one of the \"more simple\" methods of adding this feature would be to add a way to define multiple sets of \"queries\"/filters in one search:\r\n\r\nEx. you need to search for two types of issues at once. Tracker A that are assigned to Paul and Tracker B that are assigned to John. You need to see both of these side-by-side to be able to compare the due dates between the two and take action as needed.\r\nYou define your first \"query\"/filter by filtering for Tracker: \"A\" and Assigned to: \"Paul\". After that, you click a \"+\" icon below the filter/options that adds another set of filter/options and you can define your second \"query\"/filter by setting Tracker: \"B\" and Assigned to: \"John\". Click apply and it will run both queries, distinct & union the result set and display accordingly. The displayed columns would be shared between all issues.\r\n\r\nThis could also lead into some sort of combined custom query searching capability if that is something you guys want to explore.\r\n\r\n----"}]}}
{"custom_id": "437", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nSearch in subprojects\n\n--Description--\nHello,\r\n\r\nIn my company we're actually using (recently) a project called \"Bugtrack\" which have different subprojects for different products/specific cases,\r\nbefore adding new issues, support team have to perform a search to see if the bug hasn't been reported yet.\r\n\r\nThe actual problem is that we want to search on the main project \"Bugtrack\" to search in any subproject of this one but we can't.\r\nA feature that allows with an option or whatever to search in a project and his subprojects would be very helpful to us !\r\n\r\nMaybe other users are interested by this feature ?\r\n\r\nThank you !\r\nArnaud"}]}}
{"custom_id": "438", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nAdditional \"Group by results\" option for parent task\n\n--Description--\nThe way our issues are organised is that all issues belong to a parent task, each release has a parent for all of the major items.\r\n\r\nWe then have a summary search view which currently has a search for Parent set to none which allows only the parent tasks to be displayed.\r\n\r\nTo view all subtasks related to each feature the user is forced to click into the parent and view in there or else perform a search for items with that Parent.\r\n\r\nTo improve the user experience for our use case it would be really helpful if the Group by results would have the Parent Task option."}]}}
{"custom_id": "439", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nFilter issues by \"Associated revisions\"\n\n--Description--\nIn the issues view, it would be helpful to filter issues in that way:\r\n* only show issues that have no associated revisions\r\n* only show issues that have associated revisions\r\n* only show issues that have no associated revisions in _<repository>_\r\n* only show issues that have associated revisions in _<repository>_\r\n* (only show issues that have at least N associated revisions)\r\n\r\nIs there already a feature request for that ?"}]}}
{"custom_id": "440", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nLack of access for Watchers if visibility=Issues created by or assigned to\n\n--Description--\nDear,\r\nI would like to report that there is lack of possibility to set access to issues for Watchers if the issues visibility is set as \"Issues created by or assigned to the user\".\r\nIn general it is possible to set the issues visibility as \"ALL issues\" but this is not a good solution when you want to limit access to some issues for certain people (more than author and assigned to).\r\n\r\nTherefore, I kindly ask developers for modifying existing or adding a new option of issues visibility that would provide access for the author, the assigned and additionally for the watchers."}]}}
{"custom_id": "441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "442", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssues Section/Tab -Allow issues to be grouped by Parent\n\n--Description--\nAllow user to select parent issue in group by choices"}]}}
{"custom_id": "443", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssue start date date type changed to date time.\n\n--Description--\nFor tightly scheduled tasks the issue start date needs to be a datetime field.  With that the related links precedes and follows we need a value the and option for minutes or days.  I can't believe others haven't asked for this.  Sorry if it duplicates other requests."}]}}
{"custom_id": "444", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssue filter: new filter: Author's Group\n\n--Description--\nThere is a filter as \"Asignee's Group\", and it would be better to have filter \"Author's Group\"."}]}}
{"custom_id": "445", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nMultiple search terms in \"Subject\" filter\n\n--Description--\nat custom query\r\nI can select single in subject \r\nI can select multiple in issue \r\n\r\nI'd like to select mulutiple likely issue\r\n\r\n\u30fc\u30fcJa\u3000start\u30fc\u30fc\r\n\u30ab\u30b9\u30bf\u30e0\u30af\u30a8\u30ea\u30fc\u306e\u984c\u540d\u306b\u304a\u3044\u3066\r\n\u542b\u3080\u3001\u304a\u3088\u3073\u542b\u307e\u306a\u3044\u306e\u6761\u4ef6\u306b\u3082\r\n\u30ab\u30f3\u30de\u3092\u5165\u308c\u305f\u5834\u5408\u3001\u30a2\u30f3\u30c9\u6761\u4ef6\u3068\u3057\u3066\u307b\u3057\u3044\r\n\r\n\u30c1\u30b1\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u304a\u9858\u3044\u3057\u307e\u3059\r\n\u30fc\u30fcJa\u3000end\u30fc\u30fc"}]}}
{"custom_id": "446", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nImport of issue relations when imported from csv\n\n--Description--\nThere is no ability to import Issue relations when importing from csv.\r\n\r\nPerhaps they can be delimited in different way to fit in one field, or provided in json form inside csv field. "}]}}
{"custom_id": "447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nGroup by parent project\n\n--Description--\nHow do I export a list which includes the parent project name, or group by the parent project?"}]}}
{"custom_id": "448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nShow project tree instead of subprojects in the project selector when you create a new issue \n\n--Description--\nIn #12704, we allowed to select a subproject when you create a new issue. My proposal is to change the behaviour and show the project tree instead of subtasks.\r\n\r\nIn this way, you will be able to select also a parent instead of only children.\r\n\r\n"}]}}
{"custom_id": "449", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssues list\n\n--Description--\nIs it possible the user to see the problem only members of the group? A user \"developer\" has seen the problem of all groups.\r\nAs part of the project are connected by different organizations. There is a need that they are not seen by the task each other. Since each organization is a separate group, it is necessary that users see only the tasks of their group. \u0422ow there is only:\r\nissues_visibility_all\r\nissues_visibility_own\r\nissues_visibility_public\r\n"}]}}
{"custom_id": "450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nQuery links for related issues on issue page\n\n--Description--\nRedmine 4.2.0 and later have query links for subtasks on an issue page (#28471). I think the \"Related issues\" section should also have similar links.\r\n\r\nAlthough there is no filter that can extract all types of related issues as mentioned in #28471, I think the new links can be implemented by using the issue ids filter (#4806).\r\n\r\n!{width: 769px; border: 1px solid grey;}.query-links-for-related-issues.png!"}]}}
{"custom_id": "451", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nMove subtasks section on issues show view into a separate partial\n\n--Description--\nSubject says it all.\r\n\r\nI'll attach a patch that does this."}]}}
{"custom_id": "452", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nRest Api: filter by issue category\n\n--Description--\nIt would be really nice to allow filtering issues by their assigned issue category.\r\n\r\nE.g.:\r\n\r\n<pre>\r\n/issues.json?category_id=1234\r\n</pre>\r\n\r\nPerhaps the filter could be expanded to allow matching string searches? Similar to when searching for sub-strings in custom fields.\r\n\r\n<pre>\r\n/issues.json?category_id=~some-category-search-string\r\n</pre>"}]}}
{"custom_id": "453", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nIssue Tab - View Issue and all its descendants\n\n--Description--\nHello,\r\nI need to see an Issue with all its descendants.\r\n\r\nUntil now the nearest solution I found is filtering by:\r\n\r\n\"Parent task\" \"contains\" \"<root-issue-id>\"\r\n\r\nHowever this does not displays (by design) the parent task itself. \r\n\r\nAnyone knows a way to reach this goal?\r\n\r\nThank you."}]}}
{"custom_id": "454", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nOption to group subtasks within task in issue list\n\n--Description--\nAs one can see in attached screenshot (redmine_1): Both #388 and #400 are subtasks of Task #391, but because of sorting by ID, only the #388 is indented.\r\n\r\nPlease add option to always group subtasks witin it's parent task (example in redmine_2 screenshot)\r\n"}]}}
{"custom_id": "455", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nNegative filters for issue id and parent id for custom queries\n\n--Description--\nThere should be also \"is not\" operator available for \"Issue\" and \"Parent task\" filter.\r\nThat would be very useful to see all issues but these under specific parent(s)."}]}}
{"custom_id": "456", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nAdd Parent task filter and column to Spent time\n\n--Description--\nPlease, add column \"Parent Task\" to report \"Spent Time\".\r\n\r\nDevs track time to Tasks, Tasks is steps / part of decomposition to Stories. To understand, what time track for what story, i need to open all tracks and can's see it in report\r\n\r\n!https://img.serpstat.com/prayer/2022-08-30_182231_1555x907_vY5KsTtKOQ.png!"}]}}
{"custom_id": "457", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nTree view for issues list\n\n--Description--\nDear all, please introduce tree view in issue list where it will be possible to expand/collapse subtask list. It will increase readability of issues list. \r\nIn my case there are a lot of tasks with lot of subtasks and it is very hard to use it this way."}]}}
{"custom_id": "458", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nMultiple issue ids in \"Related to\" filter\n\n--Description--\nMultiple tickets can be specified in the \"Parent Task\" at  custom query.\r\n> Feature #30482 Multiple issue ids in \"Parent task\" filter\r\n\r\nSimilarly, this patch enable multiple tickets to be specified in the \"Related To\" field.\r\n(We (@tomokosimi, @sanak and @tohosaku) created this patch in Japan Redmine Patch Meetup 30th (https://redmine-patch.connpass.com/event/274438/) event.)"}]}}
{"custom_id": "459", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\n\"Any searchable text\" filter for issues\n\n--Description--\nThe attached patches add a new issues filter \"Any searchable text\". Unlike existing filters that check a specific single field, this new filter checks all text-type core fields (subject, description, notes) and searchable custom fields. For example, if you apply the filter \"[Any searchable text] [contains] [recipe]\u201d, the issues list shows issues that contain the word \"recipe\" in the subject, description, notes, or searchable custom fields. This is almost the same behavior as the search box in the upper right corner of the page. Actually, this new filter uses @Redmine::Search::Fetcher@, the code of the existing search box.\r\n\r\nThe new \"Any searchable text\" is useful when you want to find issues that contain a specific keyword but you don't know which field contains the keyword. In Redmine 5.0, you have to try one filter after another, such as \"Subject,\" \"Description,\" \"Notes\", and custom fields. With the new filter, you can find issues that contain the keyword in any of the fields in a single operation.\r\n\r\nWhat is different from the search box in the upper right corner of the page is that this is a filter. This means that you can further refine the result by applying other filters such as the status, assignee, and target version.\r\n\r\n!{width: 934px; border: 1px solid grey;}.clipboard-202304021708-v4fbz.png!\r\n"}]}}
{"custom_id": "460", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nFurther narrow search results with issues filter\n\n--Description--\nThe attached patch adds \"Apply issues filter\" button to the search. Clicking the button will display issues in the search results on the issues page. You can further narrow the search results by adding filters on the page.\r\n\r\nRedmine's search engine sometimes returns a large number of results. However, unlike the Issues page with its powerful filters, the search engine does not offer many ways to further refine such results. This new \"Apply issues filter\" button solves the problem.\r\n\r\n\"Apply issues filter\" will be displayed above the search results when the results include one or more issues. When you click the button, the issues included in the search results will appear on the Issues page. In other words, it converts the search results into an Issues list. You can then use issues filters to further narrow down your search results.\r\n\r\nBy linking the search engine with the issues filter, it will be easier to find the issues you want to see.\r\n\r\n1. \"Apply issues filter\" button is displayed when the search results contain one or more issues.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-osgl9.png!\r\n\r\n2. Click the button to display the issues in the search results in the issues list. You can refine the result by adding other filters.\r\n!{width: 800px; border: 1px solid grey;}.clipboard-202304210006-3mvxw.png!\r\n"}]}}
{"custom_id": "461", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nEnable to display notes count on issues list\n\n--Description--\nI have added the query column to display the Journal Note count in the issues list and made it sortable.\r\nThis feature allows you to easily find issue with a high number of notes directly from the issues list.\r\n\r\n!{width:800px}enable_to_display_notes_count_on_issues_list.png!"}]}}
{"custom_id": "462", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nAdd Issue query option to include parent issue into search results\n\n--Description--\nIssue query returns a list of issues that meets all filters. Often parent issues do not meet all the filters. As a result, query returns a flat list of issues without a way to show hierarchical structure.\r\n\r\nSo, please add a new query option (checkbox) to include all parents of all issues that meets the query filters.\n\n-- Ticket2\n--Subject--\nExtend \"contains\" operator in \"Parent task\" filter to support multiple issue IDs\n\n--Description--\nUnder the \"Parent task\" filter, the \"is\" operator allows users to filter tasks by specifying multiple issue IDs (#30482). I propose extending the \"contains\" operator to multiple issue IDs, like the \"is\" operator.\r\n\r\nWith this feature, you will be able to list all descendants issues of the specified issues. Currently, you can only list child issues of multiple issues with the \"is\" operator but there is no way to list all descendants of multiple issues because the \"is\" operator only accepts single issue ID."}]}}
{"custom_id": "463", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nImmediately send a notify email when a user is added to issue's watcher list\n\n--Description--\nHi, Jean-Philippe, it is a great feature that you add the watcher list to the issue. By this feature, we are now able to select the members who should receive notify email about an issue.\r\n\r\nBut I think it would be more useful that redmine could send a issue's summary info to the watcher when he is added to the list. Do you think so?"}]}}
{"custom_id": "464", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nDescription for issue statuses\n\n--Description--\nWe have the problem that users are not always sure what the semantic of a certain status is and what status they should set for a ticket when updating it.\r\n\r\nTherefore it would be nice to be able to add a documentation to issue statuses, especially when introducing custom statuses. The documentation could then be presented to the user as a tooltip when selecting a status for a ticket."}]}}
{"custom_id": "465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAllow adding user groups as watchers for issues\n\n--Description--\nHaving the nice user group feature in Redmine 0.9, it would be very handy to be able to add whole group as observers for issues. Currently, only user accounts can be added as observers."}]}}
{"custom_id": "466", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nCRUD operations for \"custom field definitions\" (not setting custom fields on issues!)\n\n--Description--\nmy Redmine Java API tests check that a new Issue has some custom fields set.\r\nto do that, I have to create those custom field definitions in Redmine manually first.\r\n\r\nwould be nice to improve the tests so that they could create the required custom fields in Redmine - but unfortunately Redmine's REST API does not allow that.\r\nAgain, I'm talking about creating custom fields *definitions* in Redmine install, not setting already defined custom fields on an Issue.\r\n\r\nI understand that this operation would probably require an admin permission - that's fine."}]}}
{"custom_id": "467", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nHide Issue History\n\n--Description--\nhello,\r\nWe are using redmine to manage our change management processes.\r\nThe functional user open end close the issue, other status are dealt by IT team. My problem is that i don\u2019t want to give the functional user the ability to view the history  or details of the issue ( what IT team are doing). \r\nMy questions are ?\r\n-\tCan i hide issue details based on user role or permission ?\r\n-\tCan i disable clickable links to  on the issues list view based on role ?\r\nIf not, what can i do ?\r\n\r\nThanks \r\n"}]}}
{"custom_id": "468", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nDefault value for \"User\" type custom field\n\n--Description--\nWe have added \"Resolved By\" and \"Resolution Type\" custom fields, so we can search who submitted a fix for a issue. We make it mandatory only when the status is changed to \"Resolved\".\r\n\r\nIt would be very useful if we can provide a default value of \"current\" user to the field when it is mandatory. That way users are saved an extra click. It maynot seem like much, but we use Redmine extensively, for all our work (bugs, tasks, logging time, Wiki etc.) and anything I can do to make the process easier makes the development team's life easy.\r\n\r\nThanks,\r\nKetki\r\n"}]}}
{"custom_id": "469", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nProject's custom fields should be available in issue lists columns\n\n--Description--\nIn an issue list, it is possible to filter by Project custom field but it is not possible to display those project custom fields in the issue list (fields not present in Options/Available columns)"}]}}
{"custom_id": "470", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nPer-tracker Issue Categories\n\n--Description--\nRedmine issue categories let you organize issues. Being able to auto-assign new issues to a specific user based on the chosen category is great.\r\n\r\nBut these categories are set for the whole project. What if these categories should apply to one specific tracker?\r\n\r\nThis plugin allows you to specify a tracker for each category. Making the issue category list shorter, the issue form is cleaner and it helps the user to avoid mistakes."}]}}
{"custom_id": "471", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAll issues private - Setting by project\n\n--Description--\nWe have some projects which require the issues to be private, and others where it is desirable to have the issues public.\r\n\r\nIs this something we can configure currently?(Redmine 3.3.1.stable)?\r\n\r\nIf not, what's the best way to implement this?\r\n\r\nThanks!!\r\n"}]}}
{"custom_id": "472", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAllow both '.' and ',' decimal symbols for input of float custom fields\n\n--Description--\nIn Redmine, inputting decimal values such as \"3.15\" of \"3,15\" in either \"Estimated time\" or \"Spent time\" fields is correctly interpreted and converted back to the proper float format: 3.15 .\r\n\r\nI think this behaviour should also be applied to float custom fields."}]}}
{"custom_id": "473", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nCustom Fields available over the API\n\n--Description--\nHi Guys,\r\n\r\nthe /custom_fields.json is not available for normal project members.\r\n\r\nI have to validate several custom fields before submit, because redmine reject the issue if custom fields don't match the right values. \r\n\r\nPlease make the custom_fields available for projects with the restriction to the members, so that i can set custom fields in the right way.\r\n\r\nRegards Tobias"}]}}
{"custom_id": "474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nSpent time - CUSTOM fields - permissions\n\n--Description--\nDears,\r\n\r\nfirst of all thanks a lot for all the effort!\r\n\r\nWe really appreciate \"Issue custom fields permissions\" possibility settings.\r\n\r\nCould you please implement the same feature/approach for \"Spent time custom fields\"? I believe this could help a lot for many redmine users and the approach/code could be reused.\r\n\r\nWe need to hide some custom fields for some users, could be also helpful if some would be mandatory during specific stages/statuses of the issue with correlation to user's permissions, etc.\r\n\r\nDo you understand our needs? Any questions please? Can I help you somehow with this?\r\n\r\nThanks a lot\r\nKind regards\r\njb"}]}}
{"custom_id": "475", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nIssue Import - Dynamic Parent pasks\n\n--Description--\nWe use the issue import feature in Redmine when we have a new project. In every project there is a bunch of issues, which cover typical tasks (design, deployment, accounts, testing e.g.). These tasks are connecetd between each other via parent task. We\u00b4d like to connect the issues directly with the import. But we cannot insert the explicit issue number, because the parent issues don\u00b4t exist before import. And the second reason is that we want to us the import file as template, so there cannot be specific numbers.\r\n\r\nUseful would be a kind of dynamic link between the issues. Maybe one column in the import file represents a local ID, which can be used for the dynamic parent task link."}]}}
{"custom_id": "476", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nI need put the custom fields lavel in multiple language\n\n--Description--\nInternationalization the custom fields is very a very important feature y think is posible since the creation of the custom field, only for administrators. Then if i change the language of redmine in my perfil, change the language of the of custom field.\r\nIts posible?"}]}}
{"custom_id": "477", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nCustom fields list type improvement\n\n--Description--\nEvery custom field in database has it's own ID in *custom_fields* table, and it's accessible thru *API*.\r\n\r\nHowever, when type is *LIST*, +list item values should be stored in separate table+, because of relational database integrity.\r\n\r\nIf Redmine is to be integrated with some other software via API, and it needs to use custom fields of type LIST, integration can be\r\nperformed only by value not by value's ID, which means, if someone changes value, 3rd party application's database integrity is lost, if it were ID, then integrity won't be lost, as it's in every other table of Redmine, or any other relational database. "}]}}
{"custom_id": "478", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nNew optional column for issue list: number of comments/updates\n\n--Description--\nJust to get a quick impression if a ticket was updated/commented at all or if it is heavily discussed. If no comment/update was done yet an empty string instead of a '0' could be shown."}]}}
{"custom_id": "479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nDoes redmine support bulk edit time log?\n\n--Description--\nnan"}]}}
{"custom_id": "480", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAllow assigning issue to any user\n\n--Description--\nCurrently it's possible to assign issue only to project members (and original author of the issue). It would be helpful to allow (for example only to admins / superusers) assigning issue to any user in the system (for example adding small \"+\" icon next to the default dropdown).\r\n\r\nIt's already possible with watchers and it would be helpful for ad-hoc tasks."}]}}
{"custom_id": "481", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n'View all Issues' adds project custom fields  Columns displayed on the issue list\n\n--Description--\n'View all Issues' adds project custom fields  Columns displayed on the issue list is very helpful feature!\r\n\r\n\r\n\r\n"}]}}
{"custom_id": "482", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nMake \"First name\" and \"Last name\" optional (not required) in user's settings\n\n--Description--\nReasoning:\r\n* in some Redmine installations first and last name may not be required as people might not know each other in person. *Login by itself may be enough to fulfill the need for identification* (see Github, Twitter and so on). This is especially true for open source projects communities.\r\n* some people may not like to be *forced to resign from their privacy*. When user is forced to provide data he does not want to, he will probably provide fake data. Value of fake data is not greater that that of no data. This is related to #28106.\r\n* there is already option in Redmine to set *user display format to login only* (instead of first/last name).\r\n* some jurisdictions may require sites that *gather personal data to comply with specific laws*. Again if Redmine is used by open source project communities it may place an unnecessary burden on site administrators.\r\n* some communities largely make *use of only one name* and requiring 2 names is requiring impossible. Related: #1595\r\n\r\nI propose to either:\r\n# Make first and last name optional\r\nor\r\n# Add administrative setting to control whether first and last names are optional or required."}]}}
{"custom_id": "483", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nmake version description field rich\n\n--Description--\nit would be great if we could have a formatted description field on Version's such that #issue get linked and other useful information can be more easily shown"}]}}
{"custom_id": "484", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nPer role visibility settings for spent time custom fields\n\n--Description--\nBased on the work made by Jens Kr\u00e4mer in #23997, I've created a patch that adds role visibility settings for spent time custom fields (including two tests).\r\n\r\n"}]}}
{"custom_id": "485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nWatcher can see tickets independent from issue visibility\n\n--Description--\nHello Redmine Team,\r\n\r\nwe would need the following configuration option: \r\nIn our projects, our members have the issue visibility \"Issues created by or assigned to the user\".\r\nThis is set by default, due to GDPR and internal reasons.\r\n\r\nFor some cases, we would need to allow watchers to see the issue and also be informed via E-Mail about changes. But with above issue visibility this is not possible. We can add watchers, but of course, they do not see the issue.\r\n\r\nIn contrast, setting the issue visibility to \"All non private issues\" would allow them to see too much tickets.\r\n\r\nSo a combination would be great: general setting for visibility is \"Issues created by or assigned to the user\" but with the exceptional case, if a person is assigned as watcher.\r\nIt should be possible, that the watcher can see those issues, he has been added to.\r\n\r\nThanks in advance."}]}}
{"custom_id": "486", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nRedmine links: Issues: add link for subject\n\n--Description--\nUsing examples from https://www.redmine.org/projects/redmine/wiki/RedmineTextFormattingTextile, please consider adding to ...\r\n<pre>\r\n#124\r\n#124-6\r\n#124#note-6\r\n</pre>... a new link format which would also display the current subject of the issue, say \r\n<pre>\r\n#124:\r\n#124-6:\r\n#124#note-6:\r\n</pre>This feature would allow the user to know the subject of an issue link without having to open the link.\r\n \r\nVersions\r\n<pre>\r\nroot:~# aptitude show postgresql-9.6 | grep Version\r\nVersion: 9.6.17-0+deb9u1\r\nroot:/usr/share/redmine# ruby bin/about\r\n\r\nsh: 1: svn: not found\r\nsh: 1: darcs: not found\r\nsh: 1: hg: not found\r\nsh: 1: cvs: not found\r\nsh: 1: bzr: not found\r\nEnvironment:\r\n  Redmine version                3.3.1.stable\r\n  Ruby version                   2.3.3-p222 (2016-11-21) [x86_64-linux-gnu]\r\n  Rails version                  4.2.7.1\r\n  Environment                    production\r\n  Database adapter               PostgreSQL\r\nSCM:\r\n  Git                            2.11.0\r\n  Filesystem                     \r\nRedmine plugins:\r\n  redmine_category_watchers      0.0.1\r\n  redmine_close_button           0.0.8\r\n  redmine_emojibutton            0.4.1\r\n</pre>"}]}}
{"custom_id": "487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n\"Copy link\" feature for issue and issue journal\n\n--Description--\nWhen you are looking at a issue with Redmine and want to share the URL, if you copy the URL with a browser, it will be a long URL with many unnecessary parameters such as issue_count and prev_issue_id.\r\n\r\nI think it would be convenient to be able to copy a simple URL from the view.\r\n\r\n* URL of the issue to be copied\uff1a @https://<your redmine>/issues/1@\r\n* URL of the issue journal to be copied\uff1a @http://<your redmine>/issues/1#note-1@"}]}}
{"custom_id": "488", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nFilter issues by file description\n\n--Description--\nCurrently, Redmine has a feature to filter issues by attachment file name (#2783).\r\n\r\nI think it would be even useful if it is possible to filter issues by attachment file description. Using both file name and description makes it much easier to find files or issues. "}]}}
{"custom_id": "489", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nDescription of issue statuses\n\n--Description--\nI think that issue statuses will benefit from an additional description field. This field may contain information about the status. Also this description may appear on balloon when users hover with mouse over the status names."}]}}
{"custom_id": "490", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAccess custom fields in project specific activities via Redmine API\n\n--Description--\nI created a custom field in the activities that should contain different code for each activity. Also the codes could be different in the different projects. This is supported from Redmine and works fine.\r\n\r\n!activities.png!\r\n\r\nI tried to access this data from outside (using Python-Redmin library) and it seems to be impossible. The developers of the library said that this is not supported from the Redmine API and they cannot solve this problem. I will appreciate extension of the Redmine API that will allow access to custom fields in the activities."}]}}
{"custom_id": "491", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAllow subject and priority issue attributes (i.e. tracker fields) to be disablable\n\n--Description--\nI see many use-cases where items which are tracked as Redmine issues lack a priority and/or a subject. They could e.g. lack both a priority and a subject altogether or lack a priority and substitute the subject attribute with a title or name attribute in the form of a custom field.\r\n\r\nI think it would be great if Redmine could support such configurations without the need for users/admins to resort to (custom) workarounds. That way, the bare minimum of issue attributes would consist of only the status attribute (by disabling all the fields in the tracker config combined with setting the remaining fields to read-only in the workflow field permissions).\r\n\r\nUse-case examples:\r\n* collection management (books/movies/CDs/DVDs/BDs/recipes, etc.)\r\n* (software) license management\r\n* inventory management\r\n* contact management\r\n* vacation-/presence management\r\n* appointment management\r\n* etc.\r\n\r\nIn the case that such entities are tracked as Redmine issues, an administrator can already modify/override the respective Redmine core translations easily via a plugin to globally rename 'issues' into a more general term like 'items'. This cannot be done with the same ease to e.g. rename the subject attribute to a title attribute as issues of other trackers (e.g. an old-school defect tracker) use the same attribute OOTB, hence the request to also make the subject attribute disablable."}]}}
{"custom_id": "492", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nPlugin that Includes spent hours in issues REST API responses\n\n--Description--\nHi there,\r\n\r\nI wrote a plugin which extends original issues' REST API feature with following:\r\n\r\n* include spent hours in records of responses to REST API request\r\n\r\nIf this UX is built in to original Redmine, I'm happy!\r\n\r\nBuilt for Redmine 4.1.\r\n"}]}}
{"custom_id": "493", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAdd possibility to add custom field of type key/value list to timelog reports\n\n--Description--\nCurrently only plain custom fields from type lists are possible...\r\n\r\nEnvironment:\r\n  Redmine version                4.1.1.stable.19730\r\n  Ruby version                   2.5.1-p57 (2018-03-29) [x86_64-linux-gnu]\r\n  Rails version                  5.2.4.2\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\n  Mailer queue                   ActiveJob::QueueAdapters::AsyncAdapter\r\n  Mailer delivery                smtp\r\n\r\n "}]}}
{"custom_id": "494", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nShow/hide private comments\n\n--Description--\nI'm creating a feature request as suggested here: https://www.redmine.org/boards/2/topics/66625\r\nWe need the possibility to show/hide private comments.\r\nPlease see to my solution.\r\n\r\nThe solution in Redmine core doesn't have to be like this. Maybe adding a checkbox 'Show private comments' to 'My account' page would do."}]}}
{"custom_id": "495", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nDiferentiate between \"comment\" and \"edit\", Issues.\n\n--Description--\nCurrently when one wants to edit description of an issue you need to make 2 movements:\r\n1. click to edit to open issue editions interface it self, and then\r\n2. click in description editions specific button.\r\nWhich is quite unproductive, and given redmine is a software to increase productivity this should be improved :). \r\n\r\nbut more importantly this is unintuitive, confusing, as well as being ambigious,\r\nbecause when someone intends to edit something in a issue they assume description editions would be included. Many times people just assume that one needs to be a administrator of the instance to do so, given the \"edit description\" feauture is a little bit not obvious.\r\n\r\nSOLUTION\r\nSeparate the experience in two in the right upper corner, or by adding a feature/button for just the note section bellow the issue report:\r\nediting -> refering to editions on description\r\ncommenting -> refering to further editions on \"notes\" section bellow issue report\r\n\r\nI understand that both are the same technically but it makes less understandable, if there isnt a separation of the two. Cheers Irelativism."}]}}
{"custom_id": "496", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nAPI  allow display \"watchers\"  when listing several issues\n\n--Description--\nHello\r\n \r\nThe Redmine API  allow listing \"watchers\" when returning an issue(\"/issues/{id}.json?include[]=watchers\"),\r\nbut not when listing several issues(\"/issues.json?include[]=watchers\").\r\nWe propose this feature in this PR (https://github.com/redmine/redmine/pull/136).\r\nThank you for your help."}]}}
{"custom_id": "497", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nredmine computed custom field\n\n--Description--\ni think this plugin must be by default in core redmine \r\nall users need it"}]}}
{"custom_id": "498", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n\"Unifying\" core/custom field logic\n\n--Description--\nAs pointed out in #12005, the schism between \"core\" fields and custom fields, is quite a pain in the neck, when trying to apply plugin logic to all fields.\r\n\r\nI have created this issue in the hopes that the Redmine dev team, would consider unifying the logic behind core and custom fields, to facilitate plugin development targeting fields, whether they be custom or \"core\"."}]}}
{"custom_id": "499", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\nHow to modify an email template\n\n--Description--\nThe email notification about an issue update contains two parts:\r\n# 1.information from journal what have changed\r\n# 2.issue overview \r\n\r\nSometimes the full issue overview is very lang,because I defined many fields in an issue,and My question is:\r\nHow to modify an email template to implement custom content or How to delete the second part(issue overview) in the email notification?\r\n\r\nRedmine version: 4.0.2-1\r\n"}]}}
{"custom_id": "500", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "qwen-max", "messages": [{"role": "user", "content": "\n    Please compare the following two requirements, with subject and description, and tell me whether they are very similar and should be duplicated.\n    Please reply with the following format:\n    * Probability: a number between 0% to 100%, showing how much you recommend to set the two tickets to duplicated\n    * Analysis: Provide your detailed recommendation\n    * New Requirement: If the probability is > 70%, draft a new requirement to combine the old two requirements, with\n    ** Subject: <the new subject>\n    ** Description: <the new description>\n    \n\n-- Ticket1\n--Subject--\nStatic custom field for informational purpose\n\n--Description--\nCreate a new kind of field that contains static information readable only.\r\nThis custom field value is shared among issues and no dedicated value is set in issue.\r\n\r\nSee context of this request here : https://www.redmine.org/boards/1/topics/69072\n\n-- Ticket2\n--Subject--\n\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306bbyte\u6570\u5236\u9650\u8ffd\u52a0  Request for limitation of byte number to custom field\n\n--Description--\n\u73fe\u5728\u30ab\u30b9\u30bf\u30e0\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u6587\u5b57\u6570\u5236\u9650\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001byte\u6570\u5236\u9650\u3092\u304b\u3051\u305f\u304f\u3001\u3054\u691c\u8a0e\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\u76ee\u7684\u3068\u3057\u3066\u306f\u3001\u793e\u5185\u306e\u751f\u7523\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u306b\u306a\u308a\u307e\u3059\u3002\r\n\r\nCurrently, custom fields have limitation only for number of characters.\r\nWe would like you to add limitation of byte number for operation of redmine with our production system.\r\n\r\nJapanese has full-width characters(2bytes) and half-width characters(1byte).\r\n\r\nThank you for your cooperation in advance."}]}}
